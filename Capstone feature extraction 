{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1 (1).ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anujgoyall/Speech-Emotion-Recognition-/blob/main/Capstone%20feature%20extraction%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zj19akYooolP"
      },
      "source": [
        "#Speech Emotion Analyzer using Convolutional Neural Network\n",
        "#Importing Libraries\n",
        "import os # provides functions for interacting with the operating\n",
        "import sys # provides information about constants, functions and methods\n",
        "import glob # glob module is used to retrieve files/pathnames matching a specified pattern\n",
        "import numpy as np # used for working with arrays\n",
        "import pandas as pd # library used for data analysis \n",
        "\n",
        "'''Import audio files\n",
        "pip install librosa. Run this command in terminal to install librosa library'''\n",
        "\n",
        "import librosa # librosa is a package to use audio files\n",
        "import librosa.display  # for usage with audio signals\n",
        "from scipy.io import wavfile #to import wav file\n",
        "import scipy.io.wavfile\n",
        "#import sys\n",
        "import numpy as nm\n",
        "''' Importing plotting packages'''\n",
        "import matplotlib.pyplot as plt  #Plotting library\n",
        "from matplotlib.pyplot import specgram \n",
        "import matplotlib.pyplot as plt \n",
        "import seaborn as sns \n",
        "\n",
        "''' Import Keras & Tenserflow packages'''\n",
        "#pip install keras\n",
        "#pip install tensorflow\n",
        "import keras # to define and train neural network models\n",
        "from keras import regularizers \n",
        "from keras.preprocessing import sequence \n",
        "from keras.models import Sequential \n",
        "from keras.layers import Dense, Embedding \n",
        "from keras.layers import LSTM\n",
        "from keras.preprocessing.text import Tokenizer \n",
        "#from kersas.preprocessing.sequence import pad_sequences \n",
        "from keras.utils import to_categorical \n",
        "from keras.layers import Input, Flatten, Dropout, Activation\n",
        "#from keras.layers import conv1D, MaxPoling1D, AveragePooling1D\n",
        "from keras.models import Model\n",
        "#from keras.models import ModelCheckpoint\n",
        "from sklearn.metrics import confusion_matrix\n",
        "\n"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8eoJ8j8bos-v"
      },
      "source": [
        ""
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lzVMM4Wrrnvq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "42243c39-691e-49f7-f107-97bd360fb72c"
      },
      "source": [
        "!pip install Pydrive"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: Pydrive in /usr/local/lib/python3.6/dist-packages (1.3.1)\n",
            "Requirement already satisfied: PyYAML>=3.0 in /usr/local/lib/python3.6/dist-packages (from Pydrive) (3.13)\n",
            "Requirement already satisfied: oauth2client>=4.0.0 in /usr/local/lib/python3.6/dist-packages (from Pydrive) (4.1.3)\n",
            "Requirement already satisfied: google-api-python-client>=1.2 in /usr/local/lib/python3.6/dist-packages (from Pydrive) (1.7.12)\n",
            "Requirement already satisfied: rsa>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from oauth2client>=4.0.0->Pydrive) (4.6)\n",
            "Requirement already satisfied: six>=1.6.1 in /usr/local/lib/python3.6/dist-packages (from oauth2client>=4.0.0->Pydrive) (1.15.0)\n",
            "Requirement already satisfied: httplib2>=0.9.1 in /usr/local/lib/python3.6/dist-packages (from oauth2client>=4.0.0->Pydrive) (0.17.4)\n",
            "Requirement already satisfied: pyasn1>=0.1.7 in /usr/local/lib/python3.6/dist-packages (from oauth2client>=4.0.0->Pydrive) (0.4.8)\n",
            "Requirement already satisfied: pyasn1-modules>=0.0.5 in /usr/local/lib/python3.6/dist-packages (from oauth2client>=4.0.0->Pydrive) (0.2.8)\n",
            "Requirement already satisfied: google-auth>=1.4.1 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.2->Pydrive) (1.17.2)\n",
            "Requirement already satisfied: google-auth-httplib2>=0.0.3 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.2->Pydrive) (0.0.4)\n",
            "Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.2->Pydrive) (3.0.1)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth>=1.4.1->google-api-python-client>=1.2->Pydrive) (4.1.1)\n",
            "Requirement already satisfied: setuptools>=40.3.0 in /usr/local/lib/python3.6/dist-packages (from google-auth>=1.4.1->google-api-python-client>=1.2->Pydrive) (50.3.2)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8H_mj532u9rK"
      },
      "source": [
        "from pydrive.auth import GoogleAuth\n",
        "from pydrive.drive import GoogleDrive\n",
        "from google.colab import auth\n",
        "from oauth2client.client import GoogleCredentials"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R83l_SpQvM3S"
      },
      "source": [
        "auth.authenticate_user()\n",
        "gauth = GoogleAuth()\n",
        "gauth.credentials = GoogleCredentials.get_application_default()\n",
        "drive = GoogleDrive(gauth)"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nZ8RALl7vmBd"
      },
      "source": [
        "\n",
        "#downloaded = drive.CreateFile({'id':\"1q4Y6KHLdPXABKUe2FE8uVj2cZ0PbBKdO\"})   # replace the id with id of file you want to access\n",
        "#downloaded.GetContentFile('audio_speech_actors_01-24')        # replace the file name with your file\n"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aTx0KdKEv_o9"
      },
      "source": [
        "import glob"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fudpSm3EwD0E"
      },
      "source": [
        "from google.colab import drive"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zt9mRMWy0uIs",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8fd4d206-3d7d-4793-da50-05a0a054a3d6"
      },
      "source": [
        "drive.mount('/content/drive',force_remount=True)"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EAPXiSi_1qxQ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "be6b16a2-730f-4fa7-d3e8-c85006a62ae8"
      },
      "source": [
        "!ls \"/content/drive/My Drive\""
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "'20 shore breeze dr'    heli\t\t      Shadi\n",
            "'Anuj EI forms'        'Lunar Eclipse'\t      Sponsor\n",
            "'Assignment 1'\t       'Mom- Dad'\t      Stocks\n",
            "'Colab Notebooks'      'Niagara Falls 2020'   swati\n",
            "'Condo Lease'\t       'Python Tutorial 1'    Tax\n",
            " creditcard_csv.csv     Rainbow\t\t     'Titanic dataset'\n",
            " foo.txt\t        RawData\n",
            "'Getting started.pdf'   Resume\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-8abZDeu2XUz",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cd5629cf-8f5d-435a-9f7e-fc747b201182"
      },
      "source": [
        "#downloaded = drive.CreateFile({'id':\"1lasJX-rkSCxzhcvauvSnMX2RPzQG7Ko4\"})   # replace the id with id of file you want to access\n",
        "#downloaded.GetContentFile('/content/gdrive/My\\ Drive/RawData/Ravdess/audio_speech_actors_01-24')        # replace the file name with your file\n",
        "import os\n",
        "os.path.isfile(\"content/gdrive/My Drive/RawData/Ravdess/audio_speech_actors\")"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N_nf8tGbzQPb"
      },
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')\n",
        "\n",
        "#with open('/content/drive/My\\ Drive/RawData/Ravdess/audio_speech_actors_01-24', 'w') as f:\n",
        " # print('Swat')\n",
        "  \n",
        "#!cat /content/drive/My\\ Drive/RawData/Ravdess/audio_speech_actors_01-24"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4hWm2imA0N5r",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "469d209b-c4ff-41ba-c5b3-4f1e125bc2a6"
      },
      "source": [
        "!pwd"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fSa3wx5I0UkF"
      },
      "source": [
        "import os\n",
        "os.chdir('/content/drive/My Drive/RawData/Ravdess/audio_speech_actors')\n"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tnQrMVmo0mht",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a721e09d-f41f-44f3-ed1c-a774e20b4808"
      },
      "source": [
        "currentDir= !pwd\n",
        "print(currentDir)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['/content/drive/My Drive/RawData/Ravdess/audio_speech_actors']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oGA0fpZB00YI"
      },
      "source": [
        "rawdata_list = os.listdir('/content/drive/My Drive/RawData/Ravdess/audio_speech_actors_01-24')"
      ],
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6WQeke3B04U4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "af559b81-a7fb-43e4-d73c-68b419e1e701"
      },
      "source": [
        "print(rawdata_list)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['03-01-04-01-01-01-09.wav', '03-01-04-01-02-02-09.wav', '03-01-03-02-01-01-09.wav', '03-01-03-02-02-02-09.wav', '03-01-04-02-02-01-09.wav', '03-01-03-01-02-02-09.wav', '03-01-03-02-02-01-09.wav', '03-01-04-01-01-02-09.wav', '03-01-03-02-01-02-09.wav', '03-01-06-01-01-02-09.wav', '03-01-06-01-01-01-09.wav', '03-01-05-02-02-01-09.wav', '03-01-05-02-01-01-09.wav', '03-01-05-01-01-02-09.wav', '03-01-05-01-01-01-09.wav', '03-01-05-01-02-02-09.wav', '03-01-04-02-02-02-09.wav', '03-01-06-01-02-01-09.wav', '03-01-05-01-02-01-09.wav', '03-01-05-02-01-02-09.wav', '03-01-05-02-02-02-09.wav', '03-01-06-02-02-02-09.wav', '03-01-07-01-01-02-09.wav', '03-01-07-02-02-02-09.wav', '03-01-07-01-02-02-09.wav', '03-01-07-02-02-01-09.wav', '03-01-06-02-01-01-09.wav', '03-01-06-02-02-01-09.wav', '03-01-07-01-01-01-09.wav', '03-01-06-01-02-02-09.wav', '03-01-06-02-01-02-09.wav', '03-01-07-02-01-01-09.wav', '03-01-08-01-01-01-09.wav', '03-01-07-01-02-01-09.wav', '03-01-07-02-01-02-09.wav', '03-01-08-02-02-01-09.wav', '03-01-08-02-01-02-09.wav', '03-01-08-01-01-02-09.wav', '03-01-08-01-02-01-09.wav', '03-01-08-01-02-02-09.wav', '03-01-08-02-02-02-09.wav', '03-01-08-02-01-01-09.wav', '03-01-01-01-01-02-10.wav', '03-01-01-01-01-01-10.wav', '03-01-02-02-02-02-10.wav', '03-01-02-01-01-01-10.wav', '03-01-03-01-01-01-10.wav', '03-01-01-01-02-02-10.wav', '03-01-02-02-02-01-10.wav', '03-01-03-01-01-02-10.wav', '03-01-02-01-01-02-10.wav', '03-01-02-02-01-02-10.wav', '03-01-02-01-02-02-10.wav', '03-01-02-02-01-01-10.wav', '03-01-01-01-02-01-10.wav', '03-01-02-01-02-01-10.wav', '03-01-03-02-01-02-10.wav', '03-01-04-02-02-02-10.wav', '03-01-04-02-02-01-10.wav', '03-01-03-02-01-01-10.wav', '03-01-03-02-02-02-10.wav', '03-01-03-02-02-01-10.wav', '03-01-03-01-02-02-10.wav', '03-01-04-01-02-02-10.wav', '03-01-04-01-01-01-10.wav', '03-01-04-02-01-01-10.wav', '03-01-04-02-01-02-10.wav', '03-01-04-01-02-01-10.wav', '03-01-03-01-02-01-10.wav', '03-01-04-01-01-02-10.wav', '03-01-05-02-01-02-10.wav', '03-01-05-01-02-02-10.wav', '03-01-05-02-02-02-10.wav', '03-01-05-02-01-01-10.wav', '03-01-06-01-01-02-10.wav', '03-01-06-01-02-02-10.wav', '03-01-06-01-01-01-10.wav', '03-01-06-01-02-01-10.wav', '03-01-05-01-02-01-10.wav', '03-01-05-02-02-01-10.wav', '03-01-05-01-01-02-10.wav', '03-01-05-01-01-01-10.wav', '03-01-06-02-02-01-10.wav', '03-01-07-01-02-01-10.wav', '03-01-06-02-01-01-10.wav', '03-01-07-02-02-01-10.wav', '03-01-07-01-01-02-10.wav', '03-01-06-02-01-02-10.wav', '03-01-07-02-01-02-10.wav', '03-01-07-01-02-02-10.wav', '03-01-07-01-01-01-10.wav', '03-01-06-02-02-02-10.wav', '03-01-07-02-01-01-10.wav', '03-01-08-02-02-01-10.wav', '03-01-08-02-01-01-10.wav', '03-01-08-01-01-01-10.wav', '03-01-08-01-01-02-10.wav', '03-01-08-02-02-02-10.wav', '03-01-07-02-02-02-10.wav', '03-01-08-02-01-02-10.wav', '03-01-08-01-02-02-10.wav', '03-01-08-01-02-01-10.wav', '03-01-02-02-02-01-11.wav', '03-01-01-01-01-02-11.wav', '03-01-02-02-01-01-11.wav', '03-01-01-01-01-01-11.wav', '03-01-01-01-02-02-11.wav', '03-01-02-01-01-01-11.wav', '03-01-02-01-01-02-11.wav', '03-01-02-01-02-02-11.wav', '03-01-02-01-02-01-11.wav', '03-01-02-02-01-02-11.wav', '03-01-01-01-02-01-11.wav', '03-01-04-02-01-01-11.wav', '03-01-03-01-02-02-11.wav', '03-01-03-02-02-01-11.wav', '03-01-04-01-02-02-11.wav', '03-01-02-02-02-02-11.wav', '03-01-03-02-01-02-11.wav', '03-01-04-01-01-02-11.wav', '03-01-03-01-01-01-11.wav', '03-01-04-01-01-01-11.wav', '03-01-03-01-01-02-11.wav', '03-01-03-02-02-02-11.wav', '03-01-04-01-02-01-11.wav', '03-01-03-01-02-01-11.wav', '03-01-03-02-01-01-11.wav', '03-01-04-02-02-01-11.wav', '03-01-05-01-01-01-11.wav', '03-01-06-01-01-02-11.wav', '03-01-05-02-02-01-11.wav', '03-01-05-01-02-01-11.wav', '03-01-05-01-01-02-11.wav', '03-01-06-01-01-01-11.wav', '03-01-06-01-02-01-11.wav', '03-01-05-02-01-01-11.wav', '03-01-05-02-02-02-11.wav', '03-01-04-02-01-02-11.wav', '03-01-05-02-01-02-11.wav', '03-01-04-02-02-02-11.wav', '03-01-05-01-02-02-11.wav', '03-01-06-02-01-02-11.wav', '03-01-06-02-01-01-11.wav', '03-01-07-02-02-02-11.wav', '03-01-07-01-01-01-11.wav', '03-01-07-01-02-02-11.wav', '03-01-07-01-01-02-11.wav', '03-01-06-02-02-01-11.wav', '03-01-06-02-02-02-11.wav', '03-01-07-02-02-01-11.wav', '03-01-07-01-02-01-11.wav', '03-01-08-01-01-01-11.wav', '03-01-06-01-02-02-11.wav', '03-01-07-02-01-01-11.wav', '03-01-07-02-01-02-11.wav', '03-01-08-02-01-02-11.wav', '03-01-08-01-01-02-11.wav', '03-01-08-01-02-01-11.wav', '03-01-08-01-02-02-11.wav', '03-01-08-02-01-01-11.wav', '03-01-01-01-01-01-01.wav', '03-01-02-01-01-02-01.wav', '03-01-01-01-01-02-01.wav', '03-01-02-01-02-01-01.wav', '03-01-02-01-01-01-01.wav', '03-01-01-01-02-01-01.wav', '03-01-01-01-02-02-01.wav', '03-01-02-02-01-02-01.wav', '03-01-02-02-01-01-01.wav', '03-01-02-02-02-01-01.wav', '03-01-03-01-01-01-01.wav', '03-01-02-02-02-02-01.wav', '03-01-02-01-02-02-01.wav', '03-01-03-02-01-02-01.wav', '03-01-03-01-02-02-01.wav', '03-01-03-01-01-02-01.wav', '03-01-03-02-01-01-01.wav', '03-01-03-01-02-01-01.wav', '03-01-04-01-01-01-01.wav', '03-01-03-02-02-01-01.wav', '03-01-04-01-01-02-01.wav', '03-01-04-01-02-01-01.wav', '03-01-04-02-01-01-01.wav', '03-01-04-01-02-02-01.wav', '03-01-03-02-02-02-01.wav', '03-01-04-02-01-02-01.wav', '03-01-04-02-02-01-01.wav', '03-01-04-02-02-02-01.wav', '03-01-05-01-01-01-01.wav', '03-01-08-02-01-01-01.wav', '03-01-06-02-02-02-01.wav', '03-01-06-01-01-01-01.wav', '03-01-06-01-01-02-01.wav', '03-01-06-01-02-01-01.wav', '03-01-05-02-02-01-01.wav', '03-01-06-02-01-02-01.wav', '03-01-08-02-02-01-01.wav', '03-01-07-01-02-02-01.wav', '03-01-07-02-01-01-01.wav', '03-01-05-02-01-01-01.wav', '03-01-08-01-02-02-01.wav', '03-01-07-01-02-01-01.wav', '03-01-05-02-02-02-01.wav', '03-01-05-02-01-02-01.wav', '03-01-08-01-01-02-01.wav', '03-01-05-01-01-02-01.wav', '03-01-08-01-02-01-01.wav', '03-01-08-02-01-02-01.wav', '03-01-07-02-01-02-01.wav', '03-01-08-02-02-02-01.wav', '03-01-06-01-02-02-01.wav', '03-01-07-01-01-02-01.wav', '03-01-05-01-02-01-01.wav', '03-01-07-01-01-01-01.wav', '03-01-07-02-02-01-01.wav', '03-01-06-02-01-01-01.wav', '03-01-05-01-02-02-01.wav', '03-01-06-02-02-01-01.wav', '03-01-07-02-02-02-01.wav', '03-01-08-01-01-01-01.wav', '03-01-04-01-01-02-12.wav', '03-01-02-01-02-01-12.wav', '03-01-03-01-02-02-12.wav', '03-01-04-01-02-02-12.wav', '03-01-04-02-01-01-12.wav', '03-01-01-01-01-02-12.wav', '03-01-02-01-01-01-12.wav', '03-01-04-02-01-02-12.wav', '03-01-04-02-02-01-12.wav', '03-01-02-02-01-02-12.wav', '03-01-02-02-02-01-12.wav', '03-01-01-01-02-02-12.wav', '03-01-03-01-01-02-12.wav', '03-01-03-02-01-02-12.wav', '03-01-05-01-01-02-12.wav', '03-01-04-02-02-02-12.wav', '03-01-04-01-02-01-12.wav', '03-01-02-01-02-02-12.wav', '03-01-01-01-02-01-12.wav', '03-01-03-01-02-01-12.wav', '03-01-03-02-02-01-12.wav', '03-01-03-02-02-02-12.wav', '03-01-03-01-01-01-12.wav', '03-01-02-02-01-01-12.wav', '03-01-03-02-01-01-12.wav', '03-01-04-01-01-01-12.wav', '03-01-05-01-02-01-12.wav', '03-01-05-01-01-01-12.wav', '03-01-02-01-01-02-12.wav', '03-01-02-02-02-02-12.wav', '03-01-06-02-02-01-12.wav', '03-01-06-02-01-02-12.wav', '03-01-07-02-01-02-12.wav', '03-01-06-01-01-01-12.wav', '03-01-07-01-01-02-12.wav', '03-01-05-02-02-01-12.wav', '03-01-05-02-01-02-12.wav', '03-01-08-02-01-01-12.wav', '03-01-07-01-02-01-12.wav', '03-01-07-02-02-01-12.wav', '03-01-06-01-02-02-12.wav', '03-01-06-01-01-02-12.wav', '03-01-05-02-01-01-12.wav', '03-01-06-02-02-02-12.wav', '03-01-07-02-01-01-12.wav', '03-01-06-01-02-01-12.wav', '03-01-08-01-01-01-12.wav', '03-01-06-02-01-01-12.wav', '03-01-07-01-02-02-12.wav', '03-01-08-01-02-01-12.wav', '03-01-08-01-02-02-12.wav', '03-01-07-02-02-02-12.wav', '03-01-07-01-01-01-12.wav', '03-01-08-01-01-02-12.wav', '03-01-05-02-02-02-12.wav', '03-01-05-01-02-02-12.wav', '03-01-04-02-01-01-13.wav', '03-01-08-02-01-02-12.wav', '03-01-02-02-02-02-13.wav', '03-01-02-02-02-01-13.wav', '03-01-08-02-02-02-12.wav', '03-01-04-02-02-01-13.wav', '03-01-02-01-01-02-13.wav', '03-01-03-02-01-01-13.wav', '03-01-02-01-01-01-13.wav', '03-01-03-01-01-02-13.wav', '03-01-04-01-02-01-13.wav', '03-01-02-02-01-01-13.wav', '03-01-03-02-02-02-13.wav', '03-01-03-01-02-02-13.wav', '03-01-04-01-02-02-13.wav', '03-01-01-01-02-01-13.wav', '03-01-02-01-02-01-13.wav', '03-01-03-02-02-01-13.wav', '03-01-04-02-01-02-13.wav', '03-01-02-02-01-02-13.wav', '03-01-01-01-01-02-13.wav', '03-01-04-01-01-02-13.wav', '03-01-01-01-02-02-13.wav', '03-01-03-02-01-02-13.wav', '03-01-02-01-02-02-13.wav', '03-01-08-02-02-01-12.wav', '03-01-04-01-01-01-13.wav', '03-01-03-01-01-01-13.wav', '03-01-03-01-02-01-13.wav', '03-01-06-02-02-01-13.wav', '03-01-05-02-02-02-13.wav', '03-01-08-01-01-01-13.wav', '03-01-06-01-02-02-13.wav', '03-01-07-02-02-02-13.wav', '03-01-07-02-01-01-13.wav', '03-01-06-02-01-01-13.wav', '03-01-06-02-02-02-13.wav', '03-01-07-01-02-01-13.wav', '03-01-07-02-02-01-13.wav', '03-01-06-02-01-02-13.wav', '03-01-07-02-01-02-13.wav', '03-01-06-01-01-01-13.wav', '03-01-06-01-02-01-13.wav', '03-01-05-01-01-02-13.wav', '03-01-07-01-02-02-13.wav', '03-01-07-01-01-02-13.wav', '03-01-05-01-02-02-13.wav', '03-01-07-01-01-01-13.wav', '03-01-05-01-02-01-13.wav', '03-01-05-02-02-01-13.wav', '03-01-06-01-01-02-13.wav', '03-01-05-01-01-01-13.wav', '03-01-05-02-01-02-13.wav', '03-01-05-02-01-01-13.wav', '03-01-04-02-02-02-13.wav', '03-01-08-01-02-01-13.wav', '03-01-03-02-02-01-14.wav', '03-01-03-01-02-01-14.wav', '03-01-02-02-01-01-14.wav', '03-01-04-01-01-01-14.wav', '03-01-02-01-01-02-14.wav', '03-01-08-02-02-02-13.wav', '03-01-02-02-02-01-14.wav', '03-01-03-01-01-01-14.wav', '03-01-03-02-02-02-14.wav', '03-01-02-02-01-02-14.wav', '03-01-02-01-02-01-14.wav', '03-01-08-01-01-02-13.wav', '03-01-02-01-02-02-14.wav', '03-01-08-02-02-01-13.wav', '03-01-03-02-01-02-14.wav', '03-01-08-02-01-02-13.wav', '03-01-01-01-02-02-14.wav', '03-01-02-01-01-01-14.wav', '03-01-03-02-01-01-14.wav', '03-01-02-02-02-02-14.wav', '03-01-01-01-01-02-14.wav', '03-01-03-01-02-02-14.wav', '03-01-08-02-01-01-13.wav', '03-01-08-01-02-02-13.wav', '03-01-03-01-01-02-14.wav', '03-01-01-01-02-01-14.wav', '03-01-04-02-02-01-14.wav', '03-01-05-01-02-01-14.wav', '03-01-07-01-01-02-14.wav', '03-01-05-02-01-02-14.wav', '03-01-07-01-02-01-14.wav', '03-01-07-01-01-01-14.wav', '03-01-06-02-02-02-14.wav', '03-01-04-02-02-02-14.wav', '03-01-05-01-01-02-14.wav', '03-01-04-01-02-01-14.wav', '03-01-07-01-02-02-14.wav', '03-01-04-02-01-02-14.wav', '03-01-05-02-02-01-14.wav', '03-01-05-02-01-01-14.wav', '03-01-05-01-02-02-14.wav', '03-01-06-02-01-02-14.wav', '03-01-06-02-01-01-14.wav', '03-01-06-01-01-01-14.wav', '03-01-04-02-01-01-14.wav', '03-01-07-02-01-01-14.wav', '03-01-05-02-02-02-14.wav', '03-01-06-01-01-02-14.wav', '03-01-04-01-01-02-14.wav', '03-01-05-01-01-01-14.wav', '03-01-04-01-02-02-14.wav', '03-01-07-02-01-02-14.wav', '03-01-06-01-02-01-14.wav', '03-01-06-01-02-02-14.wav', '03-01-06-02-02-01-14.wav', '03-01-03-02-01-02-15.wav', '03-01-02-02-02-01-15.wav', '03-01-08-02-01-01-14.wav', '03-01-03-01-01-02-15.wav', '03-01-08-01-02-01-14.wav', '03-01-01-01-01-02-15.wav', '03-01-07-02-02-02-14.wav', '03-01-02-01-02-02-15.wav', '03-01-02-01-01-01-15.wav', '03-01-01-01-02-02-15.wav', '03-01-03-01-02-01-15.wav', '03-01-08-02-02-02-14.wav', '03-01-08-02-01-02-14.wav', '03-01-08-01-02-02-14.wav', '03-01-02-02-02-02-15.wav', '03-01-07-02-02-01-14.wav', '03-01-03-01-02-02-15.wav', '03-01-02-01-02-01-15.wav', '03-01-03-01-01-01-15.wav', '03-01-08-01-01-01-14.wav', '03-01-02-02-01-02-15.wav', '03-01-01-01-02-01-15.wav', '03-01-08-02-02-01-14.wav', '03-01-02-01-01-02-15.wav', '03-01-03-02-01-01-15.wav', '03-01-02-02-01-01-15.wav', '03-01-08-01-01-02-14.wav', '03-01-07-01-01-02-15.wav', '03-01-06-01-02-01-15.wav', '03-01-06-01-01-01-15.wav', '03-01-05-02-01-01-15.wav', '03-01-05-02-02-01-15.wav', '03-01-04-01-02-02-15.wav', '03-01-05-01-02-01-15.wav', '03-01-06-02-01-02-15.wav', '03-01-06-02-02-02-15.wav', '03-01-05-01-01-02-15.wav', '03-01-06-02-02-01-15.wav', '03-01-04-02-02-01-15.wav', '03-01-06-01-02-02-15.wav', '03-01-04-01-01-01-15.wav', '03-01-04-01-01-02-15.wav', '03-01-06-02-01-01-15.wav', '03-01-04-01-02-01-15.wav', '03-01-04-02-01-02-15.wav', '03-01-07-01-02-01-15.wav', '03-01-05-01-02-02-15.wav', '03-01-05-02-01-02-15.wav', '03-01-06-01-01-02-15.wav', '03-01-04-02-01-01-15.wav', '03-01-03-02-02-02-15.wav', '03-01-04-02-02-02-15.wav', '03-01-03-02-02-01-15.wav', '03-01-05-02-02-02-15.wav', '03-01-05-01-01-01-15.wav', '03-01-07-01-01-01-15.wav', '03-01-01-01-02-02-16.wav', '03-01-02-02-02-01-16.wav', '03-01-03-01-02-01-16.wav', '03-01-01-01-01-02-16.wav', '03-01-03-01-01-02-16.wav', '03-01-08-01-02-02-15.wav', '03-01-02-02-01-02-16.wav', '03-01-07-02-01-01-15.wav', '03-01-02-01-01-01-16.wav', '03-01-08-01-01-01-15.wav', '03-01-08-01-02-01-15.wav', '03-01-08-02-02-02-15.wav', '03-01-02-02-01-01-16.wav', '03-01-02-01-01-02-16.wav', '03-01-01-01-02-01-16.wav', '03-01-02-02-02-02-16.wav', '03-01-02-01-02-02-16.wav', '03-01-02-01-02-01-16.wav', '03-01-07-02-01-02-15.wav', '03-01-03-01-02-02-16.wav', '03-01-03-01-01-01-16.wav', '03-01-08-02-01-01-15.wav', '03-01-07-01-02-02-15.wav', '03-01-08-01-01-02-15.wav', '03-01-03-02-01-01-16.wav', '03-01-08-02-01-02-15.wav', '03-01-07-02-02-02-15.wav', '03-01-07-02-02-01-15.wav', '03-01-08-02-02-01-15.wav', '03-01-03-02-01-02-16.wav', '03-01-05-01-01-01-16.wav', '03-01-06-01-01-01-16.wav', '03-01-04-01-01-01-16.wav', '03-01-04-01-02-02-16.wav', '03-01-03-02-02-01-16.wav', '03-01-06-01-02-02-16.wav', '03-01-04-02-01-02-16.wav', '03-01-06-02-02-02-16.wav', '03-01-06-01-02-01-16.wav', '03-01-06-02-01-02-16.wav', '03-01-05-01-01-02-16.wav', '03-01-06-02-01-01-16.wav', '03-01-03-02-02-02-16.wav', '03-01-04-02-02-01-16.wav', '03-01-05-01-02-02-16.wav', '03-01-04-01-02-01-16.wav', '03-01-05-02-02-02-16.wav', '03-01-05-01-02-01-16.wav', '03-01-05-02-02-01-16.wav', '03-01-05-02-01-01-16.wav', '03-01-04-01-01-02-16.wav', '03-01-04-02-01-01-16.wav', '03-01-06-01-01-02-16.wav', '03-01-04-02-02-02-16.wav', '03-01-06-02-02-01-16.wav', '03-01-05-02-01-02-16.wav', '03-01-08-02-01-01-16.wav', '03-01-01-01-01-02-17.wav', '03-01-07-01-01-02-16.wav', '03-01-07-02-02-02-16.wav', '03-01-02-01-01-01-17.wav', '03-01-08-02-02-01-16.wav', '03-01-08-01-02-02-16.wav', '03-01-02-01-02-01-17.wav', '03-01-01-01-02-01-17.wav', '03-01-08-02-01-02-16.wav', '03-01-07-01-02-02-16.wav', '03-01-07-01-02-01-16.wav', '03-01-08-01-02-01-16.wav', '03-01-07-01-01-01-16.wav', '03-01-08-01-01-02-16.wav', '03-01-07-02-01-01-16.wav', '03-01-08-01-01-01-16.wav', '03-01-08-02-02-02-16.wav', '03-01-07-02-01-02-16.wav', '03-01-07-02-02-01-16.wav', '03-01-02-02-01-01-17.wav', '03-01-01-01-02-02-17.wav', '03-01-02-01-01-02-17.wav', '03-01-02-01-02-02-17.wav', '03-01-05-01-01-02-17.wav', '03-01-03-01-01-01-17.wav', '03-01-03-01-02-01-17.wav', '03-01-03-02-01-01-17.wav', '03-01-04-01-01-01-17.wav', '03-01-05-01-01-01-17.wav', '03-01-03-02-02-02-17.wav', '03-01-05-02-02-02-17.wav', '03-01-03-02-01-02-17.wav', '03-01-02-02-02-01-17.wav', '03-01-06-01-02-02-17.wav', '03-01-03-01-01-02-17.wav', '03-01-04-02-01-02-17.wav', '03-01-04-02-02-02-17.wav', '03-01-05-02-02-01-17.wav', '03-01-05-01-02-01-17.wav', '03-01-04-02-01-01-17.wav', '03-01-03-01-02-02-17.wav', '03-01-06-01-01-02-17.wav', '03-01-04-01-02-02-17.wav', '03-01-05-01-02-02-17.wav', '03-01-05-02-01-02-17.wav', '03-01-05-02-01-01-17.wav', '03-01-04-02-02-01-17.wav', '03-01-02-02-01-02-17.wav', '03-01-04-01-01-02-17.wav', '03-01-03-02-02-01-17.wav', '03-01-04-01-02-01-17.wav', '03-01-06-01-01-01-17.wav', '03-01-06-01-02-01-17.wav', '03-01-02-02-02-02-17.wav', '03-01-01-01-02-01-18.wav', '03-01-08-01-02-02-17.wav', '03-01-07-01-02-01-17.wav', '03-01-07-02-01-02-17.wav', '03-01-08-02-02-01-17.wav', '03-01-01-01-01-02-18.wav', '03-01-08-01-01-01-17.wav', '03-01-07-01-01-02-17.wav', '03-01-07-02-02-01-17.wav', '03-01-01-01-02-02-18.wav', '03-01-08-01-02-01-17.wav', '03-01-08-02-01-02-17.wav', '03-01-08-02-01-01-17.wav', '03-01-07-02-02-02-17.wav', '03-01-06-02-02-01-17.wav', '03-01-08-02-02-02-17.wav', '03-01-06-02-02-02-17.wav', '03-01-07-01-02-02-17.wav', '03-01-06-02-01-01-17.wav', '03-01-07-02-01-01-17.wav', '03-01-07-01-01-01-17.wav', '03-01-06-02-01-02-17.wav', '03-01-08-01-01-02-17.wav', '03-01-04-02-01-01-18.wav', '03-01-02-01-01-02-18.wav', '03-01-02-01-02-02-18.wav', '03-01-04-02-01-02-18.wav', '03-01-02-02-01-02-18.wav', '03-01-03-01-02-02-18.wav', '03-01-03-02-02-01-18.wav', '03-01-03-02-01-01-18.wav', '03-01-04-01-01-01-18.wav', '03-01-02-02-02-02-18.wav', '03-01-03-01-01-01-18.wav', '03-01-04-01-01-02-18.wav', '03-01-02-02-02-01-18.wav', '03-01-03-02-02-02-18.wav', '03-01-03-01-02-01-18.wav', '03-01-04-02-02-01-18.wav', '03-01-04-01-02-02-18.wav', '03-01-02-02-01-01-18.wav', '03-01-04-02-02-02-18.wav', '03-01-02-01-02-01-18.wav', '03-01-05-01-01-02-18.wav', '03-01-04-01-02-01-18.wav', '03-01-02-01-01-01-18.wav', '03-01-05-01-02-01-18.wav', '03-01-05-01-01-01-18.wav', '03-01-03-02-01-02-18.wav', '03-01-03-01-01-02-18.wav', '03-01-05-02-01-01-18.wav', '03-01-07-02-01-02-18.wav', '03-01-06-02-02-02-18.wav', '03-01-07-01-01-02-18.wav', '03-01-08-02-01-02-18.wav', '03-01-08-01-01-02-18.wav', '03-01-07-02-02-01-18.wav', '03-01-06-02-02-01-18.wav', '03-01-08-02-01-01-18.wav', '03-01-08-01-02-02-18.wav', '03-01-07-02-02-02-18.wav', '03-01-05-02-01-02-18.wav', '03-01-06-02-01-01-18.wav', '03-01-05-01-02-02-18.wav', '03-01-05-02-02-02-18.wav', '03-01-07-02-01-01-18.wav', '03-01-06-02-01-02-18.wav', '03-01-08-01-01-01-18.wav', '03-01-07-01-02-01-18.wav', '03-01-07-01-02-02-18.wav', '03-01-06-01-01-02-18.wav', '03-01-05-02-02-01-18.wav', '03-01-06-01-02-02-18.wav', '03-01-07-01-01-01-18.wav', '03-01-06-01-02-01-18.wav', '03-01-06-01-01-01-18.wav', '03-01-08-01-02-01-18.wav', '03-01-04-01-02-01-19.wav', '03-01-08-02-02-01-18.wav', '03-01-03-01-02-01-19.wav', '03-01-03-02-01-01-19.wav', '03-01-03-01-01-02-19.wav', '03-01-04-01-02-02-19.wav', '03-01-02-02-02-01-19.wav', '03-01-02-02-01-01-19.wav', '03-01-01-01-02-01-19.wav', '03-01-02-01-01-01-19.wav', '03-01-04-01-01-02-19.wav', '03-01-02-01-01-02-19.wav', '03-01-02-01-02-01-19.wav', '03-01-03-01-02-02-19.wav', '03-01-03-01-01-01-19.wav', '03-01-04-02-01-01-19.wav', '03-01-02-02-02-02-19.wav', '03-01-01-01-02-02-19.wav', '03-01-08-02-02-02-18.wav', '03-01-01-01-01-02-19.wav', '03-01-04-01-01-01-19.wav', '03-01-02-02-01-02-19.wav', '03-01-03-02-02-01-19.wav', '03-01-03-02-01-02-19.wav', '03-01-03-02-02-02-19.wav', '03-01-02-01-02-02-19.wav', '03-01-06-02-01-01-19.wav', '03-01-08-01-01-02-19.wav', '03-01-07-02-02-02-19.wav', '03-01-07-01-01-01-19.wav', '03-01-05-02-02-01-19.wav', '03-01-06-02-02-01-19.wav', '03-01-04-02-02-02-19.wav', '03-01-05-01-01-01-19.wav', '03-01-04-02-01-02-19.wav', '03-01-06-02-01-02-19.wav', '03-01-08-01-01-01-19.wav', '03-01-06-01-01-02-19.wav', '03-01-07-01-02-01-19.wav', '03-01-07-02-02-01-19.wav', '03-01-05-01-02-01-19.wav', '03-01-06-01-02-02-19.wav', '03-01-05-01-02-02-19.wav', '03-01-06-01-02-01-19.wav', '03-01-05-02-02-02-19.wav', '03-01-07-01-02-02-19.wav', '03-01-05-01-01-02-19.wav', '03-01-05-02-01-01-19.wav', '03-01-07-02-01-02-19.wav', '03-01-07-02-01-01-19.wav', '03-01-07-01-01-02-19.wav', '03-01-05-02-01-02-19.wav', '03-01-04-02-02-01-19.wav', '03-01-06-02-02-02-19.wav', '03-01-06-01-01-01-19.wav', '03-01-02-02-02-01-20.wav', '03-01-03-02-01-01-20.wav', '03-01-04-02-01-02-20.wav', '03-01-08-02-02-02-19.wav', '03-01-03-02-02-02-20.wav', '03-01-03-01-02-02-20.wav', '03-01-08-02-01-02-19.wav', '03-01-03-01-02-01-20.wav', '03-01-02-02-02-02-20.wav', '03-01-02-01-01-01-20.wav', '03-01-04-01-02-02-20.wav', '03-01-04-01-02-01-20.wav', '03-01-04-01-01-02-20.wav', '03-01-03-01-01-01-20.wav', '03-01-05-01-01-01-20.wav', '03-01-01-01-02-01-20.wav', '03-01-03-02-01-02-20.wav', '03-01-04-02-01-01-20.wav', '03-01-03-01-01-02-20.wav', '03-01-03-02-02-01-20.wav', '03-01-08-01-02-02-19.wav', '03-01-08-01-02-01-19.wav', '03-01-04-01-01-01-20.wav', '03-01-01-01-01-02-20.wav', '03-01-02-02-01-02-20.wav', '03-01-08-02-02-01-19.wav', '03-01-02-01-02-01-20.wav', '03-01-08-02-01-01-19.wav', '03-01-02-02-01-01-20.wav', '03-01-04-02-02-01-20.wav', '03-01-02-01-02-02-20.wav', '03-01-04-02-02-02-20.wav', '03-01-01-01-02-02-20.wav', '03-01-02-01-01-02-20.wav', '03-01-05-01-01-02-20.wav', '03-01-07-02-02-01-20.wav', '03-01-07-01-02-01-20.wav', '03-01-06-02-02-02-20.wav', '03-01-06-02-02-01-20.wav', '03-01-05-02-02-01-20.wav', '03-01-08-02-02-02-20.wav', '03-01-08-02-02-01-20.wav', '03-01-06-01-01-01-20.wav', '03-01-06-01-02-02-20.wav', '03-01-08-01-02-01-20.wav', '03-01-08-02-01-01-20.wav', '03-01-07-01-01-02-20.wav', '03-01-06-01-01-02-20.wav', '03-01-05-02-01-02-20.wav', '03-01-06-02-01-02-20.wav', '03-01-05-02-01-01-20.wav', '03-01-07-01-01-01-20.wav', '03-01-07-02-02-02-20.wav', '03-01-07-01-02-02-20.wav', '03-01-08-01-01-01-20.wav', '03-01-08-01-01-02-20.wav', '03-01-05-02-02-02-20.wav', '03-01-08-02-01-02-20.wav', '03-01-06-01-02-01-20.wav', '03-01-06-02-01-01-20.wav', '03-01-07-02-01-01-20.wav', '03-01-05-01-02-02-20.wav', '03-01-07-02-01-02-20.wav', '03-01-08-01-02-02-20.wav', '03-01-05-01-02-01-20.wav', '03-01-01-01-02-02-21.wav', '03-01-02-01-01-01-21.wav', '03-01-03-02-01-01-21.wav', '03-01-04-01-01-01-21.wav', '03-01-03-01-02-01-21.wav', '03-01-01-01-02-01-21.wav', '03-01-03-01-02-02-21.wav', '03-01-04-02-01-01-21.wav', '03-01-03-02-02-01-21.wav', '03-01-03-02-02-02-21.wav', '03-01-02-01-02-02-21.wav', '03-01-04-02-01-02-21.wav', '03-01-02-02-01-01-21.wav', '03-01-04-01-02-02-21.wav', '03-01-03-01-01-02-21.wav', '03-01-03-02-01-02-21.wav', '03-01-04-01-01-02-21.wav', '03-01-02-02-02-01-21.wav', '03-01-05-01-01-01-21.wav', '03-01-01-01-01-02-21.wav', '03-01-02-02-01-02-21.wav', '03-01-03-01-01-01-21.wav', '03-01-02-01-02-01-21.wav', '03-01-04-02-02-01-21.wav', '03-01-05-01-01-02-21.wav', '03-01-04-02-02-02-21.wav', '03-01-02-01-01-02-21.wav', '03-01-04-01-02-01-21.wav', '03-01-02-02-02-02-21.wav', '03-01-06-01-02-01-21.wav', '03-01-05-02-02-01-21.wav', '03-01-06-02-02-02-21.wav', '03-01-07-01-01-01-21.wav', '03-01-07-02-01-01-21.wav', '03-01-07-02-02-02-21.wav', '03-01-06-01-01-01-21.wav', '03-01-07-01-02-02-21.wav', '03-01-06-02-01-02-21.wav', '03-01-08-01-01-02-21.wav', '03-01-08-01-01-01-21.wav', '03-01-05-02-02-02-21.wav', '03-01-08-02-01-01-21.wav', '03-01-05-02-01-02-21.wav', '03-01-07-01-01-02-21.wav', '03-01-07-02-02-01-21.wav', '03-01-06-02-01-01-21.wav', '03-01-07-02-01-02-21.wav', '03-01-05-02-01-01-21.wav', '03-01-06-02-02-01-21.wav', '03-01-06-01-02-02-21.wav', '03-01-05-01-02-01-21.wav', '03-01-06-01-01-02-21.wav', '03-01-08-01-02-01-21.wav', '03-01-08-01-02-02-21.wav', '03-01-07-01-02-01-21.wav', '03-01-08-02-02-01-21.wav', '03-01-05-01-02-02-21.wav', '03-01-08-02-01-02-21.wav', '03-01-04-01-02-01-22.wav', '03-01-04-01-01-02-22.wav', '03-01-02-02-01-01-22.wav', '03-01-04-02-02-02-22.wav', '03-01-02-01-01-02-22.wav', '03-01-02-01-02-01-22.wav', '03-01-03-02-02-02-22.wav', '03-01-03-01-01-02-22.wav', '03-01-04-01-01-01-22.wav', '03-01-03-01-02-01-22.wav', '03-01-03-02-01-01-22.wav', '03-01-05-01-02-01-22.wav', '03-01-08-02-02-02-21.wav', '03-01-02-02-02-01-22.wav', '03-01-03-02-02-01-22.wav', '03-01-01-01-02-01-22.wav', '03-01-01-01-02-02-22.wav', '03-01-04-02-01-02-22.wav', '03-01-05-01-01-01-22.wav', '03-01-05-01-01-02-22.wav', '03-01-02-02-02-02-22.wav', '03-01-03-01-01-01-22.wav', '03-01-02-02-01-02-22.wav', '03-01-04-01-02-02-22.wav', '03-01-04-02-02-01-22.wav', '03-01-02-01-01-01-22.wav', '03-01-04-02-01-01-22.wav', '03-01-03-01-02-02-22.wav', '03-01-01-01-01-02-22.wav', '03-01-02-01-02-02-22.wav', '03-01-03-02-01-02-22.wav', '03-01-08-02-01-02-22.wav', '03-01-06-01-02-01-22.wav', '03-01-06-02-01-02-22.wav', '03-01-07-01-01-02-22.wav', '03-01-08-01-02-01-22.wav', '03-01-05-01-02-02-22.wav', '03-01-08-02-01-01-22.wav', '03-01-05-02-02-01-22.wav', '03-01-06-01-02-02-22.wav', '03-01-06-02-02-01-22.wav', '03-01-06-01-01-02-22.wav', '03-01-08-01-01-01-22.wav', '03-01-06-02-02-02-22.wav', '03-01-07-02-02-02-22.wav', '03-01-08-02-02-01-22.wav', '03-01-06-02-01-01-22.wav', '03-01-05-02-01-01-22.wav', '03-01-06-01-01-01-22.wav', '03-01-08-01-02-02-22.wav', '03-01-07-01-02-01-22.wav', '03-01-08-02-02-02-22.wav', '03-01-07-02-01-01-22.wav', '03-01-07-02-01-02-22.wav', '03-01-08-01-01-02-22.wav', '03-01-05-02-02-02-22.wav', '03-01-07-01-01-01-22.wav', '03-01-07-01-02-02-22.wav', '03-01-05-02-01-02-22.wav', '03-01-07-02-02-01-22.wav', '03-01-04-01-01-02-23.wav', '03-01-01-01-02-02-23.wav', '03-01-04-02-02-02-23.wav', '03-01-03-02-02-02-23.wav', '03-01-04-01-02-02-23.wav', '03-01-02-01-02-01-23.wav', '03-01-05-01-01-01-23.wav', '03-01-01-01-01-02-23.wav', '03-01-03-02-01-01-23.wav', '03-01-02-02-01-02-23.wav', '03-01-03-01-01-02-23.wav', '03-01-02-01-01-01-23.wav', '03-01-01-01-02-01-23.wav', '03-01-04-01-02-01-23.wav', '03-01-03-02-02-01-23.wav', '03-01-04-01-01-01-23.wav', '03-01-02-02-02-01-23.wav', '03-01-03-01-02-02-23.wav', '03-01-02-01-01-02-23.wav', '03-01-02-01-02-02-23.wav', '03-01-03-01-01-01-23.wav', '03-01-02-02-01-01-23.wav', '03-01-02-02-02-02-23.wav', '03-01-03-02-01-02-23.wav', '03-01-04-02-01-02-23.wav', '03-01-03-01-02-01-23.wav', '03-01-04-02-01-01-23.wav', '03-01-05-01-01-02-23.wav', '03-01-04-02-02-01-23.wav', '03-01-07-01-02-02-23.wav', '03-01-08-02-02-01-23.wav', '03-01-08-02-01-01-23.wav', '03-01-06-01-02-01-23.wav', '03-01-07-01-01-02-23.wav', '03-01-07-02-01-02-23.wav', '03-01-05-01-02-01-23.wav', '03-01-07-02-02-02-23.wav', '03-01-06-02-02-02-23.wav', '03-01-07-02-01-01-23.wav', '03-01-06-01-01-02-23.wav', '03-01-06-01-02-02-23.wav', '03-01-08-01-02-02-23.wav', '03-01-07-01-01-01-23.wav', '03-01-06-02-01-02-23.wav', '03-01-05-02-01-02-23.wav', '03-01-05-02-02-01-23.wav', '03-01-06-02-02-01-23.wav', '03-01-06-01-01-01-23.wav', '03-01-06-02-01-01-23.wav', '03-01-05-02-01-01-23.wav', '03-01-08-01-02-01-23.wav', '03-01-07-01-02-01-23.wav', '03-01-07-02-02-01-23.wav', '03-01-05-01-02-02-23.wav', '03-01-05-02-02-02-23.wav', '03-01-08-01-01-02-23.wav', '03-01-08-02-01-02-23.wav', '03-01-08-01-01-01-23.wav', '03-01-04-01-02-01-24.wav', '03-01-03-01-02-01-24.wav', '03-01-04-02-01-02-24.wav', '03-01-08-02-02-02-23.wav', '03-01-02-02-02-02-24.wav', '03-01-04-02-02-01-24.wav', '03-01-01-01-02-02-24.wav', '03-01-03-02-01-02-24.wav', '03-01-02-01-01-01-24.wav', '03-01-03-02-02-02-24.wav', '03-01-04-01-01-02-24.wav', '03-01-02-02-02-01-24.wav', '03-01-02-02-01-01-24.wav', '03-01-02-02-01-02-24.wav', '03-01-03-01-01-01-24.wav', '03-01-04-02-02-02-24.wav', '03-01-02-01-02-02-24.wav', '03-01-04-01-02-02-24.wav', '03-01-03-02-01-01-24.wav', '03-01-04-01-01-01-24.wav', '03-01-02-01-01-02-24.wav', '03-01-02-01-02-01-24.wav', '03-01-01-01-01-01-24.wav', '03-01-03-01-01-02-24.wav', '03-01-03-01-02-02-24.wav', '03-01-01-01-01-02-24.wav', '03-01-03-02-02-01-24.wav', '03-01-01-01-02-01-24.wav', '03-01-04-02-01-01-24.wav', '03-01-06-01-01-01-24.wav', '03-01-05-02-01-02-24.wav', '03-01-06-01-02-02-24.wav', '03-01-07-01-02-02-24.wav', '03-01-06-01-01-02-24.wav', '03-01-07-02-02-02-24.wav', '03-01-06-02-02-01-24.wav', '03-01-07-02-01-02-24.wav', '03-01-05-01-02-01-24.wav', '03-01-05-01-02-02-24.wav', '03-01-07-02-02-01-24.wav', '03-01-05-01-01-01-24.wav', '03-01-07-01-02-01-24.wav', '03-01-05-02-02-01-24.wav', '03-01-08-01-01-01-24.wav', '03-01-05-02-02-02-24.wav', '03-01-06-02-01-01-24.wav', '03-01-07-01-01-02-24.wav', '03-01-07-01-01-01-24.wav', '03-01-05-02-01-01-24.wav', '03-01-06-01-02-01-24.wav', '03-01-07-02-01-01-24.wav', '03-01-06-02-01-02-24.wav', '03-01-06-02-02-02-24.wav', '03-01-05-01-01-02-24.wav', '03-01-08-01-01-02-24.wav', '03-01-08-02-02-02-24.wav', '03-01-08-01-02-02-24.wav', '03-01-08-01-02-01-24.wav', '03-01-08-02-02-01-24.wav', '03-01-08-02-01-01-24.wav', '03-01-08-02-01-02-24.wav', '03-01-01-01-01-01-12.wav', '03-01-01-01-01-01-13.wav', '03-01-01-01-01-01-14.wav', '03-01-01-01-01-01-15.wav', '03-01-01-01-01-01-16.wav', '03-01-01-01-01-01-17.wav', '03-01-01-01-01-01-18.wav', '03-01-01-01-01-01-19.wav', '03-01-01-01-01-01-20.wav', '03-01-01-01-01-01-21.wav', '03-01-01-01-01-01-22.wav', '03-01-01-01-01-01-23.wav', '03-01-01-01-01-02-02.wav', '03-01-01-01-02-01-02.wav', '03-01-01-01-01-01-02.wav', '03-01-02-02-01-01-02.wav', '03-01-01-01-02-02-02.wav', '03-01-02-01-02-01-02.wav', '03-01-02-01-01-02-02.wav', '03-01-03-01-02-01-02.wav', '03-01-03-01-01-01-02.wav', '03-01-02-01-02-02-02.wav', '03-01-02-02-01-02-02.wav', '03-01-02-01-01-01-02.wav', '03-01-03-01-01-02-02.wav', '03-01-02-02-02-01-02.wav', '03-01-02-02-02-02-02.wav', '03-01-03-01-02-02-02.wav', '03-01-03-02-02-01-02.wav', '03-01-05-01-01-01-02.wav', '03-01-04-01-01-02-02.wav', '03-01-04-02-01-01-02.wav', '03-01-04-02-01-02-02.wav', '03-01-04-02-02-01-02.wav', '03-01-04-01-02-01-02.wav', '03-01-04-01-01-01-02.wav', '03-01-03-02-01-02-02.wav', '03-01-03-02-02-02-02.wav', '03-01-04-01-02-02-02.wav', '03-01-04-02-02-02-02.wav', '03-01-03-02-01-01-02.wav', '03-01-05-01-01-02-02.wav', '03-01-05-01-02-02-02.wav', '03-01-06-02-01-01-02.wav', '03-01-06-02-01-02-02.wav', '03-01-06-02-02-01-02.wav', '03-01-06-01-01-02-02.wav', '03-01-06-01-02-02-02.wav', '03-01-06-01-02-01-02.wav', '03-01-05-02-01-02-02.wav', '03-01-05-02-01-01-02.wav', '03-01-05-02-02-01-02.wav', '03-01-05-01-02-01-02.wav', '03-01-06-01-01-01-02.wav', '03-01-05-02-02-02-02.wav', '03-01-06-02-02-02-02.wav', '03-01-07-02-02-01-02.wav', '03-01-07-01-01-02-02.wav', '03-01-08-01-02-01-02.wav', '03-01-07-01-02-01-02.wav', '03-01-07-01-01-01-02.wav', '03-01-08-01-01-02-02.wav', '03-01-08-01-01-01-02.wav', '03-01-07-02-01-01-02.wav', '03-01-07-01-02-02-02.wav', '03-01-07-02-02-02-02.wav', '03-01-07-02-01-02-02.wav', '03-01-08-02-02-01-02.wav', '03-01-08-02-01-02-02.wav', '03-01-08-01-02-02-02.wav', '03-01-08-02-02-02-02.wav', '03-01-08-02-01-01-02.wav', '03-01-02-01-01-01-03.wav', '03-01-02-01-01-02-03.wav', '03-01-01-01-02-01-03.wav', '03-01-01-01-01-01-03.wav', '03-01-02-01-02-01-03.wav', '03-01-02-01-02-02-03.wav', '03-01-01-01-02-02-03.wav', '03-01-01-01-01-02-03.wav', '03-01-04-01-01-02-03.wav', '03-01-03-01-02-01-03.wav', '03-01-04-01-01-01-03.wav', '03-01-03-01-02-02-03.wav', '03-01-03-01-01-01-03.wav', '03-01-03-02-02-01-03.wav', '03-01-02-02-02-02-03.wav', '03-01-02-02-02-01-03.wav', '03-01-03-02-02-02-03.wav', '03-01-04-01-02-01-03.wav', '03-01-02-02-01-01-03.wav', '03-01-03-01-01-02-03.wav', '03-01-04-01-02-02-03.wav', '03-01-03-02-01-01-03.wav', '03-01-02-02-01-02-03.wav', '03-01-03-02-01-02-03.wav', '03-01-05-01-01-02-03.wav', '03-01-06-01-01-01-03.wav', '03-01-04-02-01-01-03.wav', '03-01-05-01-02-01-03.wav', '03-01-05-02-02-02-03.wav', '03-01-06-01-02-01-03.wav', '03-01-04-02-01-02-03.wav', '03-01-05-01-02-02-03.wav', '03-01-05-02-01-02-03.wav', '03-01-05-02-01-01-03.wav', '03-01-06-01-01-02-03.wav', '03-01-05-02-02-01-03.wav', '03-01-04-02-02-02-03.wav', '03-01-04-02-02-01-03.wav', '03-01-05-01-01-01-03.wav', '03-01-06-02-02-02-03.wav', '03-01-07-02-02-01-03.wav', '03-01-08-01-01-02-03.wav', '03-01-08-01-01-01-03.wav', '03-01-06-02-02-01-03.wav', '03-01-06-02-01-01-03.wav', '03-01-07-01-02-02-03.wav', '03-01-07-01-01-02-03.wav', '03-01-07-02-02-02-03.wav', '03-01-06-02-01-02-03.wav', '03-01-07-01-02-01-03.wav', '03-01-07-02-01-02-03.wav', '03-01-07-01-01-01-03.wav', '03-01-06-01-02-02-03.wav', '03-01-07-02-01-01-03.wav', '03-01-08-01-02-02-03.wav', '03-01-08-02-01-01-03.wav', '03-01-08-02-02-02-03.wav', '03-01-08-02-01-02-03.wav', '03-01-08-01-02-01-03.wav', '03-01-08-02-02-01-03.wav', '03-01-01-01-01-02-04.wav', '03-01-01-01-02-01-04.wav', '03-01-01-01-02-02-04.wav', '03-01-01-01-01-01-04.wav', '03-01-03-01-02-01-04.wav', '03-01-04-01-01-01-04.wav', '03-01-03-02-02-01-04.wav', '03-01-02-01-02-01-04.wav', '03-01-02-02-02-02-04.wav', '03-01-02-01-02-02-04.wav', '03-01-03-01-02-02-04.wav', '03-01-03-01-01-02-04.wav', '03-01-03-02-02-02-04.wav', '03-01-02-01-01-01-04.wav', '03-01-03-01-01-01-04.wav', '03-01-02-02-02-01-04.wav', '03-01-02-02-01-02-04.wav', '03-01-03-02-01-02-04.wav', '03-01-02-02-01-01-04.wav', '03-01-02-01-01-02-04.wav', '03-01-03-02-01-01-04.wav', '03-01-04-01-01-02-04.wav', '03-01-05-02-01-01-04.wav', '03-01-04-01-02-01-04.wav', '03-01-05-01-01-01-04.wav', '03-01-05-01-02-02-04.wav', '03-01-05-01-02-01-04.wav', '03-01-04-01-02-02-04.wav', '03-01-05-01-01-02-04.wav', '03-01-04-02-01-02-04.wav', '03-01-04-02-02-02-04.wav', '03-01-04-02-02-01-04.wav', '03-01-04-02-01-01-04.wav', '03-01-05-02-01-02-04.wav', '03-01-05-02-02-01-04.wav', '03-01-07-01-02-01-04.wav', '03-01-06-01-01-02-04.wav', '03-01-06-02-01-02-04.wav', '03-01-07-01-01-01-04.wav', '03-01-06-01-01-01-04.wav', '03-01-06-02-02-01-04.wav', '03-01-06-02-02-02-04.wav', '03-01-06-02-01-01-04.wav', '03-01-07-01-01-02-04.wav', '03-01-06-01-02-01-04.wav', '03-01-06-01-02-02-04.wav', '03-01-05-02-02-02-04.wav', '03-01-08-02-02-01-04.wav', '03-01-07-02-01-02-04.wav', '03-01-08-02-02-02-04.wav', '03-01-08-01-01-02-04.wav', '03-01-08-02-01-02-04.wav', '03-01-08-01-02-02-04.wav', '03-01-07-02-02-02-04.wav', '03-01-07-02-02-01-04.wav', '03-01-08-01-02-01-04.wav', '03-01-08-02-01-01-04.wav', '03-01-07-02-01-01-04.wav', '03-01-07-01-02-02-04.wav', '03-01-08-01-01-01-04.wav', '03-01-02-01-01-01-05.wav', '03-01-01-01-02-01-05.wav', '03-01-01-01-01-01-05.wav', '03-01-01-01-02-02-05.wav', '03-01-01-01-01-02-05.wav', '03-01-02-01-01-02-05.wav', '03-01-03-01-02-01-05.wav', '03-01-02-02-02-01-05.wav', '03-01-03-02-01-01-05.wav', '03-01-03-02-01-02-05.wav', '03-01-02-02-01-01-05.wav', '03-01-03-01-01-02-05.wav', '03-01-02-01-02-02-05.wav', '03-01-02-02-01-02-05.wav', '03-01-03-01-01-01-05.wav', '03-01-02-01-02-01-05.wav', '03-01-03-02-02-01-05.wav', '03-01-02-02-02-02-05.wav', '03-01-03-01-02-02-05.wav', '03-01-04-02-02-02-05.wav', '03-01-04-01-02-02-05.wav', '03-01-05-02-01-02-05.wav', '03-01-05-01-01-01-05.wav', '03-01-05-02-01-01-05.wav', '03-01-05-02-02-02-05.wav', '03-01-05-01-01-02-05.wav', '03-01-04-01-02-01-05.wav', '03-01-04-01-01-01-05.wav', '03-01-03-02-02-02-05.wav', '03-01-04-02-02-01-05.wav', '03-01-04-01-01-02-05.wav', '03-01-04-02-01-02-05.wav', '03-01-05-01-02-02-05.wav', '03-01-05-01-02-01-05.wav', '03-01-04-02-01-01-05.wav', '03-01-05-02-02-01-05.wav', '03-01-07-02-01-02-05.wav', '03-01-06-02-02-02-05.wav', '03-01-07-02-01-01-05.wav', '03-01-06-02-01-01-05.wav', '03-01-06-02-01-02-05.wav', '03-01-07-01-02-02-05.wav', '03-01-06-01-02-01-05.wav', '03-01-06-01-01-01-05.wav', '03-01-06-01-01-02-05.wav', '03-01-06-01-02-02-05.wav', '03-01-07-02-02-01-05.wav', '03-01-06-02-02-01-05.wav', '03-01-07-01-01-02-05.wav', '03-01-07-01-02-01-05.wav', '03-01-07-01-01-01-05.wav', '03-01-08-01-02-01-05.wav', '03-01-08-01-02-02-05.wav', '03-01-08-02-02-01-05.wav', '03-01-08-02-02-02-05.wav', '03-01-08-02-01-01-05.wav', '03-01-08-02-01-02-05.wav', '03-01-08-01-01-02-05.wav', '03-01-08-01-01-01-05.wav', '03-01-07-02-02-02-05.wav', '03-01-01-01-01-01-06.wav', '03-01-01-01-02-01-06.wav', '03-01-01-01-02-02-06.wav', '03-01-01-01-01-02-06.wav', '03-01-02-01-02-02-06.wav', '03-01-02-02-02-01-06.wav', '03-01-02-02-01-01-06.wav', '03-01-02-01-01-02-06.wav', '03-01-02-02-02-02-06.wav', '03-01-03-01-01-02-06.wav', '03-01-03-01-02-01-06.wav', '03-01-02-01-01-01-06.wav', '03-01-03-01-01-01-06.wav', '03-01-02-02-01-02-06.wav', '03-01-02-01-02-01-06.wav', '03-01-03-01-02-02-06.wav', '03-01-03-02-02-01-06.wav', '03-01-04-01-02-02-06.wav', '03-01-04-02-01-02-06.wav', '03-01-03-02-01-02-06.wav', '03-01-03-02-02-02-06.wav', '03-01-04-02-01-01-06.wav', '03-01-04-01-02-01-06.wav', '03-01-04-01-01-01-06.wav', '03-01-04-01-01-02-06.wav', '03-01-04-02-02-02-06.wav', '03-01-03-02-01-01-06.wav', '03-01-04-02-02-01-06.wav', '03-01-06-02-01-02-06.wav', '03-01-06-01-02-02-06.wav', '03-01-06-02-02-02-06.wav', '03-01-06-02-02-01-06.wav', '03-01-05-02-02-01-06.wav', '03-01-06-01-02-01-06.wav', '03-01-06-01-01-02-06.wav', '03-01-05-02-02-02-06.wav', '03-01-05-02-01-01-06.wav', '03-01-05-01-01-01-06.wav', '03-01-05-01-02-02-06.wav', '03-01-06-01-01-01-06.wav', '03-01-05-02-01-02-06.wav', '03-01-06-02-01-01-06.wav', '03-01-05-01-02-01-06.wav', '03-01-05-01-01-02-06.wav', '03-01-07-02-02-02-06.wav', '03-01-08-01-02-02-06.wav', '03-01-07-01-01-02-06.wav', '03-01-08-01-01-02-06.wav', '03-01-07-02-02-01-06.wav', '03-01-08-01-02-01-06.wav', '03-01-07-01-02-02-06.wav', '03-01-07-02-01-01-06.wav', '03-01-08-01-01-01-06.wav', '03-01-07-01-02-01-06.wav', '03-01-08-02-01-02-06.wav', '03-01-07-02-01-02-06.wav', '03-01-08-02-01-01-06.wav', '03-01-07-01-01-01-06.wav', '03-01-08-02-02-01-06.wav', '03-01-08-02-02-02-06.wav', '03-01-02-01-01-01-07.wav', '03-01-01-01-02-02-07.wav', '03-01-01-01-01-01-07.wav', '03-01-01-01-02-01-07.wav', '03-01-02-01-02-01-07.wav', '03-01-02-01-01-02-07.wav', '03-01-02-01-02-02-07.wav', '03-01-01-01-01-02-07.wav', '03-01-04-01-01-01-07.wav', '03-01-02-02-02-01-07.wav', '03-01-02-02-02-02-07.wav', '03-01-02-02-01-01-07.wav', '03-01-03-01-02-01-07.wav', '03-01-02-02-01-02-07.wav', '03-01-03-02-01-02-07.wav', '03-01-03-01-02-02-07.wav', '03-01-03-01-01-02-07.wav', '03-01-03-01-01-01-07.wav', '03-01-03-02-02-01-07.wav', '03-01-03-02-01-01-07.wav', '03-01-03-02-02-02-07.wav', '03-01-04-01-02-01-07.wav', '03-01-05-01-02-02-07.wav', '03-01-04-02-01-02-07.wav', '03-01-05-01-01-01-07.wav', '03-01-04-02-02-02-07.wav', '03-01-04-02-01-01-07.wav', '03-01-04-01-01-02-07.wav', '03-01-04-02-02-01-07.wav', '03-01-05-01-02-01-07.wav', '03-01-05-02-01-01-07.wav', '03-01-04-01-02-02-07.wav', '03-01-05-01-01-02-07.wav', '03-01-05-02-01-02-07.wav', '03-01-06-02-02-02-07.wav', '03-01-06-01-02-02-07.wav', '03-01-05-02-02-01-07.wav', '03-01-07-01-01-02-07.wav', '03-01-06-02-01-02-07.wav', '03-01-06-01-02-01-07.wav', '03-01-06-01-01-02-07.wav', '03-01-06-02-01-01-07.wav', '03-01-05-02-02-02-07.wav', '03-01-07-01-01-01-07.wav', '03-01-06-02-02-01-07.wav', '03-01-06-01-01-01-07.wav', '03-01-08-01-01-01-07.wav', '03-01-07-02-02-02-07.wav', '03-01-07-02-01-02-07.wav', '03-01-08-01-01-02-07.wav', '03-01-07-01-02-01-07.wav', '03-01-07-02-02-01-07.wav', '03-01-08-01-02-02-07.wav', '03-01-08-01-02-01-07.wav', '03-01-07-02-01-01-07.wav', '03-01-08-02-01-01-07.wav', '03-01-08-02-01-02-07.wav', '03-01-07-01-02-02-07.wav', '03-01-08-02-02-02-07.wav', '03-01-08-02-02-01-07.wav', '03-01-01-01-01-01-08.wav', '03-01-02-01-01-02-08.wav', '03-01-02-01-01-01-08.wav', '03-01-02-02-01-02-08.wav', '03-01-02-01-02-02-08.wav', '03-01-01-01-02-02-08.wav', '03-01-01-01-01-02-08.wav', '03-01-02-02-02-01-08.wav', '03-01-02-01-02-01-08.wav', '03-01-02-02-01-01-08.wav', '03-01-01-01-02-01-08.wav', '03-01-04-01-01-01-08.wav', '03-01-03-01-01-02-08.wav', '03-01-02-02-02-02-08.wav', '03-01-03-02-01-02-08.wav', '03-01-03-01-02-01-08.wav', '03-01-03-01-02-02-08.wav', '03-01-03-02-01-01-08.wav', '03-01-03-02-02-01-08.wav', '03-01-04-01-01-02-08.wav', '03-01-04-01-02-01-08.wav', '03-01-03-01-01-01-08.wav', '03-01-03-02-02-02-08.wav', '03-01-04-01-02-02-08.wav', '03-01-05-01-01-01-08.wav', '03-01-05-02-01-01-08.wav', '03-01-05-02-02-02-08.wav', '03-01-05-02-02-01-08.wav', '03-01-05-01-01-02-08.wav', '03-01-04-02-02-01-08.wav', '03-01-04-02-01-02-08.wav', '03-01-05-02-01-02-08.wav', '03-01-05-01-02-02-08.wav', '03-01-04-02-02-02-08.wav', '03-01-04-02-01-01-08.wav', '03-01-05-01-02-01-08.wav', '03-01-06-01-02-01-08.wav', '03-01-06-01-01-02-08.wav', '03-01-06-02-02-01-08.wav', '03-01-07-01-02-01-08.wav', '03-01-06-01-01-01-08.wav', '03-01-06-01-02-02-08.wav', '03-01-06-02-01-02-08.wav', '03-01-06-02-02-02-08.wav', '03-01-06-02-01-01-08.wav', '03-01-07-01-02-02-08.wav', '03-01-07-01-01-01-08.wav', '03-01-07-01-01-02-08.wav', '03-01-07-02-02-02-08.wav', '03-01-08-01-01-01-08.wav', '03-01-08-02-02-01-08.wav', '03-01-07-02-02-01-08.wav', '03-01-08-01-02-02-08.wav', '03-01-08-02-01-01-08.wav', '03-01-08-01-01-02-08.wav', '03-01-07-02-01-02-08.wav', '03-01-07-02-01-01-08.wav', '03-01-08-02-01-02-08.wav', '03-01-08-02-02-02-08.wav', '03-01-08-01-02-01-08.wav', '03-01-02-02-01-01-09.wav', '03-01-01-01-02-02-09.wav', '03-01-02-02-02-02-09.wav', '03-01-02-01-01-01-09.wav', '03-01-01-01-01-02-09.wav', '03-01-02-02-02-01-09.wav', '03-01-03-01-01-02-09.wav', '03-01-03-01-01-01-09.wav', '03-01-02-01-01-02-09.wav', '03-01-01-01-01-01-09.wav', '03-01-02-01-02-01-09.wav', '03-01-02-02-01-02-09.wav', '03-01-02-01-02-02-09.wav', '03-01-03-01-02-01-09.wav', '03-01-01-01-02-01-09.wav', '03-01-04-02-01-02-09.wav', '03-01-04-02-01-01-09.wav', '03-01-04-01-02-01-09.wav']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-ljIWv8Qhan6"
      },
      "source": [
        ""
      ],
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_CvExMLO1csh"
      },
      "source": [
        "#sample feature\n",
        "#librosa.core.load(path, sr=22050, mono=True, offset=0.0, duration=None, dtype=<class 'numpy.float32'>, res_type='kaiser_best')\n",
        "res_type_s = 'kaiser_best'\n",
        "duration_s = None\n",
        "sample_rate_s = 22050\n",
        "offset_s = 0.5\n",
        "\n",
        "#Mfcc\n",
        "#librosa.feature.mfcc(y=None, sr=22050, S=None, n_mfcc=20, dct_type=2, norm='ortho', lifter=0, **kwargs)\n",
        "mfcc_sample_rate = 22050\n",
        "n_mfcc = 40\n",
        "axis_mfcc = 1"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-LdKrChc1mra"
      },
      "source": [
        "#Build list with target variables for each file\n",
        "feeling_list=[]\n",
        "\n",
        "#Emotion (01 = neutral, 02 = calm, 03 = happy, 04 = sad, 05 = angry, 06 = fear, 07 = disgust, 08 = surprised) \n",
        "\n",
        "for emotion_path in rawdata_list:\n",
        "  if emotion_path.split('-')[2] == '01':\n",
        "        feeling_list.append(\"neutral\")\n",
        "  elif emotion_path.split('-')[2] == '02':\n",
        "        feeling_list.append(\"calm\")\n",
        "  elif emotion_path.split('-')[2] == '03':\n",
        "        feeling_list.append(\"happy\")\n",
        "  elif emotion_path.split('-')[2] == '04':\n",
        "        feeling_list.append(\"sad\")\n",
        "  elif emotion_path.split('-')[2] == '05':\n",
        "        feeling_list.append(\"angry\")\n",
        "  elif emotion_path.split('-')[2] == '06':\n",
        "        feeling_list.append(\"fear\")\n",
        "  elif emotion_path.split('-')[2] == '07':\n",
        "        feeling_list.append(\"disgust\")\n",
        "  elif emotion_path.split('-')[2] == '08':\n",
        "        feeling_list.append(\"surprised\")\n",
        "  else:\n",
        "        feeling_list.append(\"unknown\")"
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4AXX3JKCY8WK"
      },
      "source": [
        ""
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DVL_R3ci1tjB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "28639507-0169-49ce-950d-02c439e362b5"
      },
      "source": [
        "#Check list\n",
        "feeling_list"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'disgust',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'disgust',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'disgust',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'fear',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'angry',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'disgust',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'sad',\n",
              " 'happy',\n",
              " 'sad',\n",
              " 'calm',\n",
              " 'calm',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'sad',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'fear',\n",
              " 'disgust',\n",
              " 'fear',\n",
              " 'fear',\n",
              " 'angry',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " ...]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qze3kiFa1wl5"
      },
      "source": [
        "#Turn list into dataframe\n",
        "labels = pd.DataFrame(feeling_list)"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XtjdiCcz18mG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c98e22fb-448b-4d77-e600-fe0f0fd4563e"
      },
      "source": [
        "#Check shape\n",
        "labels.shape"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UaSObIys1-px"
      },
      "source": [
        "#Change index name to \"emotion\"\n",
        "labels = labels.rename({0: 'emotion'}, axis=1)"
      ],
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5D1cL0sV2S2a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9b7d3549-f47d-4010-a961-7f6303bdb299"
      },
      "source": [
        "labels.shape"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IQFYwxuj2WAn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 328
        },
        "outputId": "215949c9-7aff-4829-a71d-5879aaf888bd"
      },
      "source": [
        "#Count the number of files per emotion\n",
        "labels_total = pd.DataFrame(labels.groupby(['emotion']).size())\n",
        "labels_total"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>angry</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calm</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>disgust</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fear</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>happy</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>neutral</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sad</th>\n",
              "      <td>192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>surprised</th>\n",
              "      <td>190</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             0\n",
              "emotion       \n",
              "angry      192\n",
              "calm       192\n",
              "disgust    192\n",
              "fear       192\n",
              "happy      192\n",
              "neutral     96\n",
              "sad        192\n",
              "surprised  190"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m7tIcoCW2Zgv"
      },
      "source": [
        "rawdata_ravdess = pd.DataFrame(columns=['feature'])\n",
        "bookmark=0\n",
        "\n",
        "for y in rawdata_list:\n",
        "    #Change to kaiser_best & 22050 kHz\n",
        "    #sr > target sampling rate\n",
        "    #offset=0.5\n",
        "    X, sample_rate = librosa.load('/content/drive/My Drive/RawData/Ravdess/audio_speech_actors_01-24/'+y, \n",
        "                                  res_type = res_type_s,\n",
        "                                  duration = duration_s,\n",
        "                                  sr = sample_rate_s,\n",
        "                                  offset = offset_s)\n",
        "    sample_rate = np.array(sample_rate)\n",
        "    \n",
        "    #Get MFCCs from each file\n",
        "    mfccs = librosa.feature.mfcc(   y=X, \n",
        "                                    sr = mfcc_sample_rate, \n",
        "                                    n_mfcc = n_mfcc)\n",
        "    \n",
        "    #Calculate mean of MFCCs\n",
        "    mfccs_mean = np.mean(    mfccs, \n",
        "                             axis = axis_mfcc)\n",
        "    feature = mfccs_mean\n",
        "    \n",
        "    #Add MFCCs feature results to list\n",
        "    rawdata_ravdess.loc[bookmark] = [feature]\n",
        "    bookmark=bookmark+1   "
      ],
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HQtbgA9Q2jbz",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d3822de1-7e36-47c3-9d44-7be9823efabc"
      },
      "source": [
        "#Verity data results\n",
        "rawdata_ravdess.shape"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RdwQ83n77sZS",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c2db9606-29d3-474c-e392-fd888b9f0d01"
      },
      "source": [
        "#Verify that there are no null values\n",
        "rawdata_ravdess.isnull().values.any()"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Oz6D8yBvAnR_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "fe6a6622-78bb-4ca4-f8df-8d4ed733fdd6"
      },
      "source": [
        "# See array sample of features\n",
        "rawdata_ravdess"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>feature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>[-784.5775244981395, 85.33376780843501, 13.239...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>[-780.5851110079409, 75.97758264629765, 25.122...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>[-455.9407750689379, 62.88596076882734, -20.99...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>[-480.93842000946296, 67.88792981130491, -11.2...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>[-678.4082800872944, 78.7491161967738, 4.00072...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1433</th>\n",
              "      <td>[-672.9650536526009, 81.05319901752962, 6.1848...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1434</th>\n",
              "      <td>[-729.1086075180378, 78.32783066892944, 18.265...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1435</th>\n",
              "      <td>[-678.9898262717712, 78.56715234826034, 1.8087...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1436</th>\n",
              "      <td>[-684.5201979860569, 94.17801205892913, 6.6292...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1437</th>\n",
              "      <td>[-763.8288617841548, 63.47815232107699, 14.599...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1438 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                feature\n",
              "0     [-784.5775244981395, 85.33376780843501, 13.239...\n",
              "1     [-780.5851110079409, 75.97758264629765, 25.122...\n",
              "2     [-455.9407750689379, 62.88596076882734, -20.99...\n",
              "3     [-480.93842000946296, 67.88792981130491, -11.2...\n",
              "4     [-678.4082800872944, 78.7491161967738, 4.00072...\n",
              "...                                                 ...\n",
              "1433  [-672.9650536526009, 81.05319901752962, 6.1848...\n",
              "1434  [-729.1086075180378, 78.32783066892944, 18.265...\n",
              "1435  [-678.9898262717712, 78.56715234826034, 1.8087...\n",
              "1436  [-684.5201979860569, 94.17801205892913, 6.6292...\n",
              "1437  [-763.8288617841548, 63.47815232107699, 14.599...\n",
              "\n",
              "[1438 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s48BI8gnA6lO"
      },
      "source": [
        "#Turn array into dataframe\n",
        "rawdata_ravdess_final = pd.DataFrame(rawdata_ravdess['feature'].values.tolist())"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wSFkd676A-Mg",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c4b19e86-31f4-46a3-db34-eb8aa97f1ae6"
      },
      "source": [
        "#Analyze new dataframe shape\n",
        "rawdata_ravdess_final.shape"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 40)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_rm1cx0_BAue",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "bb7a83a4-bbf7-47c5-8a8b-c701cd5b85a9"
      },
      "source": [
        "# Check data sample\n",
        "rawdata_ravdess_final.head()"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-784.577524</td>\n",
              "      <td>85.333768</td>\n",
              "      <td>13.239951</td>\n",
              "      <td>24.523984</td>\n",
              "      <td>19.261336</td>\n",
              "      <td>12.627748</td>\n",
              "      <td>-1.801980</td>\n",
              "      <td>-8.672687</td>\n",
              "      <td>-2.934895</td>\n",
              "      <td>2.595684</td>\n",
              "      <td>-1.352264</td>\n",
              "      <td>3.390467</td>\n",
              "      <td>2.674184</td>\n",
              "      <td>-0.303474</td>\n",
              "      <td>-2.387730</td>\n",
              "      <td>3.557101</td>\n",
              "      <td>-0.633918</td>\n",
              "      <td>0.850597</td>\n",
              "      <td>-1.327744</td>\n",
              "      <td>1.685434</td>\n",
              "      <td>-0.158471</td>\n",
              "      <td>-0.515570</td>\n",
              "      <td>-5.705883</td>\n",
              "      <td>1.465504</td>\n",
              "      <td>-4.042635</td>\n",
              "      <td>1.582502</td>\n",
              "      <td>-2.244806</td>\n",
              "      <td>-0.053174</td>\n",
              "      <td>-2.001580</td>\n",
              "      <td>0.290329</td>\n",
              "      <td>-0.932101</td>\n",
              "      <td>1.110399</td>\n",
              "      <td>-3.342542</td>\n",
              "      <td>0.643032</td>\n",
              "      <td>-2.507690</td>\n",
              "      <td>0.917407</td>\n",
              "      <td>-0.407260</td>\n",
              "      <td>0.767098</td>\n",
              "      <td>-3.555686</td>\n",
              "      <td>-0.703741</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-780.585111</td>\n",
              "      <td>75.977583</td>\n",
              "      <td>25.122043</td>\n",
              "      <td>30.031968</td>\n",
              "      <td>17.575570</td>\n",
              "      <td>17.191645</td>\n",
              "      <td>2.843732</td>\n",
              "      <td>-6.127932</td>\n",
              "      <td>-0.752872</td>\n",
              "      <td>8.419187</td>\n",
              "      <td>-1.081468</td>\n",
              "      <td>3.346298</td>\n",
              "      <td>3.746447</td>\n",
              "      <td>-1.988525</td>\n",
              "      <td>-3.279077</td>\n",
              "      <td>3.187197</td>\n",
              "      <td>-0.394093</td>\n",
              "      <td>0.712212</td>\n",
              "      <td>-1.697899</td>\n",
              "      <td>1.614260</td>\n",
              "      <td>-1.285526</td>\n",
              "      <td>0.651023</td>\n",
              "      <td>-7.815984</td>\n",
              "      <td>1.335634</td>\n",
              "      <td>-5.391410</td>\n",
              "      <td>1.414345</td>\n",
              "      <td>-4.797839</td>\n",
              "      <td>-0.990241</td>\n",
              "      <td>-4.142564</td>\n",
              "      <td>0.165949</td>\n",
              "      <td>-3.554475</td>\n",
              "      <td>-0.592912</td>\n",
              "      <td>-3.332172</td>\n",
              "      <td>1.237368</td>\n",
              "      <td>-2.783249</td>\n",
              "      <td>1.532234</td>\n",
              "      <td>-2.405433</td>\n",
              "      <td>0.724621</td>\n",
              "      <td>-2.831218</td>\n",
              "      <td>0.674829</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-455.940775</td>\n",
              "      <td>62.885961</td>\n",
              "      <td>-20.995647</td>\n",
              "      <td>2.914253</td>\n",
              "      <td>7.584065</td>\n",
              "      <td>-15.206440</td>\n",
              "      <td>-18.136217</td>\n",
              "      <td>-8.958958</td>\n",
              "      <td>-17.358015</td>\n",
              "      <td>-2.310023</td>\n",
              "      <td>-2.420561</td>\n",
              "      <td>-5.328655</td>\n",
              "      <td>-6.421264</td>\n",
              "      <td>2.617524</td>\n",
              "      <td>-8.645651</td>\n",
              "      <td>1.468487</td>\n",
              "      <td>-5.029236</td>\n",
              "      <td>-5.991222</td>\n",
              "      <td>-3.753320</td>\n",
              "      <td>-3.134025</td>\n",
              "      <td>-7.015093</td>\n",
              "      <td>-7.883257</td>\n",
              "      <td>-7.105053</td>\n",
              "      <td>-3.922285</td>\n",
              "      <td>-5.592626</td>\n",
              "      <td>4.355114</td>\n",
              "      <td>4.106374</td>\n",
              "      <td>10.207855</td>\n",
              "      <td>8.678793</td>\n",
              "      <td>6.576563</td>\n",
              "      <td>5.797166</td>\n",
              "      <td>4.647752</td>\n",
              "      <td>0.914842</td>\n",
              "      <td>3.511614</td>\n",
              "      <td>2.694716</td>\n",
              "      <td>4.143307</td>\n",
              "      <td>2.768409</td>\n",
              "      <td>3.438254</td>\n",
              "      <td>0.316866</td>\n",
              "      <td>0.968601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-480.938420</td>\n",
              "      <td>67.887930</td>\n",
              "      <td>-11.284238</td>\n",
              "      <td>6.979242</td>\n",
              "      <td>10.933571</td>\n",
              "      <td>-4.856331</td>\n",
              "      <td>-11.505220</td>\n",
              "      <td>-11.465318</td>\n",
              "      <td>-18.108471</td>\n",
              "      <td>-1.732244</td>\n",
              "      <td>-5.602005</td>\n",
              "      <td>-4.532730</td>\n",
              "      <td>-1.352994</td>\n",
              "      <td>2.327400</td>\n",
              "      <td>-8.942687</td>\n",
              "      <td>3.235608</td>\n",
              "      <td>-7.040774</td>\n",
              "      <td>-6.671137</td>\n",
              "      <td>-1.953822</td>\n",
              "      <td>-0.805865</td>\n",
              "      <td>-5.467327</td>\n",
              "      <td>-4.902957</td>\n",
              "      <td>-5.285383</td>\n",
              "      <td>-2.534921</td>\n",
              "      <td>-6.316572</td>\n",
              "      <td>-4.025567</td>\n",
              "      <td>-4.395670</td>\n",
              "      <td>0.652093</td>\n",
              "      <td>-0.097347</td>\n",
              "      <td>2.435726</td>\n",
              "      <td>6.409734</td>\n",
              "      <td>7.234785</td>\n",
              "      <td>5.329042</td>\n",
              "      <td>7.428819</td>\n",
              "      <td>4.922043</td>\n",
              "      <td>4.167335</td>\n",
              "      <td>1.338060</td>\n",
              "      <td>3.324071</td>\n",
              "      <td>1.534826</td>\n",
              "      <td>1.548304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-678.408280</td>\n",
              "      <td>78.749116</td>\n",
              "      <td>4.000729</td>\n",
              "      <td>25.084586</td>\n",
              "      <td>14.905587</td>\n",
              "      <td>5.708571</td>\n",
              "      <td>-10.986725</td>\n",
              "      <td>-7.889160</td>\n",
              "      <td>-10.248973</td>\n",
              "      <td>-0.454468</td>\n",
              "      <td>-4.726016</td>\n",
              "      <td>-11.024796</td>\n",
              "      <td>-5.174500</td>\n",
              "      <td>0.848101</td>\n",
              "      <td>-7.095545</td>\n",
              "      <td>2.358816</td>\n",
              "      <td>-1.627017</td>\n",
              "      <td>-4.601880</td>\n",
              "      <td>-6.636921</td>\n",
              "      <td>3.055247</td>\n",
              "      <td>-4.791150</td>\n",
              "      <td>-2.898750</td>\n",
              "      <td>-6.152463</td>\n",
              "      <td>-0.452900</td>\n",
              "      <td>-3.698754</td>\n",
              "      <td>-0.003334</td>\n",
              "      <td>-6.172590</td>\n",
              "      <td>-0.148892</td>\n",
              "      <td>-4.448429</td>\n",
              "      <td>0.509011</td>\n",
              "      <td>-2.527811</td>\n",
              "      <td>0.844251</td>\n",
              "      <td>-4.570755</td>\n",
              "      <td>-1.211728</td>\n",
              "      <td>-1.728730</td>\n",
              "      <td>1.013226</td>\n",
              "      <td>-0.012598</td>\n",
              "      <td>-0.184366</td>\n",
              "      <td>-1.840304</td>\n",
              "      <td>2.377748</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           0          1          2   ...        37        38        39\n",
              "0 -784.577524  85.333768  13.239951  ...  0.767098 -3.555686 -0.703741\n",
              "1 -780.585111  75.977583  25.122043  ...  0.724621 -2.831218  0.674829\n",
              "2 -455.940775  62.885961 -20.995647  ...  3.438254  0.316866  0.968601\n",
              "3 -480.938420  67.887930 -11.284238  ...  3.324071  1.534826  1.548304\n",
              "4 -678.408280  78.749116   4.000729  ... -0.184366 -1.840304  2.377748\n",
              "\n",
              "[5 rows x 40 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mAoKutXRBDpG"
      },
      "source": [
        "import pandas as pd\n",
        "#Join labels with features\n",
        "newdf_ravdess = pd.concat([rawdata_ravdess_final,labels], axis=1)"
      ],
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_v-w-nGrBKPm"
      },
      "source": [
        "#Rename dataframe\n",
        "newdf_ravdess = newdf_ravdess.rename(index=str, columns={\"0\": \"label\"})"
      ],
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zub0uE6QBMsJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ee4e2b69-e4e4-4ddf-9983-bb1d1ba8b31f"
      },
      "source": [
        "#Analyze dataframe shape\n",
        "newdf_ravdess.shape"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VVS_wAR9BOpg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "d9849b6c-cfaf-4900-a99c-04226e435b3e"
      },
      "source": [
        "#Anayze dataframe sample\n",
        "newdf_ravdess.head()"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-784.577524</td>\n",
              "      <td>85.333768</td>\n",
              "      <td>13.239951</td>\n",
              "      <td>24.523984</td>\n",
              "      <td>19.261336</td>\n",
              "      <td>12.627748</td>\n",
              "      <td>-1.801980</td>\n",
              "      <td>-8.672687</td>\n",
              "      <td>-2.934895</td>\n",
              "      <td>2.595684</td>\n",
              "      <td>-1.352264</td>\n",
              "      <td>3.390467</td>\n",
              "      <td>2.674184</td>\n",
              "      <td>-0.303474</td>\n",
              "      <td>-2.387730</td>\n",
              "      <td>3.557101</td>\n",
              "      <td>-0.633918</td>\n",
              "      <td>0.850597</td>\n",
              "      <td>-1.327744</td>\n",
              "      <td>1.685434</td>\n",
              "      <td>-0.158471</td>\n",
              "      <td>-0.515570</td>\n",
              "      <td>-5.705883</td>\n",
              "      <td>1.465504</td>\n",
              "      <td>-4.042635</td>\n",
              "      <td>1.582502</td>\n",
              "      <td>-2.244806</td>\n",
              "      <td>-0.053174</td>\n",
              "      <td>-2.001580</td>\n",
              "      <td>0.290329</td>\n",
              "      <td>-0.932101</td>\n",
              "      <td>1.110399</td>\n",
              "      <td>-3.342542</td>\n",
              "      <td>0.643032</td>\n",
              "      <td>-2.507690</td>\n",
              "      <td>0.917407</td>\n",
              "      <td>-0.407260</td>\n",
              "      <td>0.767098</td>\n",
              "      <td>-3.555686</td>\n",
              "      <td>-0.703741</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-780.585111</td>\n",
              "      <td>75.977583</td>\n",
              "      <td>25.122043</td>\n",
              "      <td>30.031968</td>\n",
              "      <td>17.575570</td>\n",
              "      <td>17.191645</td>\n",
              "      <td>2.843732</td>\n",
              "      <td>-6.127932</td>\n",
              "      <td>-0.752872</td>\n",
              "      <td>8.419187</td>\n",
              "      <td>-1.081468</td>\n",
              "      <td>3.346298</td>\n",
              "      <td>3.746447</td>\n",
              "      <td>-1.988525</td>\n",
              "      <td>-3.279077</td>\n",
              "      <td>3.187197</td>\n",
              "      <td>-0.394093</td>\n",
              "      <td>0.712212</td>\n",
              "      <td>-1.697899</td>\n",
              "      <td>1.614260</td>\n",
              "      <td>-1.285526</td>\n",
              "      <td>0.651023</td>\n",
              "      <td>-7.815984</td>\n",
              "      <td>1.335634</td>\n",
              "      <td>-5.391410</td>\n",
              "      <td>1.414345</td>\n",
              "      <td>-4.797839</td>\n",
              "      <td>-0.990241</td>\n",
              "      <td>-4.142564</td>\n",
              "      <td>0.165949</td>\n",
              "      <td>-3.554475</td>\n",
              "      <td>-0.592912</td>\n",
              "      <td>-3.332172</td>\n",
              "      <td>1.237368</td>\n",
              "      <td>-2.783249</td>\n",
              "      <td>1.532234</td>\n",
              "      <td>-2.405433</td>\n",
              "      <td>0.724621</td>\n",
              "      <td>-2.831218</td>\n",
              "      <td>0.674829</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-455.940775</td>\n",
              "      <td>62.885961</td>\n",
              "      <td>-20.995647</td>\n",
              "      <td>2.914253</td>\n",
              "      <td>7.584065</td>\n",
              "      <td>-15.206440</td>\n",
              "      <td>-18.136217</td>\n",
              "      <td>-8.958958</td>\n",
              "      <td>-17.358015</td>\n",
              "      <td>-2.310023</td>\n",
              "      <td>-2.420561</td>\n",
              "      <td>-5.328655</td>\n",
              "      <td>-6.421264</td>\n",
              "      <td>2.617524</td>\n",
              "      <td>-8.645651</td>\n",
              "      <td>1.468487</td>\n",
              "      <td>-5.029236</td>\n",
              "      <td>-5.991222</td>\n",
              "      <td>-3.753320</td>\n",
              "      <td>-3.134025</td>\n",
              "      <td>-7.015093</td>\n",
              "      <td>-7.883257</td>\n",
              "      <td>-7.105053</td>\n",
              "      <td>-3.922285</td>\n",
              "      <td>-5.592626</td>\n",
              "      <td>4.355114</td>\n",
              "      <td>4.106374</td>\n",
              "      <td>10.207855</td>\n",
              "      <td>8.678793</td>\n",
              "      <td>6.576563</td>\n",
              "      <td>5.797166</td>\n",
              "      <td>4.647752</td>\n",
              "      <td>0.914842</td>\n",
              "      <td>3.511614</td>\n",
              "      <td>2.694716</td>\n",
              "      <td>4.143307</td>\n",
              "      <td>2.768409</td>\n",
              "      <td>3.438254</td>\n",
              "      <td>0.316866</td>\n",
              "      <td>0.968601</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-480.938420</td>\n",
              "      <td>67.887930</td>\n",
              "      <td>-11.284238</td>\n",
              "      <td>6.979242</td>\n",
              "      <td>10.933571</td>\n",
              "      <td>-4.856331</td>\n",
              "      <td>-11.505220</td>\n",
              "      <td>-11.465318</td>\n",
              "      <td>-18.108471</td>\n",
              "      <td>-1.732244</td>\n",
              "      <td>-5.602005</td>\n",
              "      <td>-4.532730</td>\n",
              "      <td>-1.352994</td>\n",
              "      <td>2.327400</td>\n",
              "      <td>-8.942687</td>\n",
              "      <td>3.235608</td>\n",
              "      <td>-7.040774</td>\n",
              "      <td>-6.671137</td>\n",
              "      <td>-1.953822</td>\n",
              "      <td>-0.805865</td>\n",
              "      <td>-5.467327</td>\n",
              "      <td>-4.902957</td>\n",
              "      <td>-5.285383</td>\n",
              "      <td>-2.534921</td>\n",
              "      <td>-6.316572</td>\n",
              "      <td>-4.025567</td>\n",
              "      <td>-4.395670</td>\n",
              "      <td>0.652093</td>\n",
              "      <td>-0.097347</td>\n",
              "      <td>2.435726</td>\n",
              "      <td>6.409734</td>\n",
              "      <td>7.234785</td>\n",
              "      <td>5.329042</td>\n",
              "      <td>7.428819</td>\n",
              "      <td>4.922043</td>\n",
              "      <td>4.167335</td>\n",
              "      <td>1.338060</td>\n",
              "      <td>3.324071</td>\n",
              "      <td>1.534826</td>\n",
              "      <td>1.548304</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-678.408280</td>\n",
              "      <td>78.749116</td>\n",
              "      <td>4.000729</td>\n",
              "      <td>25.084586</td>\n",
              "      <td>14.905587</td>\n",
              "      <td>5.708571</td>\n",
              "      <td>-10.986725</td>\n",
              "      <td>-7.889160</td>\n",
              "      <td>-10.248973</td>\n",
              "      <td>-0.454468</td>\n",
              "      <td>-4.726016</td>\n",
              "      <td>-11.024796</td>\n",
              "      <td>-5.174500</td>\n",
              "      <td>0.848101</td>\n",
              "      <td>-7.095545</td>\n",
              "      <td>2.358816</td>\n",
              "      <td>-1.627017</td>\n",
              "      <td>-4.601880</td>\n",
              "      <td>-6.636921</td>\n",
              "      <td>3.055247</td>\n",
              "      <td>-4.791150</td>\n",
              "      <td>-2.898750</td>\n",
              "      <td>-6.152463</td>\n",
              "      <td>-0.452900</td>\n",
              "      <td>-3.698754</td>\n",
              "      <td>-0.003334</td>\n",
              "      <td>-6.172590</td>\n",
              "      <td>-0.148892</td>\n",
              "      <td>-4.448429</td>\n",
              "      <td>0.509011</td>\n",
              "      <td>-2.527811</td>\n",
              "      <td>0.844251</td>\n",
              "      <td>-4.570755</td>\n",
              "      <td>-1.211728</td>\n",
              "      <td>-1.728730</td>\n",
              "      <td>1.013226</td>\n",
              "      <td>-0.012598</td>\n",
              "      <td>-0.184366</td>\n",
              "      <td>-1.840304</td>\n",
              "      <td>2.377748</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            0          1          2  ...        38        39  emotion\n",
              "0 -784.577524  85.333768  13.239951  ... -3.555686 -0.703741      sad\n",
              "1 -780.585111  75.977583  25.122043  ... -2.831218  0.674829      sad\n",
              "2 -455.940775  62.885961 -20.995647  ...  0.316866  0.968601    happy\n",
              "3 -480.938420  67.887930 -11.284238  ...  1.534826  1.548304    happy\n",
              "4 -678.408280  78.749116   4.000729  ... -1.840304  2.377748      sad\n",
              "\n",
              "[5 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MSRfSMafBTe4"
      },
      "source": [
        "#Datafram drop Nan values\n",
        "newdf_ravdess.dropna(inplace=True)  # Dropping N/A from the dataset"
      ],
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t8MOF4vUByq0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "outputId": "1e4a1574-ca1b-4bf1-c5d8-5a2b2fe2e4d7"
      },
      "source": [
        "from sklearn.utils import shuffle\n",
        "\n",
        "#Shuffle dataframe\n",
        "newdf_ravdess = shuffle(newdf_ravdess)\n",
        "newdf_ravdess.head(8)"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1421</th>\n",
              "      <td>-725.366476</td>\n",
              "      <td>83.989666</td>\n",
              "      <td>14.727260</td>\n",
              "      <td>24.887943</td>\n",
              "      <td>13.297186</td>\n",
              "      <td>4.779477</td>\n",
              "      <td>0.811175</td>\n",
              "      <td>-4.367169</td>\n",
              "      <td>-0.572266</td>\n",
              "      <td>2.226449</td>\n",
              "      <td>-6.471383</td>\n",
              "      <td>3.894954</td>\n",
              "      <td>-0.155805</td>\n",
              "      <td>1.568972</td>\n",
              "      <td>1.106344</td>\n",
              "      <td>0.729295</td>\n",
              "      <td>1.114766</td>\n",
              "      <td>0.220710</td>\n",
              "      <td>-4.697564</td>\n",
              "      <td>4.721757</td>\n",
              "      <td>-2.097874</td>\n",
              "      <td>-1.758010</td>\n",
              "      <td>-6.036125</td>\n",
              "      <td>0.143014</td>\n",
              "      <td>-2.954068</td>\n",
              "      <td>-0.802055</td>\n",
              "      <td>-3.291179</td>\n",
              "      <td>-1.625022</td>\n",
              "      <td>-2.083253</td>\n",
              "      <td>-0.833777</td>\n",
              "      <td>-3.810966</td>\n",
              "      <td>-0.106121</td>\n",
              "      <td>-2.650996</td>\n",
              "      <td>-1.365217</td>\n",
              "      <td>-2.530238</td>\n",
              "      <td>0.153652</td>\n",
              "      <td>-3.118864</td>\n",
              "      <td>-1.391455</td>\n",
              "      <td>-3.428410</td>\n",
              "      <td>-0.738025</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>-544.892387</td>\n",
              "      <td>58.135734</td>\n",
              "      <td>-7.066632</td>\n",
              "      <td>10.148901</td>\n",
              "      <td>0.304595</td>\n",
              "      <td>-2.716220</td>\n",
              "      <td>-4.960555</td>\n",
              "      <td>-5.086074</td>\n",
              "      <td>-11.469192</td>\n",
              "      <td>-1.566202</td>\n",
              "      <td>-2.384275</td>\n",
              "      <td>-5.441819</td>\n",
              "      <td>4.248379</td>\n",
              "      <td>-2.525720</td>\n",
              "      <td>-2.323182</td>\n",
              "      <td>3.088278</td>\n",
              "      <td>-8.097020</td>\n",
              "      <td>-1.556587</td>\n",
              "      <td>-1.193713</td>\n",
              "      <td>-2.478246</td>\n",
              "      <td>-1.856344</td>\n",
              "      <td>-1.316205</td>\n",
              "      <td>-0.965479</td>\n",
              "      <td>-0.861235</td>\n",
              "      <td>-3.997441</td>\n",
              "      <td>-0.109112</td>\n",
              "      <td>-2.938754</td>\n",
              "      <td>0.278319</td>\n",
              "      <td>-1.077078</td>\n",
              "      <td>0.726421</td>\n",
              "      <td>-1.795584</td>\n",
              "      <td>0.332506</td>\n",
              "      <td>-2.188952</td>\n",
              "      <td>1.790101</td>\n",
              "      <td>-0.536245</td>\n",
              "      <td>2.787661</td>\n",
              "      <td>0.977615</td>\n",
              "      <td>2.097084</td>\n",
              "      <td>0.956467</td>\n",
              "      <td>4.356293</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1372</th>\n",
              "      <td>-607.829497</td>\n",
              "      <td>61.560222</td>\n",
              "      <td>-12.277246</td>\n",
              "      <td>22.709758</td>\n",
              "      <td>4.068630</td>\n",
              "      <td>-4.800281</td>\n",
              "      <td>-0.757754</td>\n",
              "      <td>-8.427578</td>\n",
              "      <td>-1.399312</td>\n",
              "      <td>-1.996662</td>\n",
              "      <td>-1.664891</td>\n",
              "      <td>-4.814356</td>\n",
              "      <td>-1.949350</td>\n",
              "      <td>0.046696</td>\n",
              "      <td>-1.643026</td>\n",
              "      <td>-3.651781</td>\n",
              "      <td>-3.835672</td>\n",
              "      <td>1.882898</td>\n",
              "      <td>-2.619585</td>\n",
              "      <td>1.597530</td>\n",
              "      <td>-1.118891</td>\n",
              "      <td>0.799980</td>\n",
              "      <td>-0.712021</td>\n",
              "      <td>4.035598</td>\n",
              "      <td>-1.341058</td>\n",
              "      <td>1.447671</td>\n",
              "      <td>-1.467164</td>\n",
              "      <td>2.882020</td>\n",
              "      <td>0.539999</td>\n",
              "      <td>3.062271</td>\n",
              "      <td>-0.082652</td>\n",
              "      <td>3.699911</td>\n",
              "      <td>3.340868</td>\n",
              "      <td>5.754082</td>\n",
              "      <td>3.617755</td>\n",
              "      <td>3.465804</td>\n",
              "      <td>0.949888</td>\n",
              "      <td>3.869822</td>\n",
              "      <td>6.020906</td>\n",
              "      <td>8.699159</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1277</th>\n",
              "      <td>-593.385807</td>\n",
              "      <td>47.311929</td>\n",
              "      <td>-22.016173</td>\n",
              "      <td>9.546989</td>\n",
              "      <td>-4.906760</td>\n",
              "      <td>-12.708190</td>\n",
              "      <td>-11.129473</td>\n",
              "      <td>-11.228986</td>\n",
              "      <td>-7.164225</td>\n",
              "      <td>0.122755</td>\n",
              "      <td>-9.190720</td>\n",
              "      <td>-4.102889</td>\n",
              "      <td>-4.216943</td>\n",
              "      <td>-7.134343</td>\n",
              "      <td>-5.653481</td>\n",
              "      <td>-4.863045</td>\n",
              "      <td>-8.382255</td>\n",
              "      <td>-5.159651</td>\n",
              "      <td>-5.213465</td>\n",
              "      <td>-4.309242</td>\n",
              "      <td>1.887895</td>\n",
              "      <td>-0.010729</td>\n",
              "      <td>-1.696637</td>\n",
              "      <td>0.375695</td>\n",
              "      <td>-5.654093</td>\n",
              "      <td>1.747221</td>\n",
              "      <td>0.370453</td>\n",
              "      <td>6.917199</td>\n",
              "      <td>5.305206</td>\n",
              "      <td>8.580008</td>\n",
              "      <td>4.854828</td>\n",
              "      <td>9.729269</td>\n",
              "      <td>3.246346</td>\n",
              "      <td>5.917922</td>\n",
              "      <td>1.752975</td>\n",
              "      <td>3.499367</td>\n",
              "      <td>-0.344904</td>\n",
              "      <td>-0.011289</td>\n",
              "      <td>1.065181</td>\n",
              "      <td>4.522814</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>250</th>\n",
              "      <td>-396.717624</td>\n",
              "      <td>35.119368</td>\n",
              "      <td>-23.565597</td>\n",
              "      <td>-10.980303</td>\n",
              "      <td>-9.346131</td>\n",
              "      <td>-13.895790</td>\n",
              "      <td>-13.459879</td>\n",
              "      <td>-20.919057</td>\n",
              "      <td>-14.021924</td>\n",
              "      <td>-1.410225</td>\n",
              "      <td>-11.595626</td>\n",
              "      <td>-1.264487</td>\n",
              "      <td>0.201275</td>\n",
              "      <td>11.170476</td>\n",
              "      <td>7.408953</td>\n",
              "      <td>4.525621</td>\n",
              "      <td>2.205337</td>\n",
              "      <td>6.940796</td>\n",
              "      <td>-0.263236</td>\n",
              "      <td>0.794389</td>\n",
              "      <td>2.363212</td>\n",
              "      <td>4.008390</td>\n",
              "      <td>-0.676791</td>\n",
              "      <td>2.881441</td>\n",
              "      <td>-3.432956</td>\n",
              "      <td>2.920585</td>\n",
              "      <td>2.145350</td>\n",
              "      <td>2.588585</td>\n",
              "      <td>1.576739</td>\n",
              "      <td>6.872527</td>\n",
              "      <td>3.439122</td>\n",
              "      <td>2.704460</td>\n",
              "      <td>1.975714</td>\n",
              "      <td>4.987883</td>\n",
              "      <td>1.526038</td>\n",
              "      <td>2.701368</td>\n",
              "      <td>0.796627</td>\n",
              "      <td>2.554355</td>\n",
              "      <td>0.546216</td>\n",
              "      <td>2.534085</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>-460.523123</td>\n",
              "      <td>48.165489</td>\n",
              "      <td>-12.678136</td>\n",
              "      <td>8.551899</td>\n",
              "      <td>9.399579</td>\n",
              "      <td>-6.392791</td>\n",
              "      <td>-3.115762</td>\n",
              "      <td>-6.014284</td>\n",
              "      <td>-10.314219</td>\n",
              "      <td>3.499410</td>\n",
              "      <td>-4.824936</td>\n",
              "      <td>0.215435</td>\n",
              "      <td>0.613630</td>\n",
              "      <td>-2.586451</td>\n",
              "      <td>0.512840</td>\n",
              "      <td>0.119128</td>\n",
              "      <td>-5.916326</td>\n",
              "      <td>-0.890210</td>\n",
              "      <td>-1.454188</td>\n",
              "      <td>-0.766072</td>\n",
              "      <td>-5.380818</td>\n",
              "      <td>0.847879</td>\n",
              "      <td>-2.623794</td>\n",
              "      <td>-2.476475</td>\n",
              "      <td>-4.931559</td>\n",
              "      <td>0.144248</td>\n",
              "      <td>-4.884308</td>\n",
              "      <td>0.766459</td>\n",
              "      <td>-5.855433</td>\n",
              "      <td>1.018554</td>\n",
              "      <td>-1.916523</td>\n",
              "      <td>0.065664</td>\n",
              "      <td>1.912007</td>\n",
              "      <td>3.987452</td>\n",
              "      <td>6.287993</td>\n",
              "      <td>9.624576</td>\n",
              "      <td>9.862627</td>\n",
              "      <td>10.875604</td>\n",
              "      <td>8.362492</td>\n",
              "      <td>6.056346</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>665</th>\n",
              "      <td>-622.707408</td>\n",
              "      <td>72.253742</td>\n",
              "      <td>-0.555253</td>\n",
              "      <td>18.660129</td>\n",
              "      <td>6.413069</td>\n",
              "      <td>6.193134</td>\n",
              "      <td>-8.361756</td>\n",
              "      <td>-5.655858</td>\n",
              "      <td>-5.948493</td>\n",
              "      <td>-7.944620</td>\n",
              "      <td>-0.684736</td>\n",
              "      <td>-2.861759</td>\n",
              "      <td>-4.815243</td>\n",
              "      <td>-0.469262</td>\n",
              "      <td>-2.293248</td>\n",
              "      <td>-3.061990</td>\n",
              "      <td>-1.589773</td>\n",
              "      <td>1.662044</td>\n",
              "      <td>-2.565639</td>\n",
              "      <td>3.206527</td>\n",
              "      <td>-1.922369</td>\n",
              "      <td>0.924903</td>\n",
              "      <td>-5.387041</td>\n",
              "      <td>4.393658</td>\n",
              "      <td>-3.849171</td>\n",
              "      <td>-0.822352</td>\n",
              "      <td>0.281382</td>\n",
              "      <td>2.290758</td>\n",
              "      <td>-1.646460</td>\n",
              "      <td>2.197477</td>\n",
              "      <td>2.011058</td>\n",
              "      <td>0.449931</td>\n",
              "      <td>-1.106713</td>\n",
              "      <td>2.542878</td>\n",
              "      <td>0.918139</td>\n",
              "      <td>3.736398</td>\n",
              "      <td>1.263870</td>\n",
              "      <td>2.336452</td>\n",
              "      <td>-1.153689</td>\n",
              "      <td>3.647519</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1291</th>\n",
              "      <td>-534.718566</td>\n",
              "      <td>33.095875</td>\n",
              "      <td>-22.476157</td>\n",
              "      <td>3.731341</td>\n",
              "      <td>-13.820152</td>\n",
              "      <td>-20.298401</td>\n",
              "      <td>-13.899294</td>\n",
              "      <td>-8.749139</td>\n",
              "      <td>-10.449940</td>\n",
              "      <td>-0.897520</td>\n",
              "      <td>-9.426193</td>\n",
              "      <td>-7.325030</td>\n",
              "      <td>-9.705283</td>\n",
              "      <td>-2.544880</td>\n",
              "      <td>-4.886387</td>\n",
              "      <td>-3.589148</td>\n",
              "      <td>6.467552</td>\n",
              "      <td>5.968996</td>\n",
              "      <td>11.725615</td>\n",
              "      <td>8.370816</td>\n",
              "      <td>2.991421</td>\n",
              "      <td>3.151625</td>\n",
              "      <td>-1.957046</td>\n",
              "      <td>3.785109</td>\n",
              "      <td>-2.293662</td>\n",
              "      <td>-0.563708</td>\n",
              "      <td>-4.244029</td>\n",
              "      <td>-0.146994</td>\n",
              "      <td>-4.812838</td>\n",
              "      <td>3.201696</td>\n",
              "      <td>-0.586951</td>\n",
              "      <td>3.733156</td>\n",
              "      <td>1.483783</td>\n",
              "      <td>6.573373</td>\n",
              "      <td>2.526298</td>\n",
              "      <td>4.730870</td>\n",
              "      <td>1.983866</td>\n",
              "      <td>5.561384</td>\n",
              "      <td>1.239051</td>\n",
              "      <td>1.133919</td>\n",
              "      <td>disgust</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               0          1          2  ...        38        39  emotion\n",
              "1421 -725.366476  83.989666  14.727260  ... -3.428410 -0.738025  neutral\n",
              "319  -544.892387  58.135734  -7.066632  ...  0.956467  4.356293    angry\n",
              "1372 -607.829497  61.560222 -12.277246  ...  6.020906  8.699159    happy\n",
              "1277 -593.385807  47.311929 -22.016173  ...  1.065181  4.522814    angry\n",
              "250  -396.717624  35.119368 -23.565597  ...  0.546216  2.534085     fear\n",
              "422  -460.523123  48.165489 -12.678136  ...  8.362492  6.056346     fear\n",
              "665  -622.707408  72.253742  -0.555253  ... -1.153689  3.647519      sad\n",
              "1291 -534.718566  33.095875 -22.476157  ...  1.239051  1.133919  disgust\n",
              "\n",
              "[8 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6f-x-MGHB0o-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a1994ca6-fec4-4f97-9779-1e760f0f97dc"
      },
      "source": [
        "#Verify that there are no null values\n",
        "newdf_ravdess.isnull().values.any()"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7dwYdXeBB5Om",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "b0815add-0093-4df5-ee28-4096d713d731"
      },
      "source": [
        "# Check dataframe sample\n",
        "newdf_ravdess.head(5)"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1421</th>\n",
              "      <td>-725.366476</td>\n",
              "      <td>83.989666</td>\n",
              "      <td>14.727260</td>\n",
              "      <td>24.887943</td>\n",
              "      <td>13.297186</td>\n",
              "      <td>4.779477</td>\n",
              "      <td>0.811175</td>\n",
              "      <td>-4.367169</td>\n",
              "      <td>-0.572266</td>\n",
              "      <td>2.226449</td>\n",
              "      <td>-6.471383</td>\n",
              "      <td>3.894954</td>\n",
              "      <td>-0.155805</td>\n",
              "      <td>1.568972</td>\n",
              "      <td>1.106344</td>\n",
              "      <td>0.729295</td>\n",
              "      <td>1.114766</td>\n",
              "      <td>0.220710</td>\n",
              "      <td>-4.697564</td>\n",
              "      <td>4.721757</td>\n",
              "      <td>-2.097874</td>\n",
              "      <td>-1.758010</td>\n",
              "      <td>-6.036125</td>\n",
              "      <td>0.143014</td>\n",
              "      <td>-2.954068</td>\n",
              "      <td>-0.802055</td>\n",
              "      <td>-3.291179</td>\n",
              "      <td>-1.625022</td>\n",
              "      <td>-2.083253</td>\n",
              "      <td>-0.833777</td>\n",
              "      <td>-3.810966</td>\n",
              "      <td>-0.106121</td>\n",
              "      <td>-2.650996</td>\n",
              "      <td>-1.365217</td>\n",
              "      <td>-2.530238</td>\n",
              "      <td>0.153652</td>\n",
              "      <td>-3.118864</td>\n",
              "      <td>-1.391455</td>\n",
              "      <td>-3.428410</td>\n",
              "      <td>-0.738025</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>-544.892387</td>\n",
              "      <td>58.135734</td>\n",
              "      <td>-7.066632</td>\n",
              "      <td>10.148901</td>\n",
              "      <td>0.304595</td>\n",
              "      <td>-2.716220</td>\n",
              "      <td>-4.960555</td>\n",
              "      <td>-5.086074</td>\n",
              "      <td>-11.469192</td>\n",
              "      <td>-1.566202</td>\n",
              "      <td>-2.384275</td>\n",
              "      <td>-5.441819</td>\n",
              "      <td>4.248379</td>\n",
              "      <td>-2.525720</td>\n",
              "      <td>-2.323182</td>\n",
              "      <td>3.088278</td>\n",
              "      <td>-8.097020</td>\n",
              "      <td>-1.556587</td>\n",
              "      <td>-1.193713</td>\n",
              "      <td>-2.478246</td>\n",
              "      <td>-1.856344</td>\n",
              "      <td>-1.316205</td>\n",
              "      <td>-0.965479</td>\n",
              "      <td>-0.861235</td>\n",
              "      <td>-3.997441</td>\n",
              "      <td>-0.109112</td>\n",
              "      <td>-2.938754</td>\n",
              "      <td>0.278319</td>\n",
              "      <td>-1.077078</td>\n",
              "      <td>0.726421</td>\n",
              "      <td>-1.795584</td>\n",
              "      <td>0.332506</td>\n",
              "      <td>-2.188952</td>\n",
              "      <td>1.790101</td>\n",
              "      <td>-0.536245</td>\n",
              "      <td>2.787661</td>\n",
              "      <td>0.977615</td>\n",
              "      <td>2.097084</td>\n",
              "      <td>0.956467</td>\n",
              "      <td>4.356293</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1372</th>\n",
              "      <td>-607.829497</td>\n",
              "      <td>61.560222</td>\n",
              "      <td>-12.277246</td>\n",
              "      <td>22.709758</td>\n",
              "      <td>4.068630</td>\n",
              "      <td>-4.800281</td>\n",
              "      <td>-0.757754</td>\n",
              "      <td>-8.427578</td>\n",
              "      <td>-1.399312</td>\n",
              "      <td>-1.996662</td>\n",
              "      <td>-1.664891</td>\n",
              "      <td>-4.814356</td>\n",
              "      <td>-1.949350</td>\n",
              "      <td>0.046696</td>\n",
              "      <td>-1.643026</td>\n",
              "      <td>-3.651781</td>\n",
              "      <td>-3.835672</td>\n",
              "      <td>1.882898</td>\n",
              "      <td>-2.619585</td>\n",
              "      <td>1.597530</td>\n",
              "      <td>-1.118891</td>\n",
              "      <td>0.799980</td>\n",
              "      <td>-0.712021</td>\n",
              "      <td>4.035598</td>\n",
              "      <td>-1.341058</td>\n",
              "      <td>1.447671</td>\n",
              "      <td>-1.467164</td>\n",
              "      <td>2.882020</td>\n",
              "      <td>0.539999</td>\n",
              "      <td>3.062271</td>\n",
              "      <td>-0.082652</td>\n",
              "      <td>3.699911</td>\n",
              "      <td>3.340868</td>\n",
              "      <td>5.754082</td>\n",
              "      <td>3.617755</td>\n",
              "      <td>3.465804</td>\n",
              "      <td>0.949888</td>\n",
              "      <td>3.869822</td>\n",
              "      <td>6.020906</td>\n",
              "      <td>8.699159</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1277</th>\n",
              "      <td>-593.385807</td>\n",
              "      <td>47.311929</td>\n",
              "      <td>-22.016173</td>\n",
              "      <td>9.546989</td>\n",
              "      <td>-4.906760</td>\n",
              "      <td>-12.708190</td>\n",
              "      <td>-11.129473</td>\n",
              "      <td>-11.228986</td>\n",
              "      <td>-7.164225</td>\n",
              "      <td>0.122755</td>\n",
              "      <td>-9.190720</td>\n",
              "      <td>-4.102889</td>\n",
              "      <td>-4.216943</td>\n",
              "      <td>-7.134343</td>\n",
              "      <td>-5.653481</td>\n",
              "      <td>-4.863045</td>\n",
              "      <td>-8.382255</td>\n",
              "      <td>-5.159651</td>\n",
              "      <td>-5.213465</td>\n",
              "      <td>-4.309242</td>\n",
              "      <td>1.887895</td>\n",
              "      <td>-0.010729</td>\n",
              "      <td>-1.696637</td>\n",
              "      <td>0.375695</td>\n",
              "      <td>-5.654093</td>\n",
              "      <td>1.747221</td>\n",
              "      <td>0.370453</td>\n",
              "      <td>6.917199</td>\n",
              "      <td>5.305206</td>\n",
              "      <td>8.580008</td>\n",
              "      <td>4.854828</td>\n",
              "      <td>9.729269</td>\n",
              "      <td>3.246346</td>\n",
              "      <td>5.917922</td>\n",
              "      <td>1.752975</td>\n",
              "      <td>3.499367</td>\n",
              "      <td>-0.344904</td>\n",
              "      <td>-0.011289</td>\n",
              "      <td>1.065181</td>\n",
              "      <td>4.522814</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>250</th>\n",
              "      <td>-396.717624</td>\n",
              "      <td>35.119368</td>\n",
              "      <td>-23.565597</td>\n",
              "      <td>-10.980303</td>\n",
              "      <td>-9.346131</td>\n",
              "      <td>-13.895790</td>\n",
              "      <td>-13.459879</td>\n",
              "      <td>-20.919057</td>\n",
              "      <td>-14.021924</td>\n",
              "      <td>-1.410225</td>\n",
              "      <td>-11.595626</td>\n",
              "      <td>-1.264487</td>\n",
              "      <td>0.201275</td>\n",
              "      <td>11.170476</td>\n",
              "      <td>7.408953</td>\n",
              "      <td>4.525621</td>\n",
              "      <td>2.205337</td>\n",
              "      <td>6.940796</td>\n",
              "      <td>-0.263236</td>\n",
              "      <td>0.794389</td>\n",
              "      <td>2.363212</td>\n",
              "      <td>4.008390</td>\n",
              "      <td>-0.676791</td>\n",
              "      <td>2.881441</td>\n",
              "      <td>-3.432956</td>\n",
              "      <td>2.920585</td>\n",
              "      <td>2.145350</td>\n",
              "      <td>2.588585</td>\n",
              "      <td>1.576739</td>\n",
              "      <td>6.872527</td>\n",
              "      <td>3.439122</td>\n",
              "      <td>2.704460</td>\n",
              "      <td>1.975714</td>\n",
              "      <td>4.987883</td>\n",
              "      <td>1.526038</td>\n",
              "      <td>2.701368</td>\n",
              "      <td>0.796627</td>\n",
              "      <td>2.554355</td>\n",
              "      <td>0.546216</td>\n",
              "      <td>2.534085</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               0          1          2  ...        38        39  emotion\n",
              "1421 -725.366476  83.989666  14.727260  ... -3.428410 -0.738025  neutral\n",
              "319  -544.892387  58.135734  -7.066632  ...  0.956467  4.356293    angry\n",
              "1372 -607.829497  61.560222 -12.277246  ...  6.020906  8.699159    happy\n",
              "1277 -593.385807  47.311929 -22.016173  ...  1.065181  4.522814    angry\n",
              "250  -396.717624  35.119368 -23.565597  ...  0.546216  2.534085     fear\n",
              "\n",
              "[5 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0YevphdiB66c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d8c87182-5d04-4a8e-c451-fd3dbe96304f"
      },
      "source": [
        "#Analyz shape of dataframe\n",
        "newdf_ravdess.shape"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1438, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K0ehFCtmB_Mv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "88882d98-5ddf-499c-8f8d-217310edcdca"
      },
      "source": [
        "# see number of emotions\n",
        "newdf_ravdess[newdf_ravdess.columns[-1]].nunique()"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2-b7eiWVCBPD"
      },
      "source": [
        "#Move dataframe into separate file\n",
        "newdf_ravdess.to_csv('emotion_capstone_final_ravdess_dataframe_Anuj_Goyal.csv')"
      ],
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aQtmV6a-CDgR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a93a7588-ac34-4a48-b639-2c0eeabbc48b"
      },
      "source": [
        "from scipy.io import wavfile\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import glob \n",
        "import sys\n",
        "import os\n",
        "# Build list of audio files\n",
        "\n",
        "os.chdir('/content/drive/My Drive/RawData/TESS Toronto emotional speech set data')\n",
        "\n",
        "mypath = !pwd\n",
        "raw_data_tess_path1=str(mypath)\n",
        "raw_data_tess_path2 = raw_data_tess_path1.replace(\"'\", \"\")\n",
        "raw_data_tess_path3 = raw_data_tess_path2.replace(\"[\", \"\")\n",
        "raw_data_tess_path = raw_data_tess_path3.replace(\"]\", \"/\")\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "print(raw_data_tess_path)\n",
        "folder_list_tess = os.listdir('/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/')\n",
        "\n",
        "#print(folder_list_tess)"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dqYJ3F_KHKVn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6a8c5279-0c78-456f-c04b-b10b023ba425"
      },
      "source": [
        "tess_list = []\n",
        "\n",
        "for folder in folder_list_tess:\n",
        "    folder_path = raw_data_tess_path + folder+'//'\n",
        "    os.chdir(folder_path)\n",
        "    for file in glob.glob(\"*.wav\"):\n",
        "        tess_list.append(folder_path+file)\n",
        "\n",
        "#Check results\n",
        "tess_list[:8]\n",
        "#print(len(tess_list))"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_ton_ps.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_take_ps.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_back_sad.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_wheat_ps.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_thumb_ps.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_bite_sad.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_void_ps.wav',\n",
              " '/content/drive/My Drive/RawData/TESS Toronto emotional speech set data/TESS Full Dataset//OAF_team_ps.wav']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8KOzMXoaHg3_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b10688f6-f1a9-4eab-e8f8-24525a736a67"
      },
      "source": [
        "#Build list of emotions for Tess\n",
        "feeling_list_tess = []\n",
        "\n",
        "#'angry', 'disgust', 'fear', 'happy', 'sad' and 'surprised' emotion classes respectively.  \n",
        "\n",
        "emotion_dic = {\"angry\":'angry', \n",
        "               \"disgust\":'disgust', \n",
        "               \"fear\":'fear', \n",
        "               \"happy\":'happy',  \n",
        "               \"sad\":'sad', \n",
        "               \"ps\":'surprised',\n",
        "               \"neutral\" :'neutral'}\n",
        "\n",
        "for file_path in tess_list:\n",
        "    file = file_path.split(\"\\\\\")[-1] \n",
        "    file_name = file.split(\".\")[0] \n",
        "    #print(file_name)\n",
        "    #x= file_name.rsplit('_')[-1]\n",
        "    x=file_name.split(\"_\")[-1]\n",
        "    feeling_list_tess.append(emotion_dic[x])\n",
        "\n",
        "#Verify emotions\n",
        "feeling_list_tess"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['surprised',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'surprised',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'sad',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'angry',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'disgust',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'happy',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " 'neutral',\n",
              " ...]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SfJwjI84M2zQ"
      },
      "source": [
        "#Build dataframe from array\n",
        "labels_tess = pd.DataFrame(feeling_list_tess)"
      ],
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jZS-t1xHM8bc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "cfd2218e-025d-49f6-fa60-a5676706cdfe"
      },
      "source": [
        "#Check results\n",
        "labels_tess.head()"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           0\n",
              "0  surprised\n",
              "1  surprised\n",
              "2        sad\n",
              "3  surprised\n",
              "4  surprised"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GOcYQfYDM-Dw"
      },
      "source": [
        "#Rename column to emotion\n",
        "labels_tess = labels_tess.rename({0: 'emotion'}, axis=1)"
      ],
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h62Si5X_NDK1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "225c0abc-6a6c-4de3-9819-51328378b9bb"
      },
      "source": [
        "#Check shape\n",
        "labels_tess.shape"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1400, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yzo6AZPgNFL0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "ea0bb4da-41fd-494e-a46b-e343872b32a7"
      },
      "source": [
        "#Check results\n",
        "labels_tess.head()"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     emotion\n",
              "0  surprised\n",
              "1  surprised\n",
              "2        sad\n",
              "3  surprised\n",
              "4  surprised"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nH8UPgrkNG6e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "9aaf2648-dc2b-46b6-95e5-4f280f5220b2"
      },
      "source": [
        "#Check emotion size\n",
        "labels_tess_total = pd.DataFrame(labels_tess.groupby(['emotion']).size())\n",
        "labels_tess_total"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>angry</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>disgust</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fear</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>happy</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>neutral</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sad</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>surprised</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             0\n",
              "emotion       \n",
              "angry      200\n",
              "disgust    200\n",
              "fear       200\n",
              "happy      200\n",
              "neutral    200\n",
              "sad        200\n",
              "surprised  200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5K9Yrd97NJJv"
      },
      "source": [
        "rawdata_tess = pd.DataFrame(columns=['feature'])\n",
        "bookmark=0\n",
        "\n",
        "for y in tess_list:\n",
        "    #Get audio features\n",
        "    X, sample_rate = librosa.load(y, \n",
        "                                  res_type = res_type_s,\n",
        "                                  duration = duration_s,\n",
        "                                  sr = sample_rate_s,\n",
        "                                  offset=offset_s)\n",
        "    \n",
        "    #Get MFFC features\n",
        "    mfccs = librosa.feature.mfcc(   y=X, \n",
        "                                    sr = mfcc_sample_rate, \n",
        "                                    n_mfcc = n_mfcc)\n",
        "    #Get MFFCs average features\n",
        "    mfccs_mean = np.mean(    mfccs, \n",
        "                             axis = axis_mfcc)\n",
        "    feature = mfccs_mean\n",
        "    rawdata_tess.loc[bookmark] = [feature]\n",
        "    bookmark=bookmark+1"
      ],
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6Xjqw8X6SDF5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75d3dc3c-a595-460d-9ac6-10b8e4abad05"
      },
      "source": [
        "#Verify Tess features shape\n",
        "rawdata_tess.shape"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1400, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sE0RNTrxSJMy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "892dbb80-a5e2-4074-ab3d-e78a07aac524"
      },
      "source": [
        "#Check that there are no nan values\n",
        "rawdata_tess.isnull().values.any()"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J85uxiv4SXfq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "00af2ecb-33ff-4518-de49-a92ab2ab7e97"
      },
      "source": [
        "#Get sample data\n",
        "rawdata_tess.head()"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>feature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>[-393.0647126906751, 104.22833070965264, -8.03...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>[-428.4309886544094, 95.77367454846998, -3.015...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>[-558.203237808443, 102.06020857774865, 23.940...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>[-466.74610210435526, 104.01774037812116, 27.2...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>[-421.5367021670852, 91.8683265812232, 20.3362...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                             feature\n",
              "0  [-393.0647126906751, 104.22833070965264, -8.03...\n",
              "1  [-428.4309886544094, 95.77367454846998, -3.015...\n",
              "2  [-558.203237808443, 102.06020857774865, 23.940...\n",
              "3  [-466.74610210435526, 104.01774037812116, 27.2...\n",
              "4  [-421.5367021670852, 91.8683265812232, 20.3362..."
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vwUPIxXTTwOo"
      },
      "source": [
        "#Build list\n",
        "rawdata_tess_final = pd.DataFrame(rawdata_tess['feature'].values.tolist())"
      ],
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lw-UZiVETw5j",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "786dfb85-5ff1-44a6-b11b-f8a8d4c5412c"
      },
      "source": [
        "#Check dataframe\n",
        "rawdata_tess_final"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-393.064713</td>\n",
              "      <td>104.228331</td>\n",
              "      <td>-8.033372</td>\n",
              "      <td>-12.158992</td>\n",
              "      <td>4.100746</td>\n",
              "      <td>-3.314525</td>\n",
              "      <td>-12.176581</td>\n",
              "      <td>1.024435</td>\n",
              "      <td>-19.445951</td>\n",
              "      <td>-2.537471</td>\n",
              "      <td>-16.357301</td>\n",
              "      <td>-8.237990</td>\n",
              "      <td>-9.272872</td>\n",
              "      <td>-5.568253</td>\n",
              "      <td>-4.608080</td>\n",
              "      <td>-0.588412</td>\n",
              "      <td>-0.219854</td>\n",
              "      <td>12.784038</td>\n",
              "      <td>4.757206</td>\n",
              "      <td>3.076212</td>\n",
              "      <td>4.196416</td>\n",
              "      <td>3.117582</td>\n",
              "      <td>-2.327549</td>\n",
              "      <td>4.288047</td>\n",
              "      <td>-5.832544</td>\n",
              "      <td>3.408224</td>\n",
              "      <td>-7.591838</td>\n",
              "      <td>4.083526</td>\n",
              "      <td>-3.913253</td>\n",
              "      <td>1.166156</td>\n",
              "      <td>-2.227586</td>\n",
              "      <td>3.045442</td>\n",
              "      <td>5.947820</td>\n",
              "      <td>10.955508</td>\n",
              "      <td>14.158756</td>\n",
              "      <td>16.401156</td>\n",
              "      <td>17.695173</td>\n",
              "      <td>13.962237</td>\n",
              "      <td>7.746469</td>\n",
              "      <td>6.926811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-428.430989</td>\n",
              "      <td>95.773675</td>\n",
              "      <td>-3.015110</td>\n",
              "      <td>4.586076</td>\n",
              "      <td>8.635063</td>\n",
              "      <td>-8.666693</td>\n",
              "      <td>-19.007385</td>\n",
              "      <td>0.149618</td>\n",
              "      <td>-19.919284</td>\n",
              "      <td>-5.409258</td>\n",
              "      <td>-19.125048</td>\n",
              "      <td>-5.134354</td>\n",
              "      <td>-0.702090</td>\n",
              "      <td>-6.216142</td>\n",
              "      <td>-0.749200</td>\n",
              "      <td>4.695921</td>\n",
              "      <td>2.508728</td>\n",
              "      <td>10.645043</td>\n",
              "      <td>2.971020</td>\n",
              "      <td>-2.596046</td>\n",
              "      <td>2.236927</td>\n",
              "      <td>-1.994673</td>\n",
              "      <td>-3.324532</td>\n",
              "      <td>4.053984</td>\n",
              "      <td>-6.072053</td>\n",
              "      <td>4.405573</td>\n",
              "      <td>-7.259748</td>\n",
              "      <td>6.332849</td>\n",
              "      <td>-2.627318</td>\n",
              "      <td>5.356078</td>\n",
              "      <td>6.282688</td>\n",
              "      <td>10.086893</td>\n",
              "      <td>15.258396</td>\n",
              "      <td>11.157198</td>\n",
              "      <td>11.810318</td>\n",
              "      <td>15.538712</td>\n",
              "      <td>11.697254</td>\n",
              "      <td>13.231740</td>\n",
              "      <td>7.501947</td>\n",
              "      <td>5.610825</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-558.203238</td>\n",
              "      <td>102.060209</td>\n",
              "      <td>23.940581</td>\n",
              "      <td>10.404611</td>\n",
              "      <td>19.730547</td>\n",
              "      <td>16.288045</td>\n",
              "      <td>-10.664006</td>\n",
              "      <td>-8.242809</td>\n",
              "      <td>-14.201682</td>\n",
              "      <td>4.116901</td>\n",
              "      <td>-8.920832</td>\n",
              "      <td>7.290155</td>\n",
              "      <td>-8.062274</td>\n",
              "      <td>10.366964</td>\n",
              "      <td>4.709728</td>\n",
              "      <td>-1.621492</td>\n",
              "      <td>-2.694772</td>\n",
              "      <td>0.443869</td>\n",
              "      <td>3.679745</td>\n",
              "      <td>-3.409293</td>\n",
              "      <td>0.952581</td>\n",
              "      <td>2.139629</td>\n",
              "      <td>-5.205762</td>\n",
              "      <td>0.368632</td>\n",
              "      <td>-9.357077</td>\n",
              "      <td>0.518335</td>\n",
              "      <td>-2.416305</td>\n",
              "      <td>0.375091</td>\n",
              "      <td>-5.576669</td>\n",
              "      <td>7.667675</td>\n",
              "      <td>2.700076</td>\n",
              "      <td>11.158257</td>\n",
              "      <td>9.590239</td>\n",
              "      <td>11.256332</td>\n",
              "      <td>6.021088</td>\n",
              "      <td>8.419053</td>\n",
              "      <td>8.397544</td>\n",
              "      <td>8.734387</td>\n",
              "      <td>14.692656</td>\n",
              "      <td>15.106056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-466.746102</td>\n",
              "      <td>104.017740</td>\n",
              "      <td>27.219596</td>\n",
              "      <td>6.671581</td>\n",
              "      <td>16.054953</td>\n",
              "      <td>-7.443586</td>\n",
              "      <td>-3.763945</td>\n",
              "      <td>-3.696580</td>\n",
              "      <td>-21.906358</td>\n",
              "      <td>-3.656409</td>\n",
              "      <td>-19.845797</td>\n",
              "      <td>-8.962653</td>\n",
              "      <td>-3.655293</td>\n",
              "      <td>-4.544420</td>\n",
              "      <td>-2.447305</td>\n",
              "      <td>-2.139093</td>\n",
              "      <td>-1.049097</td>\n",
              "      <td>8.816945</td>\n",
              "      <td>4.000953</td>\n",
              "      <td>4.567353</td>\n",
              "      <td>1.232990</td>\n",
              "      <td>4.522492</td>\n",
              "      <td>-3.937750</td>\n",
              "      <td>2.564885</td>\n",
              "      <td>-1.887262</td>\n",
              "      <td>2.615352</td>\n",
              "      <td>-7.010739</td>\n",
              "      <td>3.596605</td>\n",
              "      <td>-5.019797</td>\n",
              "      <td>4.226246</td>\n",
              "      <td>-5.000799</td>\n",
              "      <td>-2.588915</td>\n",
              "      <td>-0.877083</td>\n",
              "      <td>2.580161</td>\n",
              "      <td>8.807711</td>\n",
              "      <td>14.667746</td>\n",
              "      <td>17.298415</td>\n",
              "      <td>19.770818</td>\n",
              "      <td>15.453272</td>\n",
              "      <td>12.034192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-421.536702</td>\n",
              "      <td>91.868327</td>\n",
              "      <td>20.336208</td>\n",
              "      <td>-14.177895</td>\n",
              "      <td>0.049593</td>\n",
              "      <td>5.512608</td>\n",
              "      <td>-0.112384</td>\n",
              "      <td>1.610796</td>\n",
              "      <td>-20.670020</td>\n",
              "      <td>-3.775931</td>\n",
              "      <td>-13.735750</td>\n",
              "      <td>-10.048589</td>\n",
              "      <td>-0.280590</td>\n",
              "      <td>-3.806409</td>\n",
              "      <td>-4.976410</td>\n",
              "      <td>1.123034</td>\n",
              "      <td>-4.974939</td>\n",
              "      <td>10.310057</td>\n",
              "      <td>0.141979</td>\n",
              "      <td>2.730788</td>\n",
              "      <td>2.355703</td>\n",
              "      <td>0.102942</td>\n",
              "      <td>-4.933080</td>\n",
              "      <td>4.832973</td>\n",
              "      <td>-2.421800</td>\n",
              "      <td>4.265729</td>\n",
              "      <td>-4.167171</td>\n",
              "      <td>1.713591</td>\n",
              "      <td>-3.695982</td>\n",
              "      <td>3.523024</td>\n",
              "      <td>-0.301838</td>\n",
              "      <td>3.555023</td>\n",
              "      <td>4.302198</td>\n",
              "      <td>5.961743</td>\n",
              "      <td>9.137798</td>\n",
              "      <td>11.396955</td>\n",
              "      <td>14.041527</td>\n",
              "      <td>16.377250</td>\n",
              "      <td>15.402454</td>\n",
              "      <td>17.600358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1395</th>\n",
              "      <td>-536.512004</td>\n",
              "      <td>106.750789</td>\n",
              "      <td>28.416613</td>\n",
              "      <td>8.970444</td>\n",
              "      <td>20.742506</td>\n",
              "      <td>15.393349</td>\n",
              "      <td>-3.771040</td>\n",
              "      <td>-6.118925</td>\n",
              "      <td>-15.442299</td>\n",
              "      <td>3.508829</td>\n",
              "      <td>-4.770205</td>\n",
              "      <td>4.086547</td>\n",
              "      <td>-9.679314</td>\n",
              "      <td>3.731612</td>\n",
              "      <td>2.432980</td>\n",
              "      <td>-1.037491</td>\n",
              "      <td>-4.089450</td>\n",
              "      <td>1.013642</td>\n",
              "      <td>1.441648</td>\n",
              "      <td>-4.594456</td>\n",
              "      <td>3.616582</td>\n",
              "      <td>-0.188733</td>\n",
              "      <td>-2.437144</td>\n",
              "      <td>0.380347</td>\n",
              "      <td>-8.227229</td>\n",
              "      <td>0.553122</td>\n",
              "      <td>-4.522375</td>\n",
              "      <td>-1.881177</td>\n",
              "      <td>-2.514969</td>\n",
              "      <td>3.077675</td>\n",
              "      <td>-1.343018</td>\n",
              "      <td>4.283805</td>\n",
              "      <td>3.199174</td>\n",
              "      <td>6.232114</td>\n",
              "      <td>5.782828</td>\n",
              "      <td>10.894559</td>\n",
              "      <td>12.079333</td>\n",
              "      <td>12.207502</td>\n",
              "      <td>14.399904</td>\n",
              "      <td>15.214200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1396</th>\n",
              "      <td>-564.497439</td>\n",
              "      <td>107.950099</td>\n",
              "      <td>43.945294</td>\n",
              "      <td>20.696722</td>\n",
              "      <td>21.444244</td>\n",
              "      <td>10.099970</td>\n",
              "      <td>2.063429</td>\n",
              "      <td>3.800612</td>\n",
              "      <td>-12.632793</td>\n",
              "      <td>-3.802378</td>\n",
              "      <td>-11.338892</td>\n",
              "      <td>-3.508805</td>\n",
              "      <td>-11.080032</td>\n",
              "      <td>-0.658633</td>\n",
              "      <td>-0.284242</td>\n",
              "      <td>-2.265595</td>\n",
              "      <td>-2.161875</td>\n",
              "      <td>2.341401</td>\n",
              "      <td>1.075981</td>\n",
              "      <td>-3.106282</td>\n",
              "      <td>-1.489145</td>\n",
              "      <td>-1.749032</td>\n",
              "      <td>-7.218842</td>\n",
              "      <td>2.599768</td>\n",
              "      <td>-5.201615</td>\n",
              "      <td>2.952039</td>\n",
              "      <td>-2.472093</td>\n",
              "      <td>2.788030</td>\n",
              "      <td>-2.244446</td>\n",
              "      <td>6.261553</td>\n",
              "      <td>6.464332</td>\n",
              "      <td>11.287631</td>\n",
              "      <td>7.459670</td>\n",
              "      <td>6.585104</td>\n",
              "      <td>4.575772</td>\n",
              "      <td>1.036401</td>\n",
              "      <td>4.038626</td>\n",
              "      <td>10.445570</td>\n",
              "      <td>10.675918</td>\n",
              "      <td>12.832165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1397</th>\n",
              "      <td>-446.383881</td>\n",
              "      <td>107.507493</td>\n",
              "      <td>4.796736</td>\n",
              "      <td>-18.311295</td>\n",
              "      <td>7.222064</td>\n",
              "      <td>0.628212</td>\n",
              "      <td>-11.116405</td>\n",
              "      <td>6.811908</td>\n",
              "      <td>-20.391670</td>\n",
              "      <td>-6.312933</td>\n",
              "      <td>-16.073757</td>\n",
              "      <td>-13.446818</td>\n",
              "      <td>-4.691627</td>\n",
              "      <td>-5.268364</td>\n",
              "      <td>-6.376009</td>\n",
              "      <td>2.949287</td>\n",
              "      <td>-3.611500</td>\n",
              "      <td>10.716067</td>\n",
              "      <td>2.311542</td>\n",
              "      <td>2.683717</td>\n",
              "      <td>2.961281</td>\n",
              "      <td>4.930986</td>\n",
              "      <td>-6.079398</td>\n",
              "      <td>0.982605</td>\n",
              "      <td>-7.645687</td>\n",
              "      <td>5.621020</td>\n",
              "      <td>-7.304281</td>\n",
              "      <td>2.923446</td>\n",
              "      <td>-6.140193</td>\n",
              "      <td>1.304108</td>\n",
              "      <td>3.121570</td>\n",
              "      <td>9.344289</td>\n",
              "      <td>16.819454</td>\n",
              "      <td>22.416956</td>\n",
              "      <td>20.046057</td>\n",
              "      <td>17.531816</td>\n",
              "      <td>13.351365</td>\n",
              "      <td>7.906923</td>\n",
              "      <td>5.254256</td>\n",
              "      <td>8.847595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1398</th>\n",
              "      <td>-426.421793</td>\n",
              "      <td>107.677444</td>\n",
              "      <td>3.488945</td>\n",
              "      <td>-19.908305</td>\n",
              "      <td>12.159415</td>\n",
              "      <td>3.757812</td>\n",
              "      <td>-12.084943</td>\n",
              "      <td>-0.945416</td>\n",
              "      <td>-16.076738</td>\n",
              "      <td>1.252954</td>\n",
              "      <td>-15.231416</td>\n",
              "      <td>-6.658887</td>\n",
              "      <td>-3.545313</td>\n",
              "      <td>0.778354</td>\n",
              "      <td>-6.373714</td>\n",
              "      <td>6.122555</td>\n",
              "      <td>-4.487575</td>\n",
              "      <td>7.011531</td>\n",
              "      <td>2.656823</td>\n",
              "      <td>-2.073471</td>\n",
              "      <td>2.341065</td>\n",
              "      <td>2.543179</td>\n",
              "      <td>-4.284626</td>\n",
              "      <td>3.369041</td>\n",
              "      <td>-3.004752</td>\n",
              "      <td>3.613262</td>\n",
              "      <td>-5.124739</td>\n",
              "      <td>4.644774</td>\n",
              "      <td>-3.607881</td>\n",
              "      <td>5.335443</td>\n",
              "      <td>-3.165052</td>\n",
              "      <td>-0.532723</td>\n",
              "      <td>-0.581784</td>\n",
              "      <td>1.810781</td>\n",
              "      <td>4.440430</td>\n",
              "      <td>9.705201</td>\n",
              "      <td>11.659803</td>\n",
              "      <td>15.595808</td>\n",
              "      <td>15.266903</td>\n",
              "      <td>15.747191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1399</th>\n",
              "      <td>-405.464318</td>\n",
              "      <td>101.157810</td>\n",
              "      <td>7.734806</td>\n",
              "      <td>-33.940330</td>\n",
              "      <td>0.272448</td>\n",
              "      <td>4.874550</td>\n",
              "      <td>-9.244098</td>\n",
              "      <td>7.111724</td>\n",
              "      <td>-17.310191</td>\n",
              "      <td>-0.449322</td>\n",
              "      <td>-15.875519</td>\n",
              "      <td>-2.125706</td>\n",
              "      <td>-1.491599</td>\n",
              "      <td>-0.862607</td>\n",
              "      <td>-1.589533</td>\n",
              "      <td>1.782368</td>\n",
              "      <td>-2.685281</td>\n",
              "      <td>8.642150</td>\n",
              "      <td>3.895204</td>\n",
              "      <td>-1.042086</td>\n",
              "      <td>3.669297</td>\n",
              "      <td>5.916429</td>\n",
              "      <td>-5.882715</td>\n",
              "      <td>6.297296</td>\n",
              "      <td>-4.432173</td>\n",
              "      <td>5.402935</td>\n",
              "      <td>-3.991420</td>\n",
              "      <td>4.695996</td>\n",
              "      <td>-0.938339</td>\n",
              "      <td>3.513955</td>\n",
              "      <td>-5.785551</td>\n",
              "      <td>-0.044010</td>\n",
              "      <td>0.296453</td>\n",
              "      <td>8.445430</td>\n",
              "      <td>15.689266</td>\n",
              "      <td>20.660389</td>\n",
              "      <td>21.843265</td>\n",
              "      <td>16.207499</td>\n",
              "      <td>7.883330</td>\n",
              "      <td>4.976465</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1400 rows × 40 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "              0           1          2   ...         37         38         39\n",
              "0    -393.064713  104.228331  -8.033372  ...  13.962237   7.746469   6.926811\n",
              "1    -428.430989   95.773675  -3.015110  ...  13.231740   7.501947   5.610825\n",
              "2    -558.203238  102.060209  23.940581  ...   8.734387  14.692656  15.106056\n",
              "3    -466.746102  104.017740  27.219596  ...  19.770818  15.453272  12.034192\n",
              "4    -421.536702   91.868327  20.336208  ...  16.377250  15.402454  17.600358\n",
              "...          ...         ...        ...  ...        ...        ...        ...\n",
              "1395 -536.512004  106.750789  28.416613  ...  12.207502  14.399904  15.214200\n",
              "1396 -564.497439  107.950099  43.945294  ...  10.445570  10.675918  12.832165\n",
              "1397 -446.383881  107.507493   4.796736  ...   7.906923   5.254256   8.847595\n",
              "1398 -426.421793  107.677444   3.488945  ...  15.595808  15.266903  15.747191\n",
              "1399 -405.464318  101.157810   7.734806  ...  16.207499   7.883330   4.976465\n",
              "\n",
              "[1400 rows x 40 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "efSj5J9uTzwf"
      },
      "source": [
        "## Combine TESS features and targets"
      ],
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1rjW2hMfUDWe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "a56f79a9-417e-4841-c26e-2531a4da9100"
      },
      "source": [
        "#Concat both feature table and target table\n",
        "newdf_tess = pd.concat([rawdata_tess_final,labels_tess], axis=1)\n",
        "newdf_tess"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-393.064713</td>\n",
              "      <td>104.228331</td>\n",
              "      <td>-8.033372</td>\n",
              "      <td>-12.158992</td>\n",
              "      <td>4.100746</td>\n",
              "      <td>-3.314525</td>\n",
              "      <td>-12.176581</td>\n",
              "      <td>1.024435</td>\n",
              "      <td>-19.445951</td>\n",
              "      <td>-2.537471</td>\n",
              "      <td>-16.357301</td>\n",
              "      <td>-8.237990</td>\n",
              "      <td>-9.272872</td>\n",
              "      <td>-5.568253</td>\n",
              "      <td>-4.608080</td>\n",
              "      <td>-0.588412</td>\n",
              "      <td>-0.219854</td>\n",
              "      <td>12.784038</td>\n",
              "      <td>4.757206</td>\n",
              "      <td>3.076212</td>\n",
              "      <td>4.196416</td>\n",
              "      <td>3.117582</td>\n",
              "      <td>-2.327549</td>\n",
              "      <td>4.288047</td>\n",
              "      <td>-5.832544</td>\n",
              "      <td>3.408224</td>\n",
              "      <td>-7.591838</td>\n",
              "      <td>4.083526</td>\n",
              "      <td>-3.913253</td>\n",
              "      <td>1.166156</td>\n",
              "      <td>-2.227586</td>\n",
              "      <td>3.045442</td>\n",
              "      <td>5.947820</td>\n",
              "      <td>10.955508</td>\n",
              "      <td>14.158756</td>\n",
              "      <td>16.401156</td>\n",
              "      <td>17.695173</td>\n",
              "      <td>13.962237</td>\n",
              "      <td>7.746469</td>\n",
              "      <td>6.926811</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-428.430989</td>\n",
              "      <td>95.773675</td>\n",
              "      <td>-3.015110</td>\n",
              "      <td>4.586076</td>\n",
              "      <td>8.635063</td>\n",
              "      <td>-8.666693</td>\n",
              "      <td>-19.007385</td>\n",
              "      <td>0.149618</td>\n",
              "      <td>-19.919284</td>\n",
              "      <td>-5.409258</td>\n",
              "      <td>-19.125048</td>\n",
              "      <td>-5.134354</td>\n",
              "      <td>-0.702090</td>\n",
              "      <td>-6.216142</td>\n",
              "      <td>-0.749200</td>\n",
              "      <td>4.695921</td>\n",
              "      <td>2.508728</td>\n",
              "      <td>10.645043</td>\n",
              "      <td>2.971020</td>\n",
              "      <td>-2.596046</td>\n",
              "      <td>2.236927</td>\n",
              "      <td>-1.994673</td>\n",
              "      <td>-3.324532</td>\n",
              "      <td>4.053984</td>\n",
              "      <td>-6.072053</td>\n",
              "      <td>4.405573</td>\n",
              "      <td>-7.259748</td>\n",
              "      <td>6.332849</td>\n",
              "      <td>-2.627318</td>\n",
              "      <td>5.356078</td>\n",
              "      <td>6.282688</td>\n",
              "      <td>10.086893</td>\n",
              "      <td>15.258396</td>\n",
              "      <td>11.157198</td>\n",
              "      <td>11.810318</td>\n",
              "      <td>15.538712</td>\n",
              "      <td>11.697254</td>\n",
              "      <td>13.231740</td>\n",
              "      <td>7.501947</td>\n",
              "      <td>5.610825</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-558.203238</td>\n",
              "      <td>102.060209</td>\n",
              "      <td>23.940581</td>\n",
              "      <td>10.404611</td>\n",
              "      <td>19.730547</td>\n",
              "      <td>16.288045</td>\n",
              "      <td>-10.664006</td>\n",
              "      <td>-8.242809</td>\n",
              "      <td>-14.201682</td>\n",
              "      <td>4.116901</td>\n",
              "      <td>-8.920832</td>\n",
              "      <td>7.290155</td>\n",
              "      <td>-8.062274</td>\n",
              "      <td>10.366964</td>\n",
              "      <td>4.709728</td>\n",
              "      <td>-1.621492</td>\n",
              "      <td>-2.694772</td>\n",
              "      <td>0.443869</td>\n",
              "      <td>3.679745</td>\n",
              "      <td>-3.409293</td>\n",
              "      <td>0.952581</td>\n",
              "      <td>2.139629</td>\n",
              "      <td>-5.205762</td>\n",
              "      <td>0.368632</td>\n",
              "      <td>-9.357077</td>\n",
              "      <td>0.518335</td>\n",
              "      <td>-2.416305</td>\n",
              "      <td>0.375091</td>\n",
              "      <td>-5.576669</td>\n",
              "      <td>7.667675</td>\n",
              "      <td>2.700076</td>\n",
              "      <td>11.158257</td>\n",
              "      <td>9.590239</td>\n",
              "      <td>11.256332</td>\n",
              "      <td>6.021088</td>\n",
              "      <td>8.419053</td>\n",
              "      <td>8.397544</td>\n",
              "      <td>8.734387</td>\n",
              "      <td>14.692656</td>\n",
              "      <td>15.106056</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-466.746102</td>\n",
              "      <td>104.017740</td>\n",
              "      <td>27.219596</td>\n",
              "      <td>6.671581</td>\n",
              "      <td>16.054953</td>\n",
              "      <td>-7.443586</td>\n",
              "      <td>-3.763945</td>\n",
              "      <td>-3.696580</td>\n",
              "      <td>-21.906358</td>\n",
              "      <td>-3.656409</td>\n",
              "      <td>-19.845797</td>\n",
              "      <td>-8.962653</td>\n",
              "      <td>-3.655293</td>\n",
              "      <td>-4.544420</td>\n",
              "      <td>-2.447305</td>\n",
              "      <td>-2.139093</td>\n",
              "      <td>-1.049097</td>\n",
              "      <td>8.816945</td>\n",
              "      <td>4.000953</td>\n",
              "      <td>4.567353</td>\n",
              "      <td>1.232990</td>\n",
              "      <td>4.522492</td>\n",
              "      <td>-3.937750</td>\n",
              "      <td>2.564885</td>\n",
              "      <td>-1.887262</td>\n",
              "      <td>2.615352</td>\n",
              "      <td>-7.010739</td>\n",
              "      <td>3.596605</td>\n",
              "      <td>-5.019797</td>\n",
              "      <td>4.226246</td>\n",
              "      <td>-5.000799</td>\n",
              "      <td>-2.588915</td>\n",
              "      <td>-0.877083</td>\n",
              "      <td>2.580161</td>\n",
              "      <td>8.807711</td>\n",
              "      <td>14.667746</td>\n",
              "      <td>17.298415</td>\n",
              "      <td>19.770818</td>\n",
              "      <td>15.453272</td>\n",
              "      <td>12.034192</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-421.536702</td>\n",
              "      <td>91.868327</td>\n",
              "      <td>20.336208</td>\n",
              "      <td>-14.177895</td>\n",
              "      <td>0.049593</td>\n",
              "      <td>5.512608</td>\n",
              "      <td>-0.112384</td>\n",
              "      <td>1.610796</td>\n",
              "      <td>-20.670020</td>\n",
              "      <td>-3.775931</td>\n",
              "      <td>-13.735750</td>\n",
              "      <td>-10.048589</td>\n",
              "      <td>-0.280590</td>\n",
              "      <td>-3.806409</td>\n",
              "      <td>-4.976410</td>\n",
              "      <td>1.123034</td>\n",
              "      <td>-4.974939</td>\n",
              "      <td>10.310057</td>\n",
              "      <td>0.141979</td>\n",
              "      <td>2.730788</td>\n",
              "      <td>2.355703</td>\n",
              "      <td>0.102942</td>\n",
              "      <td>-4.933080</td>\n",
              "      <td>4.832973</td>\n",
              "      <td>-2.421800</td>\n",
              "      <td>4.265729</td>\n",
              "      <td>-4.167171</td>\n",
              "      <td>1.713591</td>\n",
              "      <td>-3.695982</td>\n",
              "      <td>3.523024</td>\n",
              "      <td>-0.301838</td>\n",
              "      <td>3.555023</td>\n",
              "      <td>4.302198</td>\n",
              "      <td>5.961743</td>\n",
              "      <td>9.137798</td>\n",
              "      <td>11.396955</td>\n",
              "      <td>14.041527</td>\n",
              "      <td>16.377250</td>\n",
              "      <td>15.402454</td>\n",
              "      <td>17.600358</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1395</th>\n",
              "      <td>-536.512004</td>\n",
              "      <td>106.750789</td>\n",
              "      <td>28.416613</td>\n",
              "      <td>8.970444</td>\n",
              "      <td>20.742506</td>\n",
              "      <td>15.393349</td>\n",
              "      <td>-3.771040</td>\n",
              "      <td>-6.118925</td>\n",
              "      <td>-15.442299</td>\n",
              "      <td>3.508829</td>\n",
              "      <td>-4.770205</td>\n",
              "      <td>4.086547</td>\n",
              "      <td>-9.679314</td>\n",
              "      <td>3.731612</td>\n",
              "      <td>2.432980</td>\n",
              "      <td>-1.037491</td>\n",
              "      <td>-4.089450</td>\n",
              "      <td>1.013642</td>\n",
              "      <td>1.441648</td>\n",
              "      <td>-4.594456</td>\n",
              "      <td>3.616582</td>\n",
              "      <td>-0.188733</td>\n",
              "      <td>-2.437144</td>\n",
              "      <td>0.380347</td>\n",
              "      <td>-8.227229</td>\n",
              "      <td>0.553122</td>\n",
              "      <td>-4.522375</td>\n",
              "      <td>-1.881177</td>\n",
              "      <td>-2.514969</td>\n",
              "      <td>3.077675</td>\n",
              "      <td>-1.343018</td>\n",
              "      <td>4.283805</td>\n",
              "      <td>3.199174</td>\n",
              "      <td>6.232114</td>\n",
              "      <td>5.782828</td>\n",
              "      <td>10.894559</td>\n",
              "      <td>12.079333</td>\n",
              "      <td>12.207502</td>\n",
              "      <td>14.399904</td>\n",
              "      <td>15.214200</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1396</th>\n",
              "      <td>-564.497439</td>\n",
              "      <td>107.950099</td>\n",
              "      <td>43.945294</td>\n",
              "      <td>20.696722</td>\n",
              "      <td>21.444244</td>\n",
              "      <td>10.099970</td>\n",
              "      <td>2.063429</td>\n",
              "      <td>3.800612</td>\n",
              "      <td>-12.632793</td>\n",
              "      <td>-3.802378</td>\n",
              "      <td>-11.338892</td>\n",
              "      <td>-3.508805</td>\n",
              "      <td>-11.080032</td>\n",
              "      <td>-0.658633</td>\n",
              "      <td>-0.284242</td>\n",
              "      <td>-2.265595</td>\n",
              "      <td>-2.161875</td>\n",
              "      <td>2.341401</td>\n",
              "      <td>1.075981</td>\n",
              "      <td>-3.106282</td>\n",
              "      <td>-1.489145</td>\n",
              "      <td>-1.749032</td>\n",
              "      <td>-7.218842</td>\n",
              "      <td>2.599768</td>\n",
              "      <td>-5.201615</td>\n",
              "      <td>2.952039</td>\n",
              "      <td>-2.472093</td>\n",
              "      <td>2.788030</td>\n",
              "      <td>-2.244446</td>\n",
              "      <td>6.261553</td>\n",
              "      <td>6.464332</td>\n",
              "      <td>11.287631</td>\n",
              "      <td>7.459670</td>\n",
              "      <td>6.585104</td>\n",
              "      <td>4.575772</td>\n",
              "      <td>1.036401</td>\n",
              "      <td>4.038626</td>\n",
              "      <td>10.445570</td>\n",
              "      <td>10.675918</td>\n",
              "      <td>12.832165</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1397</th>\n",
              "      <td>-446.383881</td>\n",
              "      <td>107.507493</td>\n",
              "      <td>4.796736</td>\n",
              "      <td>-18.311295</td>\n",
              "      <td>7.222064</td>\n",
              "      <td>0.628212</td>\n",
              "      <td>-11.116405</td>\n",
              "      <td>6.811908</td>\n",
              "      <td>-20.391670</td>\n",
              "      <td>-6.312933</td>\n",
              "      <td>-16.073757</td>\n",
              "      <td>-13.446818</td>\n",
              "      <td>-4.691627</td>\n",
              "      <td>-5.268364</td>\n",
              "      <td>-6.376009</td>\n",
              "      <td>2.949287</td>\n",
              "      <td>-3.611500</td>\n",
              "      <td>10.716067</td>\n",
              "      <td>2.311542</td>\n",
              "      <td>2.683717</td>\n",
              "      <td>2.961281</td>\n",
              "      <td>4.930986</td>\n",
              "      <td>-6.079398</td>\n",
              "      <td>0.982605</td>\n",
              "      <td>-7.645687</td>\n",
              "      <td>5.621020</td>\n",
              "      <td>-7.304281</td>\n",
              "      <td>2.923446</td>\n",
              "      <td>-6.140193</td>\n",
              "      <td>1.304108</td>\n",
              "      <td>3.121570</td>\n",
              "      <td>9.344289</td>\n",
              "      <td>16.819454</td>\n",
              "      <td>22.416956</td>\n",
              "      <td>20.046057</td>\n",
              "      <td>17.531816</td>\n",
              "      <td>13.351365</td>\n",
              "      <td>7.906923</td>\n",
              "      <td>5.254256</td>\n",
              "      <td>8.847595</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1398</th>\n",
              "      <td>-426.421793</td>\n",
              "      <td>107.677444</td>\n",
              "      <td>3.488945</td>\n",
              "      <td>-19.908305</td>\n",
              "      <td>12.159415</td>\n",
              "      <td>3.757812</td>\n",
              "      <td>-12.084943</td>\n",
              "      <td>-0.945416</td>\n",
              "      <td>-16.076738</td>\n",
              "      <td>1.252954</td>\n",
              "      <td>-15.231416</td>\n",
              "      <td>-6.658887</td>\n",
              "      <td>-3.545313</td>\n",
              "      <td>0.778354</td>\n",
              "      <td>-6.373714</td>\n",
              "      <td>6.122555</td>\n",
              "      <td>-4.487575</td>\n",
              "      <td>7.011531</td>\n",
              "      <td>2.656823</td>\n",
              "      <td>-2.073471</td>\n",
              "      <td>2.341065</td>\n",
              "      <td>2.543179</td>\n",
              "      <td>-4.284626</td>\n",
              "      <td>3.369041</td>\n",
              "      <td>-3.004752</td>\n",
              "      <td>3.613262</td>\n",
              "      <td>-5.124739</td>\n",
              "      <td>4.644774</td>\n",
              "      <td>-3.607881</td>\n",
              "      <td>5.335443</td>\n",
              "      <td>-3.165052</td>\n",
              "      <td>-0.532723</td>\n",
              "      <td>-0.581784</td>\n",
              "      <td>1.810781</td>\n",
              "      <td>4.440430</td>\n",
              "      <td>9.705201</td>\n",
              "      <td>11.659803</td>\n",
              "      <td>15.595808</td>\n",
              "      <td>15.266903</td>\n",
              "      <td>15.747191</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1399</th>\n",
              "      <td>-405.464318</td>\n",
              "      <td>101.157810</td>\n",
              "      <td>7.734806</td>\n",
              "      <td>-33.940330</td>\n",
              "      <td>0.272448</td>\n",
              "      <td>4.874550</td>\n",
              "      <td>-9.244098</td>\n",
              "      <td>7.111724</td>\n",
              "      <td>-17.310191</td>\n",
              "      <td>-0.449322</td>\n",
              "      <td>-15.875519</td>\n",
              "      <td>-2.125706</td>\n",
              "      <td>-1.491599</td>\n",
              "      <td>-0.862607</td>\n",
              "      <td>-1.589533</td>\n",
              "      <td>1.782368</td>\n",
              "      <td>-2.685281</td>\n",
              "      <td>8.642150</td>\n",
              "      <td>3.895204</td>\n",
              "      <td>-1.042086</td>\n",
              "      <td>3.669297</td>\n",
              "      <td>5.916429</td>\n",
              "      <td>-5.882715</td>\n",
              "      <td>6.297296</td>\n",
              "      <td>-4.432173</td>\n",
              "      <td>5.402935</td>\n",
              "      <td>-3.991420</td>\n",
              "      <td>4.695996</td>\n",
              "      <td>-0.938339</td>\n",
              "      <td>3.513955</td>\n",
              "      <td>-5.785551</td>\n",
              "      <td>-0.044010</td>\n",
              "      <td>0.296453</td>\n",
              "      <td>8.445430</td>\n",
              "      <td>15.689266</td>\n",
              "      <td>20.660389</td>\n",
              "      <td>21.843265</td>\n",
              "      <td>16.207499</td>\n",
              "      <td>7.883330</td>\n",
              "      <td>4.976465</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1400 rows × 41 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "               0           1          2  ...         38         39    emotion\n",
              "0    -393.064713  104.228331  -8.033372  ...   7.746469   6.926811  surprised\n",
              "1    -428.430989   95.773675  -3.015110  ...   7.501947   5.610825  surprised\n",
              "2    -558.203238  102.060209  23.940581  ...  14.692656  15.106056        sad\n",
              "3    -466.746102  104.017740  27.219596  ...  15.453272  12.034192  surprised\n",
              "4    -421.536702   91.868327  20.336208  ...  15.402454  17.600358  surprised\n",
              "...          ...         ...        ...  ...        ...        ...        ...\n",
              "1395 -536.512004  106.750789  28.416613  ...  14.399904  15.214200        sad\n",
              "1396 -564.497439  107.950099  43.945294  ...  10.675918  12.832165        sad\n",
              "1397 -446.383881  107.507493   4.796736  ...   5.254256   8.847595  surprised\n",
              "1398 -426.421793  107.677444   3.488945  ...  15.266903  15.747191  surprised\n",
              "1399 -405.464318  101.157810   7.734806  ...   7.883330   4.976465  surprised\n",
              "\n",
              "[1400 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FUA0HHCnUFup"
      },
      "source": [
        "newdf_tess = newdf_tess.rename(index=str, columns={\"0\": \"label\"})"
      ],
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DIax7lOEUJQK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f8c57b1c-2576-4fec-d2bb-f6152631cd66"
      },
      "source": [
        "#Verify table shape\n",
        "newdf_tess.shape"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1400, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NLct9wQVULuT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "9d94efe1-564e-43ee-f287-8ae80ddfa676"
      },
      "source": [
        "#Get dataframe sample data\n",
        "newdf_tess.head()"
      ],
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-393.064713</td>\n",
              "      <td>104.228331</td>\n",
              "      <td>-8.033372</td>\n",
              "      <td>-12.158992</td>\n",
              "      <td>4.100746</td>\n",
              "      <td>-3.314525</td>\n",
              "      <td>-12.176581</td>\n",
              "      <td>1.024435</td>\n",
              "      <td>-19.445951</td>\n",
              "      <td>-2.537471</td>\n",
              "      <td>-16.357301</td>\n",
              "      <td>-8.237990</td>\n",
              "      <td>-9.272872</td>\n",
              "      <td>-5.568253</td>\n",
              "      <td>-4.608080</td>\n",
              "      <td>-0.588412</td>\n",
              "      <td>-0.219854</td>\n",
              "      <td>12.784038</td>\n",
              "      <td>4.757206</td>\n",
              "      <td>3.076212</td>\n",
              "      <td>4.196416</td>\n",
              "      <td>3.117582</td>\n",
              "      <td>-2.327549</td>\n",
              "      <td>4.288047</td>\n",
              "      <td>-5.832544</td>\n",
              "      <td>3.408224</td>\n",
              "      <td>-7.591838</td>\n",
              "      <td>4.083526</td>\n",
              "      <td>-3.913253</td>\n",
              "      <td>1.166156</td>\n",
              "      <td>-2.227586</td>\n",
              "      <td>3.045442</td>\n",
              "      <td>5.947820</td>\n",
              "      <td>10.955508</td>\n",
              "      <td>14.158756</td>\n",
              "      <td>16.401156</td>\n",
              "      <td>17.695173</td>\n",
              "      <td>13.962237</td>\n",
              "      <td>7.746469</td>\n",
              "      <td>6.926811</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-428.430989</td>\n",
              "      <td>95.773675</td>\n",
              "      <td>-3.015110</td>\n",
              "      <td>4.586076</td>\n",
              "      <td>8.635063</td>\n",
              "      <td>-8.666693</td>\n",
              "      <td>-19.007385</td>\n",
              "      <td>0.149618</td>\n",
              "      <td>-19.919284</td>\n",
              "      <td>-5.409258</td>\n",
              "      <td>-19.125048</td>\n",
              "      <td>-5.134354</td>\n",
              "      <td>-0.702090</td>\n",
              "      <td>-6.216142</td>\n",
              "      <td>-0.749200</td>\n",
              "      <td>4.695921</td>\n",
              "      <td>2.508728</td>\n",
              "      <td>10.645043</td>\n",
              "      <td>2.971020</td>\n",
              "      <td>-2.596046</td>\n",
              "      <td>2.236927</td>\n",
              "      <td>-1.994673</td>\n",
              "      <td>-3.324532</td>\n",
              "      <td>4.053984</td>\n",
              "      <td>-6.072053</td>\n",
              "      <td>4.405573</td>\n",
              "      <td>-7.259748</td>\n",
              "      <td>6.332849</td>\n",
              "      <td>-2.627318</td>\n",
              "      <td>5.356078</td>\n",
              "      <td>6.282688</td>\n",
              "      <td>10.086893</td>\n",
              "      <td>15.258396</td>\n",
              "      <td>11.157198</td>\n",
              "      <td>11.810318</td>\n",
              "      <td>15.538712</td>\n",
              "      <td>11.697254</td>\n",
              "      <td>13.231740</td>\n",
              "      <td>7.501947</td>\n",
              "      <td>5.610825</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-558.203238</td>\n",
              "      <td>102.060209</td>\n",
              "      <td>23.940581</td>\n",
              "      <td>10.404611</td>\n",
              "      <td>19.730547</td>\n",
              "      <td>16.288045</td>\n",
              "      <td>-10.664006</td>\n",
              "      <td>-8.242809</td>\n",
              "      <td>-14.201682</td>\n",
              "      <td>4.116901</td>\n",
              "      <td>-8.920832</td>\n",
              "      <td>7.290155</td>\n",
              "      <td>-8.062274</td>\n",
              "      <td>10.366964</td>\n",
              "      <td>4.709728</td>\n",
              "      <td>-1.621492</td>\n",
              "      <td>-2.694772</td>\n",
              "      <td>0.443869</td>\n",
              "      <td>3.679745</td>\n",
              "      <td>-3.409293</td>\n",
              "      <td>0.952581</td>\n",
              "      <td>2.139629</td>\n",
              "      <td>-5.205762</td>\n",
              "      <td>0.368632</td>\n",
              "      <td>-9.357077</td>\n",
              "      <td>0.518335</td>\n",
              "      <td>-2.416305</td>\n",
              "      <td>0.375091</td>\n",
              "      <td>-5.576669</td>\n",
              "      <td>7.667675</td>\n",
              "      <td>2.700076</td>\n",
              "      <td>11.158257</td>\n",
              "      <td>9.590239</td>\n",
              "      <td>11.256332</td>\n",
              "      <td>6.021088</td>\n",
              "      <td>8.419053</td>\n",
              "      <td>8.397544</td>\n",
              "      <td>8.734387</td>\n",
              "      <td>14.692656</td>\n",
              "      <td>15.106056</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-466.746102</td>\n",
              "      <td>104.017740</td>\n",
              "      <td>27.219596</td>\n",
              "      <td>6.671581</td>\n",
              "      <td>16.054953</td>\n",
              "      <td>-7.443586</td>\n",
              "      <td>-3.763945</td>\n",
              "      <td>-3.696580</td>\n",
              "      <td>-21.906358</td>\n",
              "      <td>-3.656409</td>\n",
              "      <td>-19.845797</td>\n",
              "      <td>-8.962653</td>\n",
              "      <td>-3.655293</td>\n",
              "      <td>-4.544420</td>\n",
              "      <td>-2.447305</td>\n",
              "      <td>-2.139093</td>\n",
              "      <td>-1.049097</td>\n",
              "      <td>8.816945</td>\n",
              "      <td>4.000953</td>\n",
              "      <td>4.567353</td>\n",
              "      <td>1.232990</td>\n",
              "      <td>4.522492</td>\n",
              "      <td>-3.937750</td>\n",
              "      <td>2.564885</td>\n",
              "      <td>-1.887262</td>\n",
              "      <td>2.615352</td>\n",
              "      <td>-7.010739</td>\n",
              "      <td>3.596605</td>\n",
              "      <td>-5.019797</td>\n",
              "      <td>4.226246</td>\n",
              "      <td>-5.000799</td>\n",
              "      <td>-2.588915</td>\n",
              "      <td>-0.877083</td>\n",
              "      <td>2.580161</td>\n",
              "      <td>8.807711</td>\n",
              "      <td>14.667746</td>\n",
              "      <td>17.298415</td>\n",
              "      <td>19.770818</td>\n",
              "      <td>15.453272</td>\n",
              "      <td>12.034192</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-421.536702</td>\n",
              "      <td>91.868327</td>\n",
              "      <td>20.336208</td>\n",
              "      <td>-14.177895</td>\n",
              "      <td>0.049593</td>\n",
              "      <td>5.512608</td>\n",
              "      <td>-0.112384</td>\n",
              "      <td>1.610796</td>\n",
              "      <td>-20.670020</td>\n",
              "      <td>-3.775931</td>\n",
              "      <td>-13.735750</td>\n",
              "      <td>-10.048589</td>\n",
              "      <td>-0.280590</td>\n",
              "      <td>-3.806409</td>\n",
              "      <td>-4.976410</td>\n",
              "      <td>1.123034</td>\n",
              "      <td>-4.974939</td>\n",
              "      <td>10.310057</td>\n",
              "      <td>0.141979</td>\n",
              "      <td>2.730788</td>\n",
              "      <td>2.355703</td>\n",
              "      <td>0.102942</td>\n",
              "      <td>-4.933080</td>\n",
              "      <td>4.832973</td>\n",
              "      <td>-2.421800</td>\n",
              "      <td>4.265729</td>\n",
              "      <td>-4.167171</td>\n",
              "      <td>1.713591</td>\n",
              "      <td>-3.695982</td>\n",
              "      <td>3.523024</td>\n",
              "      <td>-0.301838</td>\n",
              "      <td>3.555023</td>\n",
              "      <td>4.302198</td>\n",
              "      <td>5.961743</td>\n",
              "      <td>9.137798</td>\n",
              "      <td>11.396955</td>\n",
              "      <td>14.041527</td>\n",
              "      <td>16.377250</td>\n",
              "      <td>15.402454</td>\n",
              "      <td>17.600358</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            0           1          2  ...         38         39    emotion\n",
              "0 -393.064713  104.228331  -8.033372  ...   7.746469   6.926811  surprised\n",
              "1 -428.430989   95.773675  -3.015110  ...   7.501947   5.610825  surprised\n",
              "2 -558.203238  102.060209  23.940581  ...  14.692656  15.106056        sad\n",
              "3 -466.746102  104.017740  27.219596  ...  15.453272  12.034192  surprised\n",
              "4 -421.536702   91.868327  20.336208  ...  15.402454  17.600358  surprised\n",
              "\n",
              "[5 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sj8IfX25UeFs",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2ab6d29e-9df8-421b-98f1-e323a1c3765a"
      },
      "source": [
        "#Drop nan values\n",
        "newdf_tess.dropna(inplace=True)\n",
        "newdf_tess.shape"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1400, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UfJt-Mw4UgfO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "outputId": "460598a7-84e5-48a8-9023-4a5dcff002ea"
      },
      "source": [
        "#Shuffle rows\n",
        "newdf_tess = shuffle(newdf_tess)\n",
        "newdf_tess.head(10)"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1317</th>\n",
              "      <td>-417.831308</td>\n",
              "      <td>105.208804</td>\n",
              "      <td>11.960917</td>\n",
              "      <td>1.156790</td>\n",
              "      <td>8.416379</td>\n",
              "      <td>-7.774398</td>\n",
              "      <td>-6.842706</td>\n",
              "      <td>-1.246247</td>\n",
              "      <td>-21.267071</td>\n",
              "      <td>-2.803766</td>\n",
              "      <td>-19.660313</td>\n",
              "      <td>-11.181873</td>\n",
              "      <td>-4.171986</td>\n",
              "      <td>-2.790425</td>\n",
              "      <td>-4.087982</td>\n",
              "      <td>1.702266</td>\n",
              "      <td>-5.052215</td>\n",
              "      <td>10.159537</td>\n",
              "      <td>-0.724058</td>\n",
              "      <td>0.867967</td>\n",
              "      <td>-0.485110</td>\n",
              "      <td>3.475173</td>\n",
              "      <td>-6.407149</td>\n",
              "      <td>1.380686</td>\n",
              "      <td>-4.927952</td>\n",
              "      <td>1.694874</td>\n",
              "      <td>-7.700448</td>\n",
              "      <td>2.919510</td>\n",
              "      <td>-5.477012</td>\n",
              "      <td>0.591279</td>\n",
              "      <td>-4.982181</td>\n",
              "      <td>-0.275016</td>\n",
              "      <td>2.983222</td>\n",
              "      <td>6.382895</td>\n",
              "      <td>10.147276</td>\n",
              "      <td>14.019115</td>\n",
              "      <td>13.438635</td>\n",
              "      <td>16.545517</td>\n",
              "      <td>15.535636</td>\n",
              "      <td>16.919170</td>\n",
              "      <td>surprised</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>972</th>\n",
              "      <td>-553.220747</td>\n",
              "      <td>84.264880</td>\n",
              "      <td>29.813452</td>\n",
              "      <td>18.188176</td>\n",
              "      <td>20.086677</td>\n",
              "      <td>12.040860</td>\n",
              "      <td>-3.029436</td>\n",
              "      <td>1.832431</td>\n",
              "      <td>-12.522019</td>\n",
              "      <td>-5.645662</td>\n",
              "      <td>-10.015426</td>\n",
              "      <td>-3.313309</td>\n",
              "      <td>-6.571117</td>\n",
              "      <td>1.811193</td>\n",
              "      <td>4.710982</td>\n",
              "      <td>4.938097</td>\n",
              "      <td>-6.326314</td>\n",
              "      <td>9.702752</td>\n",
              "      <td>-4.087314</td>\n",
              "      <td>-1.730946</td>\n",
              "      <td>4.004326</td>\n",
              "      <td>-0.466583</td>\n",
              "      <td>-0.724880</td>\n",
              "      <td>0.200363</td>\n",
              "      <td>-7.608912</td>\n",
              "      <td>1.323341</td>\n",
              "      <td>-14.396708</td>\n",
              "      <td>0.521243</td>\n",
              "      <td>-0.217554</td>\n",
              "      <td>-1.327467</td>\n",
              "      <td>-5.768334</td>\n",
              "      <td>-2.610380</td>\n",
              "      <td>-8.136870</td>\n",
              "      <td>-4.241915</td>\n",
              "      <td>3.875720</td>\n",
              "      <td>16.087034</td>\n",
              "      <td>31.643237</td>\n",
              "      <td>37.378891</td>\n",
              "      <td>34.786254</td>\n",
              "      <td>28.884884</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>-456.228160</td>\n",
              "      <td>88.419630</td>\n",
              "      <td>12.470177</td>\n",
              "      <td>-0.031233</td>\n",
              "      <td>4.216471</td>\n",
              "      <td>-0.320959</td>\n",
              "      <td>-9.270657</td>\n",
              "      <td>-1.098683</td>\n",
              "      <td>-21.454718</td>\n",
              "      <td>-4.446012</td>\n",
              "      <td>-12.615212</td>\n",
              "      <td>-8.772642</td>\n",
              "      <td>-5.431503</td>\n",
              "      <td>-4.840211</td>\n",
              "      <td>0.981885</td>\n",
              "      <td>4.774686</td>\n",
              "      <td>-5.382961</td>\n",
              "      <td>11.860663</td>\n",
              "      <td>-2.634461</td>\n",
              "      <td>-1.325122</td>\n",
              "      <td>1.608064</td>\n",
              "      <td>3.897425</td>\n",
              "      <td>0.526642</td>\n",
              "      <td>9.500227</td>\n",
              "      <td>2.069018</td>\n",
              "      <td>9.763465</td>\n",
              "      <td>0.477614</td>\n",
              "      <td>8.690292</td>\n",
              "      <td>0.422786</td>\n",
              "      <td>8.093047</td>\n",
              "      <td>1.625922</td>\n",
              "      <td>4.323991</td>\n",
              "      <td>0.862661</td>\n",
              "      <td>2.264148</td>\n",
              "      <td>1.243490</td>\n",
              "      <td>5.067408</td>\n",
              "      <td>2.064744</td>\n",
              "      <td>5.037555</td>\n",
              "      <td>8.625600</td>\n",
              "      <td>13.951173</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>-431.727241</td>\n",
              "      <td>65.744052</td>\n",
              "      <td>-0.907907</td>\n",
              "      <td>-13.871708</td>\n",
              "      <td>-8.166819</td>\n",
              "      <td>8.810544</td>\n",
              "      <td>-20.341946</td>\n",
              "      <td>-10.952217</td>\n",
              "      <td>-18.030598</td>\n",
              "      <td>-5.285180</td>\n",
              "      <td>1.695106</td>\n",
              "      <td>2.332669</td>\n",
              "      <td>1.002730</td>\n",
              "      <td>0.860850</td>\n",
              "      <td>-3.597448</td>\n",
              "      <td>3.603062</td>\n",
              "      <td>-2.269318</td>\n",
              "      <td>-0.746355</td>\n",
              "      <td>0.271546</td>\n",
              "      <td>-7.607505</td>\n",
              "      <td>-8.670183</td>\n",
              "      <td>0.696484</td>\n",
              "      <td>-11.928698</td>\n",
              "      <td>3.004525</td>\n",
              "      <td>5.509033</td>\n",
              "      <td>15.029980</td>\n",
              "      <td>16.675240</td>\n",
              "      <td>26.476597</td>\n",
              "      <td>16.617200</td>\n",
              "      <td>18.703893</td>\n",
              "      <td>6.425412</td>\n",
              "      <td>6.341610</td>\n",
              "      <td>14.002759</td>\n",
              "      <td>6.721218</td>\n",
              "      <td>9.913442</td>\n",
              "      <td>1.763186</td>\n",
              "      <td>1.690238</td>\n",
              "      <td>7.991085</td>\n",
              "      <td>-1.340118</td>\n",
              "      <td>4.229566</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1135</th>\n",
              "      <td>-427.176764</td>\n",
              "      <td>77.155262</td>\n",
              "      <td>3.502476</td>\n",
              "      <td>-0.828395</td>\n",
              "      <td>5.391198</td>\n",
              "      <td>-5.323368</td>\n",
              "      <td>-20.044638</td>\n",
              "      <td>-0.098282</td>\n",
              "      <td>-7.152250</td>\n",
              "      <td>-3.998806</td>\n",
              "      <td>-18.384939</td>\n",
              "      <td>-3.715659</td>\n",
              "      <td>-2.329185</td>\n",
              "      <td>-1.938495</td>\n",
              "      <td>-5.644669</td>\n",
              "      <td>-4.036220</td>\n",
              "      <td>-4.446884</td>\n",
              "      <td>-2.225039</td>\n",
              "      <td>2.786590</td>\n",
              "      <td>-2.066532</td>\n",
              "      <td>14.159630</td>\n",
              "      <td>31.843647</td>\n",
              "      <td>29.651476</td>\n",
              "      <td>30.011153</td>\n",
              "      <td>15.332240</td>\n",
              "      <td>8.059312</td>\n",
              "      <td>-3.488292</td>\n",
              "      <td>-0.843275</td>\n",
              "      <td>1.808189</td>\n",
              "      <td>12.521663</td>\n",
              "      <td>-3.273804</td>\n",
              "      <td>-3.055406</td>\n",
              "      <td>-3.801188</td>\n",
              "      <td>-2.638704</td>\n",
              "      <td>2.488970</td>\n",
              "      <td>3.638028</td>\n",
              "      <td>-7.490939</td>\n",
              "      <td>-3.004042</td>\n",
              "      <td>-0.955546</td>\n",
              "      <td>4.385970</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>-422.710522</td>\n",
              "      <td>79.060841</td>\n",
              "      <td>-15.887045</td>\n",
              "      <td>-19.158540</td>\n",
              "      <td>-16.362866</td>\n",
              "      <td>5.582124</td>\n",
              "      <td>-6.283639</td>\n",
              "      <td>-3.362184</td>\n",
              "      <td>-13.510576</td>\n",
              "      <td>-5.747572</td>\n",
              "      <td>-3.365759</td>\n",
              "      <td>1.747052</td>\n",
              "      <td>3.427310</td>\n",
              "      <td>3.970236</td>\n",
              "      <td>-5.936247</td>\n",
              "      <td>5.591412</td>\n",
              "      <td>-6.208779</td>\n",
              "      <td>-0.869632</td>\n",
              "      <td>-1.230509</td>\n",
              "      <td>-12.074451</td>\n",
              "      <td>-5.013500</td>\n",
              "      <td>-1.297326</td>\n",
              "      <td>-2.969013</td>\n",
              "      <td>12.361788</td>\n",
              "      <td>15.562979</td>\n",
              "      <td>27.348767</td>\n",
              "      <td>19.791020</td>\n",
              "      <td>19.950211</td>\n",
              "      <td>9.305609</td>\n",
              "      <td>5.131884</td>\n",
              "      <td>2.050377</td>\n",
              "      <td>5.147300</td>\n",
              "      <td>7.166083</td>\n",
              "      <td>4.258799</td>\n",
              "      <td>3.980874</td>\n",
              "      <td>-2.236063</td>\n",
              "      <td>3.614581</td>\n",
              "      <td>7.559709</td>\n",
              "      <td>-1.049232</td>\n",
              "      <td>-0.339704</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>-482.749587</td>\n",
              "      <td>107.170458</td>\n",
              "      <td>18.726966</td>\n",
              "      <td>-17.942348</td>\n",
              "      <td>6.701070</td>\n",
              "      <td>5.196117</td>\n",
              "      <td>-2.512482</td>\n",
              "      <td>7.273203</td>\n",
              "      <td>-15.013551</td>\n",
              "      <td>3.487601</td>\n",
              "      <td>-11.640149</td>\n",
              "      <td>4.297149</td>\n",
              "      <td>-2.669875</td>\n",
              "      <td>-0.759952</td>\n",
              "      <td>-2.047095</td>\n",
              "      <td>0.998475</td>\n",
              "      <td>0.914176</td>\n",
              "      <td>2.267245</td>\n",
              "      <td>1.741761</td>\n",
              "      <td>-2.568826</td>\n",
              "      <td>-2.151971</td>\n",
              "      <td>-0.397379</td>\n",
              "      <td>-5.187243</td>\n",
              "      <td>0.948388</td>\n",
              "      <td>-0.330001</td>\n",
              "      <td>0.608043</td>\n",
              "      <td>3.893737</td>\n",
              "      <td>3.940665</td>\n",
              "      <td>-3.026189</td>\n",
              "      <td>3.495812</td>\n",
              "      <td>-1.856958</td>\n",
              "      <td>2.680169</td>\n",
              "      <td>1.436440</td>\n",
              "      <td>6.024413</td>\n",
              "      <td>4.967135</td>\n",
              "      <td>6.277128</td>\n",
              "      <td>6.825392</td>\n",
              "      <td>10.233609</td>\n",
              "      <td>7.301307</td>\n",
              "      <td>8.085691</td>\n",
              "      <td>disgust</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>-430.526934</td>\n",
              "      <td>58.730023</td>\n",
              "      <td>-20.027974</td>\n",
              "      <td>-17.527722</td>\n",
              "      <td>-3.909600</td>\n",
              "      <td>8.545805</td>\n",
              "      <td>-18.677240</td>\n",
              "      <td>-0.652855</td>\n",
              "      <td>-13.659768</td>\n",
              "      <td>-1.590660</td>\n",
              "      <td>-6.383202</td>\n",
              "      <td>0.595155</td>\n",
              "      <td>-3.361841</td>\n",
              "      <td>3.814818</td>\n",
              "      <td>-0.057047</td>\n",
              "      <td>4.237242</td>\n",
              "      <td>-7.068555</td>\n",
              "      <td>-3.941275</td>\n",
              "      <td>-2.338352</td>\n",
              "      <td>-11.917868</td>\n",
              "      <td>-1.851491</td>\n",
              "      <td>8.179716</td>\n",
              "      <td>9.194026</td>\n",
              "      <td>23.887246</td>\n",
              "      <td>23.660875</td>\n",
              "      <td>25.348649</td>\n",
              "      <td>11.225034</td>\n",
              "      <td>4.763471</td>\n",
              "      <td>0.001001</td>\n",
              "      <td>11.451185</td>\n",
              "      <td>15.677038</td>\n",
              "      <td>15.773193</td>\n",
              "      <td>2.500441</td>\n",
              "      <td>-4.075274</td>\n",
              "      <td>2.264227</td>\n",
              "      <td>3.373206</td>\n",
              "      <td>2.086383</td>\n",
              "      <td>3.438788</td>\n",
              "      <td>-5.269263</td>\n",
              "      <td>2.722621</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>697</th>\n",
              "      <td>-471.930105</td>\n",
              "      <td>114.078455</td>\n",
              "      <td>26.234346</td>\n",
              "      <td>-12.165082</td>\n",
              "      <td>-2.142231</td>\n",
              "      <td>3.881013</td>\n",
              "      <td>-7.228695</td>\n",
              "      <td>-2.752266</td>\n",
              "      <td>-16.336260</td>\n",
              "      <td>-10.134094</td>\n",
              "      <td>-10.770024</td>\n",
              "      <td>-10.402619</td>\n",
              "      <td>-4.579504</td>\n",
              "      <td>-2.737661</td>\n",
              "      <td>-2.961044</td>\n",
              "      <td>4.313949</td>\n",
              "      <td>-1.472548</td>\n",
              "      <td>9.682143</td>\n",
              "      <td>-1.912131</td>\n",
              "      <td>-4.140142</td>\n",
              "      <td>-1.777968</td>\n",
              "      <td>0.624823</td>\n",
              "      <td>-5.524867</td>\n",
              "      <td>6.160616</td>\n",
              "      <td>-1.664088</td>\n",
              "      <td>7.802237</td>\n",
              "      <td>4.802787</td>\n",
              "      <td>7.337757</td>\n",
              "      <td>5.440951</td>\n",
              "      <td>7.135052</td>\n",
              "      <td>2.607174</td>\n",
              "      <td>5.009171</td>\n",
              "      <td>3.341099</td>\n",
              "      <td>2.391761</td>\n",
              "      <td>0.001587</td>\n",
              "      <td>6.596569</td>\n",
              "      <td>2.031219</td>\n",
              "      <td>4.565886</td>\n",
              "      <td>5.603060</td>\n",
              "      <td>10.417679</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>626</th>\n",
              "      <td>-431.471105</td>\n",
              "      <td>115.215174</td>\n",
              "      <td>23.635518</td>\n",
              "      <td>0.651576</td>\n",
              "      <td>14.886535</td>\n",
              "      <td>1.763351</td>\n",
              "      <td>-7.066974</td>\n",
              "      <td>-1.105100</td>\n",
              "      <td>-24.601964</td>\n",
              "      <td>-7.690103</td>\n",
              "      <td>-12.692036</td>\n",
              "      <td>-6.767525</td>\n",
              "      <td>-4.035291</td>\n",
              "      <td>-6.456094</td>\n",
              "      <td>-9.897950</td>\n",
              "      <td>1.723746</td>\n",
              "      <td>-7.117726</td>\n",
              "      <td>-2.247902</td>\n",
              "      <td>-1.892730</td>\n",
              "      <td>-1.573527</td>\n",
              "      <td>-3.332724</td>\n",
              "      <td>-2.662847</td>\n",
              "      <td>-6.667276</td>\n",
              "      <td>-3.130990</td>\n",
              "      <td>-4.552435</td>\n",
              "      <td>-2.255331</td>\n",
              "      <td>-2.679265</td>\n",
              "      <td>-0.449892</td>\n",
              "      <td>-4.960774</td>\n",
              "      <td>0.183660</td>\n",
              "      <td>-4.003113</td>\n",
              "      <td>0.911553</td>\n",
              "      <td>-2.456224</td>\n",
              "      <td>-1.141679</td>\n",
              "      <td>0.109880</td>\n",
              "      <td>2.807654</td>\n",
              "      <td>7.280472</td>\n",
              "      <td>11.432366</td>\n",
              "      <td>15.493220</td>\n",
              "      <td>14.728455</td>\n",
              "      <td>disgust</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               0           1          2  ...         38         39    emotion\n",
              "1317 -417.831308  105.208804  11.960917  ...  15.535636  16.919170  surprised\n",
              "972  -553.220747   84.264880  29.813452  ...  34.786254  28.884884    neutral\n",
              "756  -456.228160   88.419630  12.470177  ...   8.625600  13.951173      happy\n",
              "402  -431.727241   65.744052  -0.907907  ...  -1.340118   4.229566      angry\n",
              "1135 -427.176764   77.155262   3.502476  ...  -0.955546   4.385970       fear\n",
              "330  -422.710522   79.060841 -15.887045  ...  -1.049232  -0.339704      angry\n",
              "435  -482.749587  107.170458  18.726966  ...   7.301307   8.085691    disgust\n",
              "303  -430.526934   58.730023 -20.027974  ...  -5.269263   2.722621      angry\n",
              "697  -471.930105  114.078455  26.234346  ...   5.603060  10.417679      happy\n",
              "626  -431.471105  115.215174  23.635518  ...  15.493220  14.728455    disgust\n",
              "\n",
              "[10 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TeydKZaBUijs",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6ff74af1-e2f8-4dc6-994c-4edb9cfd67d2"
      },
      "source": [
        "#Verify there are no nan values\n",
        "newdf_tess.isnull().values.any()"
      ],
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hJKvSLDAUl3C",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a082dd54-fe51-4ec9-ccf6-831ceab3f1ec"
      },
      "source": [
        "#Check shape\n",
        "newdf_tess.shape"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1400, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q0cApLwOUoJm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9fec311e-3748-46ad-dd9f-40276ff09bfe"
      },
      "source": [
        "# See number of emotions\n",
        "newdf_tess[newdf_tess.columns[-1]].nunique()"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NzWH9-RiUqm9"
      },
      "source": [
        "#Move dataframe into separate file\n",
        "newdf_tess.to_csv('emotion_capstone_final_tess_dataframe_Anuj_Goyal.csv')"
      ],
      "execution_count": 73,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "REm_VffIUsy4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b79960cf-a266-40ff-a079-3b7077dd7189"
      },
      "source": [
        "newdf_ravdess.columns"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index([        0,         1,         2,         3,         4,         5,\n",
              "               6,         7,         8,         9,        10,        11,\n",
              "              12,        13,        14,        15,        16,        17,\n",
              "              18,        19,        20,        21,        22,        23,\n",
              "              24,        25,        26,        27,        28,        29,\n",
              "              30,        31,        32,        33,        34,        35,\n",
              "              36,        37,        38,        39, 'emotion'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CKVQKL0pUu57",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "665077a8-da49-4863-fcc1-5ed5c593cb52"
      },
      "source": [
        "newdf_tess.columns"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index([        0,         1,         2,         3,         4,         5,\n",
              "               6,         7,         8,         9,        10,        11,\n",
              "              12,        13,        14,        15,        16,        17,\n",
              "              18,        19,        20,        21,        22,        23,\n",
              "              24,        25,        26,        27,        28,        29,\n",
              "              30,        31,        32,        33,        34,        35,\n",
              "              36,        37,        38,        39, 'emotion'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bpzMiWPrUxZV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "02289d14-3bab-4bf2-d4aa-4d491a083940"
      },
      "source": [
        "frames = [newdf_ravdess,newdf_tess]\n",
        "\n",
        "final_dataframe = pd.concat(frames, ignore_index=True)\n",
        "final_dataframe.shape"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2838, 41)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JPkLDcEkU0ow",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "21b1b315-ca14-4ace-f602-3dd92ad8825c"
      },
      "source": [
        "#Check new and final dataframe\n",
        "final_dataframe"
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>emotion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-725.366476</td>\n",
              "      <td>83.989666</td>\n",
              "      <td>14.727260</td>\n",
              "      <td>24.887943</td>\n",
              "      <td>13.297186</td>\n",
              "      <td>4.779477</td>\n",
              "      <td>0.811175</td>\n",
              "      <td>-4.367169</td>\n",
              "      <td>-0.572266</td>\n",
              "      <td>2.226449</td>\n",
              "      <td>-6.471383</td>\n",
              "      <td>3.894954</td>\n",
              "      <td>-0.155805</td>\n",
              "      <td>1.568972</td>\n",
              "      <td>1.106344</td>\n",
              "      <td>0.729295</td>\n",
              "      <td>1.114766</td>\n",
              "      <td>0.220710</td>\n",
              "      <td>-4.697564</td>\n",
              "      <td>4.721757</td>\n",
              "      <td>-2.097874</td>\n",
              "      <td>-1.758010</td>\n",
              "      <td>-6.036125</td>\n",
              "      <td>0.143014</td>\n",
              "      <td>-2.954068</td>\n",
              "      <td>-0.802055</td>\n",
              "      <td>-3.291179</td>\n",
              "      <td>-1.625022</td>\n",
              "      <td>-2.083253</td>\n",
              "      <td>-0.833777</td>\n",
              "      <td>-3.810966</td>\n",
              "      <td>-0.106121</td>\n",
              "      <td>-2.650996</td>\n",
              "      <td>-1.365217</td>\n",
              "      <td>-2.530238</td>\n",
              "      <td>0.153652</td>\n",
              "      <td>-3.118864</td>\n",
              "      <td>-1.391455</td>\n",
              "      <td>-3.428410</td>\n",
              "      <td>-0.738025</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-544.892387</td>\n",
              "      <td>58.135734</td>\n",
              "      <td>-7.066632</td>\n",
              "      <td>10.148901</td>\n",
              "      <td>0.304595</td>\n",
              "      <td>-2.716220</td>\n",
              "      <td>-4.960555</td>\n",
              "      <td>-5.086074</td>\n",
              "      <td>-11.469192</td>\n",
              "      <td>-1.566202</td>\n",
              "      <td>-2.384275</td>\n",
              "      <td>-5.441819</td>\n",
              "      <td>4.248379</td>\n",
              "      <td>-2.525720</td>\n",
              "      <td>-2.323182</td>\n",
              "      <td>3.088278</td>\n",
              "      <td>-8.097020</td>\n",
              "      <td>-1.556587</td>\n",
              "      <td>-1.193713</td>\n",
              "      <td>-2.478246</td>\n",
              "      <td>-1.856344</td>\n",
              "      <td>-1.316205</td>\n",
              "      <td>-0.965479</td>\n",
              "      <td>-0.861235</td>\n",
              "      <td>-3.997441</td>\n",
              "      <td>-0.109112</td>\n",
              "      <td>-2.938754</td>\n",
              "      <td>0.278319</td>\n",
              "      <td>-1.077078</td>\n",
              "      <td>0.726421</td>\n",
              "      <td>-1.795584</td>\n",
              "      <td>0.332506</td>\n",
              "      <td>-2.188952</td>\n",
              "      <td>1.790101</td>\n",
              "      <td>-0.536245</td>\n",
              "      <td>2.787661</td>\n",
              "      <td>0.977615</td>\n",
              "      <td>2.097084</td>\n",
              "      <td>0.956467</td>\n",
              "      <td>4.356293</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-607.829497</td>\n",
              "      <td>61.560222</td>\n",
              "      <td>-12.277246</td>\n",
              "      <td>22.709758</td>\n",
              "      <td>4.068630</td>\n",
              "      <td>-4.800281</td>\n",
              "      <td>-0.757754</td>\n",
              "      <td>-8.427578</td>\n",
              "      <td>-1.399312</td>\n",
              "      <td>-1.996662</td>\n",
              "      <td>-1.664891</td>\n",
              "      <td>-4.814356</td>\n",
              "      <td>-1.949350</td>\n",
              "      <td>0.046696</td>\n",
              "      <td>-1.643026</td>\n",
              "      <td>-3.651781</td>\n",
              "      <td>-3.835672</td>\n",
              "      <td>1.882898</td>\n",
              "      <td>-2.619585</td>\n",
              "      <td>1.597530</td>\n",
              "      <td>-1.118891</td>\n",
              "      <td>0.799980</td>\n",
              "      <td>-0.712021</td>\n",
              "      <td>4.035598</td>\n",
              "      <td>-1.341058</td>\n",
              "      <td>1.447671</td>\n",
              "      <td>-1.467164</td>\n",
              "      <td>2.882020</td>\n",
              "      <td>0.539999</td>\n",
              "      <td>3.062271</td>\n",
              "      <td>-0.082652</td>\n",
              "      <td>3.699911</td>\n",
              "      <td>3.340868</td>\n",
              "      <td>5.754082</td>\n",
              "      <td>3.617755</td>\n",
              "      <td>3.465804</td>\n",
              "      <td>0.949888</td>\n",
              "      <td>3.869822</td>\n",
              "      <td>6.020906</td>\n",
              "      <td>8.699159</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-593.385807</td>\n",
              "      <td>47.311929</td>\n",
              "      <td>-22.016173</td>\n",
              "      <td>9.546989</td>\n",
              "      <td>-4.906760</td>\n",
              "      <td>-12.708190</td>\n",
              "      <td>-11.129473</td>\n",
              "      <td>-11.228986</td>\n",
              "      <td>-7.164225</td>\n",
              "      <td>0.122755</td>\n",
              "      <td>-9.190720</td>\n",
              "      <td>-4.102889</td>\n",
              "      <td>-4.216943</td>\n",
              "      <td>-7.134343</td>\n",
              "      <td>-5.653481</td>\n",
              "      <td>-4.863045</td>\n",
              "      <td>-8.382255</td>\n",
              "      <td>-5.159651</td>\n",
              "      <td>-5.213465</td>\n",
              "      <td>-4.309242</td>\n",
              "      <td>1.887895</td>\n",
              "      <td>-0.010729</td>\n",
              "      <td>-1.696637</td>\n",
              "      <td>0.375695</td>\n",
              "      <td>-5.654093</td>\n",
              "      <td>1.747221</td>\n",
              "      <td>0.370453</td>\n",
              "      <td>6.917199</td>\n",
              "      <td>5.305206</td>\n",
              "      <td>8.580008</td>\n",
              "      <td>4.854828</td>\n",
              "      <td>9.729269</td>\n",
              "      <td>3.246346</td>\n",
              "      <td>5.917922</td>\n",
              "      <td>1.752975</td>\n",
              "      <td>3.499367</td>\n",
              "      <td>-0.344904</td>\n",
              "      <td>-0.011289</td>\n",
              "      <td>1.065181</td>\n",
              "      <td>4.522814</td>\n",
              "      <td>angry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-396.717624</td>\n",
              "      <td>35.119368</td>\n",
              "      <td>-23.565597</td>\n",
              "      <td>-10.980303</td>\n",
              "      <td>-9.346131</td>\n",
              "      <td>-13.895790</td>\n",
              "      <td>-13.459879</td>\n",
              "      <td>-20.919057</td>\n",
              "      <td>-14.021924</td>\n",
              "      <td>-1.410225</td>\n",
              "      <td>-11.595626</td>\n",
              "      <td>-1.264487</td>\n",
              "      <td>0.201275</td>\n",
              "      <td>11.170476</td>\n",
              "      <td>7.408953</td>\n",
              "      <td>4.525621</td>\n",
              "      <td>2.205337</td>\n",
              "      <td>6.940796</td>\n",
              "      <td>-0.263236</td>\n",
              "      <td>0.794389</td>\n",
              "      <td>2.363212</td>\n",
              "      <td>4.008390</td>\n",
              "      <td>-0.676791</td>\n",
              "      <td>2.881441</td>\n",
              "      <td>-3.432956</td>\n",
              "      <td>2.920585</td>\n",
              "      <td>2.145350</td>\n",
              "      <td>2.588585</td>\n",
              "      <td>1.576739</td>\n",
              "      <td>6.872527</td>\n",
              "      <td>3.439122</td>\n",
              "      <td>2.704460</td>\n",
              "      <td>1.975714</td>\n",
              "      <td>4.987883</td>\n",
              "      <td>1.526038</td>\n",
              "      <td>2.701368</td>\n",
              "      <td>0.796627</td>\n",
              "      <td>2.554355</td>\n",
              "      <td>0.546216</td>\n",
              "      <td>2.534085</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2833</th>\n",
              "      <td>-553.393517</td>\n",
              "      <td>107.840179</td>\n",
              "      <td>34.735021</td>\n",
              "      <td>8.498947</td>\n",
              "      <td>22.082124</td>\n",
              "      <td>18.739650</td>\n",
              "      <td>-7.439206</td>\n",
              "      <td>-13.294869</td>\n",
              "      <td>-21.458698</td>\n",
              "      <td>-0.649955</td>\n",
              "      <td>-20.052825</td>\n",
              "      <td>3.989992</td>\n",
              "      <td>-9.650783</td>\n",
              "      <td>2.278946</td>\n",
              "      <td>-3.458555</td>\n",
              "      <td>-3.609230</td>\n",
              "      <td>-3.968074</td>\n",
              "      <td>2.139824</td>\n",
              "      <td>-3.074212</td>\n",
              "      <td>-1.428852</td>\n",
              "      <td>6.060356</td>\n",
              "      <td>-3.919387</td>\n",
              "      <td>-5.858739</td>\n",
              "      <td>-1.288667</td>\n",
              "      <td>-8.756367</td>\n",
              "      <td>0.059023</td>\n",
              "      <td>-5.360184</td>\n",
              "      <td>-3.136786</td>\n",
              "      <td>-4.549126</td>\n",
              "      <td>1.956309</td>\n",
              "      <td>-2.019831</td>\n",
              "      <td>10.751666</td>\n",
              "      <td>6.018986</td>\n",
              "      <td>2.917981</td>\n",
              "      <td>3.946030</td>\n",
              "      <td>3.880634</td>\n",
              "      <td>2.347133</td>\n",
              "      <td>14.326763</td>\n",
              "      <td>23.772099</td>\n",
              "      <td>28.093305</td>\n",
              "      <td>sad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2834</th>\n",
              "      <td>-487.187490</td>\n",
              "      <td>91.486262</td>\n",
              "      <td>-0.505152</td>\n",
              "      <td>-5.082563</td>\n",
              "      <td>14.011315</td>\n",
              "      <td>11.570526</td>\n",
              "      <td>-15.911891</td>\n",
              "      <td>-8.669640</td>\n",
              "      <td>-14.881314</td>\n",
              "      <td>1.683223</td>\n",
              "      <td>-7.815935</td>\n",
              "      <td>-4.129623</td>\n",
              "      <td>-3.121218</td>\n",
              "      <td>8.037895</td>\n",
              "      <td>9.969812</td>\n",
              "      <td>4.084156</td>\n",
              "      <td>-8.411808</td>\n",
              "      <td>7.694113</td>\n",
              "      <td>-1.936826</td>\n",
              "      <td>-7.665448</td>\n",
              "      <td>2.593986</td>\n",
              "      <td>5.396030</td>\n",
              "      <td>-8.261079</td>\n",
              "      <td>0.332942</td>\n",
              "      <td>-8.273927</td>\n",
              "      <td>-1.499987</td>\n",
              "      <td>-6.612366</td>\n",
              "      <td>-2.549723</td>\n",
              "      <td>-4.470568</td>\n",
              "      <td>2.452904</td>\n",
              "      <td>-11.139735</td>\n",
              "      <td>1.043888</td>\n",
              "      <td>-7.499602</td>\n",
              "      <td>5.677007</td>\n",
              "      <td>16.350384</td>\n",
              "      <td>30.419269</td>\n",
              "      <td>36.923904</td>\n",
              "      <td>34.322091</td>\n",
              "      <td>19.899713</td>\n",
              "      <td>11.857391</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2835</th>\n",
              "      <td>-468.848418</td>\n",
              "      <td>104.568963</td>\n",
              "      <td>32.888344</td>\n",
              "      <td>-29.914576</td>\n",
              "      <td>-8.630707</td>\n",
              "      <td>6.749549</td>\n",
              "      <td>-6.005300</td>\n",
              "      <td>-5.177867</td>\n",
              "      <td>-17.266168</td>\n",
              "      <td>-3.205297</td>\n",
              "      <td>-18.600914</td>\n",
              "      <td>-5.697629</td>\n",
              "      <td>-1.727621</td>\n",
              "      <td>4.363871</td>\n",
              "      <td>-2.065185</td>\n",
              "      <td>5.162248</td>\n",
              "      <td>-9.557569</td>\n",
              "      <td>5.447076</td>\n",
              "      <td>-3.445792</td>\n",
              "      <td>-3.363450</td>\n",
              "      <td>1.680217</td>\n",
              "      <td>10.812666</td>\n",
              "      <td>19.670114</td>\n",
              "      <td>28.094948</td>\n",
              "      <td>29.666775</td>\n",
              "      <td>24.614317</td>\n",
              "      <td>9.674914</td>\n",
              "      <td>5.148683</td>\n",
              "      <td>1.011154</td>\n",
              "      <td>2.999322</td>\n",
              "      <td>0.423350</td>\n",
              "      <td>5.133515</td>\n",
              "      <td>-5.446562</td>\n",
              "      <td>-0.735593</td>\n",
              "      <td>-0.321785</td>\n",
              "      <td>3.646338</td>\n",
              "      <td>-0.537536</td>\n",
              "      <td>-0.444732</td>\n",
              "      <td>-6.533102</td>\n",
              "      <td>3.301470</td>\n",
              "      <td>fear</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2836</th>\n",
              "      <td>-549.882844</td>\n",
              "      <td>97.968691</td>\n",
              "      <td>22.082975</td>\n",
              "      <td>9.754953</td>\n",
              "      <td>21.480848</td>\n",
              "      <td>5.953582</td>\n",
              "      <td>-7.264521</td>\n",
              "      <td>-2.851024</td>\n",
              "      <td>-11.667062</td>\n",
              "      <td>1.020250</td>\n",
              "      <td>-6.470795</td>\n",
              "      <td>1.306346</td>\n",
              "      <td>-5.450378</td>\n",
              "      <td>6.990990</td>\n",
              "      <td>7.601417</td>\n",
              "      <td>2.531012</td>\n",
              "      <td>-4.924890</td>\n",
              "      <td>7.394781</td>\n",
              "      <td>-3.115709</td>\n",
              "      <td>-1.432236</td>\n",
              "      <td>4.118880</td>\n",
              "      <td>3.382039</td>\n",
              "      <td>-3.669832</td>\n",
              "      <td>2.276938</td>\n",
              "      <td>-7.262074</td>\n",
              "      <td>0.327687</td>\n",
              "      <td>-8.644247</td>\n",
              "      <td>-1.741899</td>\n",
              "      <td>-0.317343</td>\n",
              "      <td>0.435863</td>\n",
              "      <td>-7.285318</td>\n",
              "      <td>-1.147593</td>\n",
              "      <td>-10.837934</td>\n",
              "      <td>-3.142277</td>\n",
              "      <td>5.512201</td>\n",
              "      <td>10.948031</td>\n",
              "      <td>23.268324</td>\n",
              "      <td>32.960835</td>\n",
              "      <td>29.844701</td>\n",
              "      <td>27.571707</td>\n",
              "      <td>neutral</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2837</th>\n",
              "      <td>-466.921154</td>\n",
              "      <td>79.978588</td>\n",
              "      <td>28.331396</td>\n",
              "      <td>0.950860</td>\n",
              "      <td>8.445345</td>\n",
              "      <td>5.520778</td>\n",
              "      <td>-3.138888</td>\n",
              "      <td>-5.831593</td>\n",
              "      <td>-21.027010</td>\n",
              "      <td>-4.927743</td>\n",
              "      <td>-16.091779</td>\n",
              "      <td>-11.102980</td>\n",
              "      <td>-7.098137</td>\n",
              "      <td>-6.540735</td>\n",
              "      <td>0.891113</td>\n",
              "      <td>0.384817</td>\n",
              "      <td>-2.692161</td>\n",
              "      <td>11.219715</td>\n",
              "      <td>-0.150824</td>\n",
              "      <td>-1.770415</td>\n",
              "      <td>1.075108</td>\n",
              "      <td>1.697452</td>\n",
              "      <td>-3.486888</td>\n",
              "      <td>0.505914</td>\n",
              "      <td>1.475736</td>\n",
              "      <td>7.808746</td>\n",
              "      <td>2.043542</td>\n",
              "      <td>10.317279</td>\n",
              "      <td>1.479968</td>\n",
              "      <td>6.086360</td>\n",
              "      <td>0.607242</td>\n",
              "      <td>5.067233</td>\n",
              "      <td>3.164069</td>\n",
              "      <td>3.757455</td>\n",
              "      <td>1.343102</td>\n",
              "      <td>4.434305</td>\n",
              "      <td>2.593877</td>\n",
              "      <td>5.885773</td>\n",
              "      <td>6.145584</td>\n",
              "      <td>12.087676</td>\n",
              "      <td>happy</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2838 rows × 41 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "               0           1          2  ...         38         39  emotion\n",
              "0    -725.366476   83.989666  14.727260  ...  -3.428410  -0.738025  neutral\n",
              "1    -544.892387   58.135734  -7.066632  ...   0.956467   4.356293    angry\n",
              "2    -607.829497   61.560222 -12.277246  ...   6.020906   8.699159    happy\n",
              "3    -593.385807   47.311929 -22.016173  ...   1.065181   4.522814    angry\n",
              "4    -396.717624   35.119368 -23.565597  ...   0.546216   2.534085     fear\n",
              "...          ...         ...        ...  ...        ...        ...      ...\n",
              "2833 -553.393517  107.840179  34.735021  ...  23.772099  28.093305      sad\n",
              "2834 -487.187490   91.486262  -0.505152  ...  19.899713  11.857391  neutral\n",
              "2835 -468.848418  104.568963  32.888344  ...  -6.533102   3.301470     fear\n",
              "2836 -549.882844   97.968691  22.082975  ...  29.844701  27.571707  neutral\n",
              "2837 -466.921154   79.978588  28.331396  ...   6.145584  12.087676    happy\n",
              "\n",
              "[2838 rows x 41 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hPZQ92FqU25A"
      },
      "source": [
        "#Move dataframe into separate file\n",
        "final_dataframe.to_csv('emotion_capstone_final_dataframe_Anuj_Goyal.csv')"
      ],
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W23jilQiU6Rw"
      },
      "source": [
        "#Split features from targets\n",
        "X = final_dataframe.iloc[:,:-1]\n",
        "\n",
        "#Split targets\n",
        "y = final_dataframe.iloc[:,-1]"
      ],
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EjYHOlDXU9gi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1523075-a356-4b2f-9cf1-876f9866e315"
      },
      "source": [
        "#Get sample of target\n",
        "y"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       neutral\n",
              "1         angry\n",
              "2         happy\n",
              "3         angry\n",
              "4          fear\n",
              "         ...   \n",
              "2833        sad\n",
              "2834    neutral\n",
              "2835       fear\n",
              "2836    neutral\n",
              "2837      happy\n",
              "Name: emotion, Length: 2838, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a4GYp5G4U_0e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "619c4fba-32cb-4947-ad29-19759e0a6439"
      },
      "source": [
        "#Get sample of features\n",
        "X"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-725.366476</td>\n",
              "      <td>83.989666</td>\n",
              "      <td>14.727260</td>\n",
              "      <td>24.887943</td>\n",
              "      <td>13.297186</td>\n",
              "      <td>4.779477</td>\n",
              "      <td>0.811175</td>\n",
              "      <td>-4.367169</td>\n",
              "      <td>-0.572266</td>\n",
              "      <td>2.226449</td>\n",
              "      <td>-6.471383</td>\n",
              "      <td>3.894954</td>\n",
              "      <td>-0.155805</td>\n",
              "      <td>1.568972</td>\n",
              "      <td>1.106344</td>\n",
              "      <td>0.729295</td>\n",
              "      <td>1.114766</td>\n",
              "      <td>0.220710</td>\n",
              "      <td>-4.697564</td>\n",
              "      <td>4.721757</td>\n",
              "      <td>-2.097874</td>\n",
              "      <td>-1.758010</td>\n",
              "      <td>-6.036125</td>\n",
              "      <td>0.143014</td>\n",
              "      <td>-2.954068</td>\n",
              "      <td>-0.802055</td>\n",
              "      <td>-3.291179</td>\n",
              "      <td>-1.625022</td>\n",
              "      <td>-2.083253</td>\n",
              "      <td>-0.833777</td>\n",
              "      <td>-3.810966</td>\n",
              "      <td>-0.106121</td>\n",
              "      <td>-2.650996</td>\n",
              "      <td>-1.365217</td>\n",
              "      <td>-2.530238</td>\n",
              "      <td>0.153652</td>\n",
              "      <td>-3.118864</td>\n",
              "      <td>-1.391455</td>\n",
              "      <td>-3.428410</td>\n",
              "      <td>-0.738025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-544.892387</td>\n",
              "      <td>58.135734</td>\n",
              "      <td>-7.066632</td>\n",
              "      <td>10.148901</td>\n",
              "      <td>0.304595</td>\n",
              "      <td>-2.716220</td>\n",
              "      <td>-4.960555</td>\n",
              "      <td>-5.086074</td>\n",
              "      <td>-11.469192</td>\n",
              "      <td>-1.566202</td>\n",
              "      <td>-2.384275</td>\n",
              "      <td>-5.441819</td>\n",
              "      <td>4.248379</td>\n",
              "      <td>-2.525720</td>\n",
              "      <td>-2.323182</td>\n",
              "      <td>3.088278</td>\n",
              "      <td>-8.097020</td>\n",
              "      <td>-1.556587</td>\n",
              "      <td>-1.193713</td>\n",
              "      <td>-2.478246</td>\n",
              "      <td>-1.856344</td>\n",
              "      <td>-1.316205</td>\n",
              "      <td>-0.965479</td>\n",
              "      <td>-0.861235</td>\n",
              "      <td>-3.997441</td>\n",
              "      <td>-0.109112</td>\n",
              "      <td>-2.938754</td>\n",
              "      <td>0.278319</td>\n",
              "      <td>-1.077078</td>\n",
              "      <td>0.726421</td>\n",
              "      <td>-1.795584</td>\n",
              "      <td>0.332506</td>\n",
              "      <td>-2.188952</td>\n",
              "      <td>1.790101</td>\n",
              "      <td>-0.536245</td>\n",
              "      <td>2.787661</td>\n",
              "      <td>0.977615</td>\n",
              "      <td>2.097084</td>\n",
              "      <td>0.956467</td>\n",
              "      <td>4.356293</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-607.829497</td>\n",
              "      <td>61.560222</td>\n",
              "      <td>-12.277246</td>\n",
              "      <td>22.709758</td>\n",
              "      <td>4.068630</td>\n",
              "      <td>-4.800281</td>\n",
              "      <td>-0.757754</td>\n",
              "      <td>-8.427578</td>\n",
              "      <td>-1.399312</td>\n",
              "      <td>-1.996662</td>\n",
              "      <td>-1.664891</td>\n",
              "      <td>-4.814356</td>\n",
              "      <td>-1.949350</td>\n",
              "      <td>0.046696</td>\n",
              "      <td>-1.643026</td>\n",
              "      <td>-3.651781</td>\n",
              "      <td>-3.835672</td>\n",
              "      <td>1.882898</td>\n",
              "      <td>-2.619585</td>\n",
              "      <td>1.597530</td>\n",
              "      <td>-1.118891</td>\n",
              "      <td>0.799980</td>\n",
              "      <td>-0.712021</td>\n",
              "      <td>4.035598</td>\n",
              "      <td>-1.341058</td>\n",
              "      <td>1.447671</td>\n",
              "      <td>-1.467164</td>\n",
              "      <td>2.882020</td>\n",
              "      <td>0.539999</td>\n",
              "      <td>3.062271</td>\n",
              "      <td>-0.082652</td>\n",
              "      <td>3.699911</td>\n",
              "      <td>3.340868</td>\n",
              "      <td>5.754082</td>\n",
              "      <td>3.617755</td>\n",
              "      <td>3.465804</td>\n",
              "      <td>0.949888</td>\n",
              "      <td>3.869822</td>\n",
              "      <td>6.020906</td>\n",
              "      <td>8.699159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-593.385807</td>\n",
              "      <td>47.311929</td>\n",
              "      <td>-22.016173</td>\n",
              "      <td>9.546989</td>\n",
              "      <td>-4.906760</td>\n",
              "      <td>-12.708190</td>\n",
              "      <td>-11.129473</td>\n",
              "      <td>-11.228986</td>\n",
              "      <td>-7.164225</td>\n",
              "      <td>0.122755</td>\n",
              "      <td>-9.190720</td>\n",
              "      <td>-4.102889</td>\n",
              "      <td>-4.216943</td>\n",
              "      <td>-7.134343</td>\n",
              "      <td>-5.653481</td>\n",
              "      <td>-4.863045</td>\n",
              "      <td>-8.382255</td>\n",
              "      <td>-5.159651</td>\n",
              "      <td>-5.213465</td>\n",
              "      <td>-4.309242</td>\n",
              "      <td>1.887895</td>\n",
              "      <td>-0.010729</td>\n",
              "      <td>-1.696637</td>\n",
              "      <td>0.375695</td>\n",
              "      <td>-5.654093</td>\n",
              "      <td>1.747221</td>\n",
              "      <td>0.370453</td>\n",
              "      <td>6.917199</td>\n",
              "      <td>5.305206</td>\n",
              "      <td>8.580008</td>\n",
              "      <td>4.854828</td>\n",
              "      <td>9.729269</td>\n",
              "      <td>3.246346</td>\n",
              "      <td>5.917922</td>\n",
              "      <td>1.752975</td>\n",
              "      <td>3.499367</td>\n",
              "      <td>-0.344904</td>\n",
              "      <td>-0.011289</td>\n",
              "      <td>1.065181</td>\n",
              "      <td>4.522814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-396.717624</td>\n",
              "      <td>35.119368</td>\n",
              "      <td>-23.565597</td>\n",
              "      <td>-10.980303</td>\n",
              "      <td>-9.346131</td>\n",
              "      <td>-13.895790</td>\n",
              "      <td>-13.459879</td>\n",
              "      <td>-20.919057</td>\n",
              "      <td>-14.021924</td>\n",
              "      <td>-1.410225</td>\n",
              "      <td>-11.595626</td>\n",
              "      <td>-1.264487</td>\n",
              "      <td>0.201275</td>\n",
              "      <td>11.170476</td>\n",
              "      <td>7.408953</td>\n",
              "      <td>4.525621</td>\n",
              "      <td>2.205337</td>\n",
              "      <td>6.940796</td>\n",
              "      <td>-0.263236</td>\n",
              "      <td>0.794389</td>\n",
              "      <td>2.363212</td>\n",
              "      <td>4.008390</td>\n",
              "      <td>-0.676791</td>\n",
              "      <td>2.881441</td>\n",
              "      <td>-3.432956</td>\n",
              "      <td>2.920585</td>\n",
              "      <td>2.145350</td>\n",
              "      <td>2.588585</td>\n",
              "      <td>1.576739</td>\n",
              "      <td>6.872527</td>\n",
              "      <td>3.439122</td>\n",
              "      <td>2.704460</td>\n",
              "      <td>1.975714</td>\n",
              "      <td>4.987883</td>\n",
              "      <td>1.526038</td>\n",
              "      <td>2.701368</td>\n",
              "      <td>0.796627</td>\n",
              "      <td>2.554355</td>\n",
              "      <td>0.546216</td>\n",
              "      <td>2.534085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2833</th>\n",
              "      <td>-553.393517</td>\n",
              "      <td>107.840179</td>\n",
              "      <td>34.735021</td>\n",
              "      <td>8.498947</td>\n",
              "      <td>22.082124</td>\n",
              "      <td>18.739650</td>\n",
              "      <td>-7.439206</td>\n",
              "      <td>-13.294869</td>\n",
              "      <td>-21.458698</td>\n",
              "      <td>-0.649955</td>\n",
              "      <td>-20.052825</td>\n",
              "      <td>3.989992</td>\n",
              "      <td>-9.650783</td>\n",
              "      <td>2.278946</td>\n",
              "      <td>-3.458555</td>\n",
              "      <td>-3.609230</td>\n",
              "      <td>-3.968074</td>\n",
              "      <td>2.139824</td>\n",
              "      <td>-3.074212</td>\n",
              "      <td>-1.428852</td>\n",
              "      <td>6.060356</td>\n",
              "      <td>-3.919387</td>\n",
              "      <td>-5.858739</td>\n",
              "      <td>-1.288667</td>\n",
              "      <td>-8.756367</td>\n",
              "      <td>0.059023</td>\n",
              "      <td>-5.360184</td>\n",
              "      <td>-3.136786</td>\n",
              "      <td>-4.549126</td>\n",
              "      <td>1.956309</td>\n",
              "      <td>-2.019831</td>\n",
              "      <td>10.751666</td>\n",
              "      <td>6.018986</td>\n",
              "      <td>2.917981</td>\n",
              "      <td>3.946030</td>\n",
              "      <td>3.880634</td>\n",
              "      <td>2.347133</td>\n",
              "      <td>14.326763</td>\n",
              "      <td>23.772099</td>\n",
              "      <td>28.093305</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2834</th>\n",
              "      <td>-487.187490</td>\n",
              "      <td>91.486262</td>\n",
              "      <td>-0.505152</td>\n",
              "      <td>-5.082563</td>\n",
              "      <td>14.011315</td>\n",
              "      <td>11.570526</td>\n",
              "      <td>-15.911891</td>\n",
              "      <td>-8.669640</td>\n",
              "      <td>-14.881314</td>\n",
              "      <td>1.683223</td>\n",
              "      <td>-7.815935</td>\n",
              "      <td>-4.129623</td>\n",
              "      <td>-3.121218</td>\n",
              "      <td>8.037895</td>\n",
              "      <td>9.969812</td>\n",
              "      <td>4.084156</td>\n",
              "      <td>-8.411808</td>\n",
              "      <td>7.694113</td>\n",
              "      <td>-1.936826</td>\n",
              "      <td>-7.665448</td>\n",
              "      <td>2.593986</td>\n",
              "      <td>5.396030</td>\n",
              "      <td>-8.261079</td>\n",
              "      <td>0.332942</td>\n",
              "      <td>-8.273927</td>\n",
              "      <td>-1.499987</td>\n",
              "      <td>-6.612366</td>\n",
              "      <td>-2.549723</td>\n",
              "      <td>-4.470568</td>\n",
              "      <td>2.452904</td>\n",
              "      <td>-11.139735</td>\n",
              "      <td>1.043888</td>\n",
              "      <td>-7.499602</td>\n",
              "      <td>5.677007</td>\n",
              "      <td>16.350384</td>\n",
              "      <td>30.419269</td>\n",
              "      <td>36.923904</td>\n",
              "      <td>34.322091</td>\n",
              "      <td>19.899713</td>\n",
              "      <td>11.857391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2835</th>\n",
              "      <td>-468.848418</td>\n",
              "      <td>104.568963</td>\n",
              "      <td>32.888344</td>\n",
              "      <td>-29.914576</td>\n",
              "      <td>-8.630707</td>\n",
              "      <td>6.749549</td>\n",
              "      <td>-6.005300</td>\n",
              "      <td>-5.177867</td>\n",
              "      <td>-17.266168</td>\n",
              "      <td>-3.205297</td>\n",
              "      <td>-18.600914</td>\n",
              "      <td>-5.697629</td>\n",
              "      <td>-1.727621</td>\n",
              "      <td>4.363871</td>\n",
              "      <td>-2.065185</td>\n",
              "      <td>5.162248</td>\n",
              "      <td>-9.557569</td>\n",
              "      <td>5.447076</td>\n",
              "      <td>-3.445792</td>\n",
              "      <td>-3.363450</td>\n",
              "      <td>1.680217</td>\n",
              "      <td>10.812666</td>\n",
              "      <td>19.670114</td>\n",
              "      <td>28.094948</td>\n",
              "      <td>29.666775</td>\n",
              "      <td>24.614317</td>\n",
              "      <td>9.674914</td>\n",
              "      <td>5.148683</td>\n",
              "      <td>1.011154</td>\n",
              "      <td>2.999322</td>\n",
              "      <td>0.423350</td>\n",
              "      <td>5.133515</td>\n",
              "      <td>-5.446562</td>\n",
              "      <td>-0.735593</td>\n",
              "      <td>-0.321785</td>\n",
              "      <td>3.646338</td>\n",
              "      <td>-0.537536</td>\n",
              "      <td>-0.444732</td>\n",
              "      <td>-6.533102</td>\n",
              "      <td>3.301470</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2836</th>\n",
              "      <td>-549.882844</td>\n",
              "      <td>97.968691</td>\n",
              "      <td>22.082975</td>\n",
              "      <td>9.754953</td>\n",
              "      <td>21.480848</td>\n",
              "      <td>5.953582</td>\n",
              "      <td>-7.264521</td>\n",
              "      <td>-2.851024</td>\n",
              "      <td>-11.667062</td>\n",
              "      <td>1.020250</td>\n",
              "      <td>-6.470795</td>\n",
              "      <td>1.306346</td>\n",
              "      <td>-5.450378</td>\n",
              "      <td>6.990990</td>\n",
              "      <td>7.601417</td>\n",
              "      <td>2.531012</td>\n",
              "      <td>-4.924890</td>\n",
              "      <td>7.394781</td>\n",
              "      <td>-3.115709</td>\n",
              "      <td>-1.432236</td>\n",
              "      <td>4.118880</td>\n",
              "      <td>3.382039</td>\n",
              "      <td>-3.669832</td>\n",
              "      <td>2.276938</td>\n",
              "      <td>-7.262074</td>\n",
              "      <td>0.327687</td>\n",
              "      <td>-8.644247</td>\n",
              "      <td>-1.741899</td>\n",
              "      <td>-0.317343</td>\n",
              "      <td>0.435863</td>\n",
              "      <td>-7.285318</td>\n",
              "      <td>-1.147593</td>\n",
              "      <td>-10.837934</td>\n",
              "      <td>-3.142277</td>\n",
              "      <td>5.512201</td>\n",
              "      <td>10.948031</td>\n",
              "      <td>23.268324</td>\n",
              "      <td>32.960835</td>\n",
              "      <td>29.844701</td>\n",
              "      <td>27.571707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2837</th>\n",
              "      <td>-466.921154</td>\n",
              "      <td>79.978588</td>\n",
              "      <td>28.331396</td>\n",
              "      <td>0.950860</td>\n",
              "      <td>8.445345</td>\n",
              "      <td>5.520778</td>\n",
              "      <td>-3.138888</td>\n",
              "      <td>-5.831593</td>\n",
              "      <td>-21.027010</td>\n",
              "      <td>-4.927743</td>\n",
              "      <td>-16.091779</td>\n",
              "      <td>-11.102980</td>\n",
              "      <td>-7.098137</td>\n",
              "      <td>-6.540735</td>\n",
              "      <td>0.891113</td>\n",
              "      <td>0.384817</td>\n",
              "      <td>-2.692161</td>\n",
              "      <td>11.219715</td>\n",
              "      <td>-0.150824</td>\n",
              "      <td>-1.770415</td>\n",
              "      <td>1.075108</td>\n",
              "      <td>1.697452</td>\n",
              "      <td>-3.486888</td>\n",
              "      <td>0.505914</td>\n",
              "      <td>1.475736</td>\n",
              "      <td>7.808746</td>\n",
              "      <td>2.043542</td>\n",
              "      <td>10.317279</td>\n",
              "      <td>1.479968</td>\n",
              "      <td>6.086360</td>\n",
              "      <td>0.607242</td>\n",
              "      <td>5.067233</td>\n",
              "      <td>3.164069</td>\n",
              "      <td>3.757455</td>\n",
              "      <td>1.343102</td>\n",
              "      <td>4.434305</td>\n",
              "      <td>2.593877</td>\n",
              "      <td>5.885773</td>\n",
              "      <td>6.145584</td>\n",
              "      <td>12.087676</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2838 rows × 40 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "              0           1          2   ...         37         38         39\n",
              "0    -725.366476   83.989666  14.727260  ...  -1.391455  -3.428410  -0.738025\n",
              "1    -544.892387   58.135734  -7.066632  ...   2.097084   0.956467   4.356293\n",
              "2    -607.829497   61.560222 -12.277246  ...   3.869822   6.020906   8.699159\n",
              "3    -593.385807   47.311929 -22.016173  ...  -0.011289   1.065181   4.522814\n",
              "4    -396.717624   35.119368 -23.565597  ...   2.554355   0.546216   2.534085\n",
              "...          ...         ...        ...  ...        ...        ...        ...\n",
              "2833 -553.393517  107.840179  34.735021  ...  14.326763  23.772099  28.093305\n",
              "2834 -487.187490   91.486262  -0.505152  ...  34.322091  19.899713  11.857391\n",
              "2835 -468.848418  104.568963  32.888344  ...  -0.444732  -6.533102   3.301470\n",
              "2836 -549.882844   97.968691  22.082975  ...  32.960835  29.844701  27.571707\n",
              "2837 -466.921154   79.978588  28.331396  ...   5.885773   6.145584  12.087676\n",
              "\n",
              "[2838 rows x 40 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ox6DwHB_VDpF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ad54bf2b-fd6b-4a3a-dad4-b68b3cb3321d"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "#Split train & test dataset\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, \n",
        "                                                    test_size=0.2, \n",
        "                                                    random_state=1)\n",
        "\n",
        "# Check out the data\n",
        "print(f'X_train shape: {X_train.shape}')\n",
        "print(f'y_train shape: {y_train.shape}')\n",
        "print(f'X_test shape: {X_test.shape}')\n",
        "print(f'y_test shape: {y_test.shape}')"
      ],
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "X_train shape: (2270, 40)\n",
            "y_train shape: (2270,)\n",
            "X_test shape: (568, 40)\n",
            "y_test shape: (568,)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zFdH9EUnVH9B",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e65f0de-5768-42a9-9495-4633150f2db5"
      },
      "source": [
        "#Check unique values for y_test\n",
        "y_test.unique()"
      ],
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['happy', 'sad', 'fear', 'angry', 'surprised', 'disgust', 'neutral',\n",
              "       'calm'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SiqZD-3OVLJ3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e2a13d88-670a-4a98-a307-8da90c74bf35"
      },
      "source": [
        "#Check unique values for y_train\n",
        "y_train.unique()"
      ],
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['surprised', 'happy', 'fear', 'calm', 'neutral', 'angry', 'sad',\n",
              "       'disgust'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Uto-wJNzVNnf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "21528786-37d2-4f14-b30c-348e5519027a"
      },
      "source": [
        "#Label Encoding\n",
        "import keras.utils as kutils\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "import numpy as np\n",
        "from keras import utils as np_utils\n",
        "\n",
        "lb = LabelEncoder()\n",
        "\n",
        "#Encode emotion labels into numbers\n",
        "y_train_lb = np_utils.to_categorical(lb.fit_transform(y_train))\n",
        "y_test_lb = np_utils.to_categorical(lb.fit_transform(y_test))\n",
        "\n",
        "\n",
        "# Check out the data\n",
        "print(f'X_train shape: {X_train.shape}')\n",
        "print(f'y_train shape: {y_train_lb.shape}')\n",
        "print(f'X_test shape: {X_test.shape}')\n",
        "print(f'y_test shape: {y_test_lb.shape}')"
      ],
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "X_train shape: (2270, 40)\n",
            "y_train shape: (2270, 8)\n",
            "X_test shape: (568, 40)\n",
            "y_test shape: (568, 8)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H8JFcL7lVRKY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8f0d152d-4d1f-4f30-8b2d-06eb89dba50b"
      },
      "source": [
        "import numpy as np\n",
        "#Check encoding\n",
        "np.unique(y_train_lb, axis=0)"
      ],
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0., 0., 0., 0., 0., 1.],\n",
              "       [0., 0., 0., 0., 0., 0., 1., 0.],\n",
              "       [0., 0., 0., 0., 0., 1., 0., 0.],\n",
              "       [0., 0., 0., 0., 1., 0., 0., 0.],\n",
              "       [0., 0., 0., 1., 0., 0., 0., 0.],\n",
              "       [0., 0., 1., 0., 0., 0., 0., 0.],\n",
              "       [0., 1., 0., 0., 0., 0., 0., 0.],\n",
              "       [1., 0., 0., 0., 0., 0., 0., 0.]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gYLgp8A9VT-e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3b9b0841-a4dd-46e5-ff08-1c02aee27191"
      },
      "source": [
        "# range of x values\n",
        "print(f'X range: {X_train.min()}-{X_train.max()}')\n",
        "# y unique values\n",
        "print(f'y values: {np.unique(y_train_lb)}')\n",
        "num_classes = len(np.unique(y_train_lb))\n",
        "print(f'Number of classes: {num_classes}')"
      ],
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "X range: 0    -816.602036\n",
            "1      -5.577060\n",
            "2     -61.390443\n",
            "3     -52.139620\n",
            "4     -43.581149\n",
            "5     -28.501570\n",
            "6     -30.524816\n",
            "7     -26.606928\n",
            "8     -34.253275\n",
            "9     -23.935204\n",
            "10    -29.633382\n",
            "11    -19.806219\n",
            "12    -18.281058\n",
            "13    -12.098578\n",
            "14    -18.772533\n",
            "15    -13.226613\n",
            "16    -17.899501\n",
            "17    -12.159627\n",
            "18    -13.524690\n",
            "19    -18.949456\n",
            "20    -16.114536\n",
            "21     -9.262740\n",
            "22    -14.250272\n",
            "23     -7.637403\n",
            "24    -16.020379\n",
            "25     -6.649410\n",
            "26    -14.396708\n",
            "27     -4.600701\n",
            "28    -10.878451\n",
            "29     -5.774316\n",
            "30    -14.521219\n",
            "31    -10.091281\n",
            "32    -14.665067\n",
            "33    -13.397491\n",
            "34     -8.638788\n",
            "35     -7.749759\n",
            "36    -12.800587\n",
            "37     -5.168813\n",
            "38    -13.490237\n",
            "39     -5.361598\n",
            "dtype: float64-0    -276.677706\n",
            "1     151.428600\n",
            "2      55.034928\n",
            "3      32.891119\n",
            "4      30.562401\n",
            "5      23.075781\n",
            "6      11.811263\n",
            "7      13.008193\n",
            "8       5.739449\n",
            "9      25.757532\n",
            "10     13.195489\n",
            "11     22.224417\n",
            "12     17.259551\n",
            "13     24.347335\n",
            "14     18.420377\n",
            "15     15.160636\n",
            "16     14.230222\n",
            "17     20.465070\n",
            "18     15.641373\n",
            "19     18.861757\n",
            "20     32.256983\n",
            "21     50.202256\n",
            "22     35.113376\n",
            "23     44.454579\n",
            "24     42.013774\n",
            "25     45.497637\n",
            "26     31.668606\n",
            "27     34.909720\n",
            "28     34.006369\n",
            "29     26.954689\n",
            "30     18.981540\n",
            "31     20.542599\n",
            "32     18.441378\n",
            "33     32.412996\n",
            "34     39.871627\n",
            "35     48.644692\n",
            "36     49.000162\n",
            "37     47.316821\n",
            "38     45.118979\n",
            "39     41.228378\n",
            "dtype: float64\n",
            "y values: [0. 1.]\n",
            "Number of classes: 2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TSApU_AOVc_I",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e0bfe3d3-9de2-4055-fdd5-9fca0ce47a7d"
      },
      "source": [
        "#Check encoding labels\n",
        "lb.classes_"
      ],
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['angry', 'calm', 'disgust', 'fear', 'happy', 'neutral', 'sad',\n",
              "       'surprised'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2L_WNvRUVizY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "053d8ae4-3285-4f46-90cd-f41e311ad7cd"
      },
      "source": [
        "#Build new lists of encoding labels\n",
        "y_labels_encoded = {}\n",
        "for i, label in enumerate(lb.classes_):\n",
        "    y_labels_encoded[i] = label\n",
        "    \n",
        "y_labels_encoded"
      ],
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{0: 'angry',\n",
              " 1: 'calm',\n",
              " 2: 'disgust',\n",
              " 3: 'fear',\n",
              " 4: 'happy',\n",
              " 5: 'neutral',\n",
              " 6: 'sad',\n",
              " 7: 'surprised'}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bLW5iZVSVkyk"
      },
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "#Normalize the data\n",
        "scaler = StandardScaler()\n",
        "scaler.fit(X_train)\n",
        "X_train_scalled = scaler.transform(X_train)\n",
        "X_test_scalled = scaler.transform(X_test)"
      ],
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N_RD48mHVnR6"
      },
      "source": [
        "from sklearn.tree import DecisionTreeClassifier"
      ],
      "execution_count": 93,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "piH0UP9jVrCy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ea43e87d-64fc-4e01-91cc-ec4724959342"
      },
      "source": [
        "#fitting the DT\n",
        "DT_model_one = DecisionTreeClassifier()\n",
        "DT_model_one.fit(X_train, y_train_lb)\n",
        "\n",
        "#Getting the score\n",
        "print(f\"The classification accuracy is: {DT_model_one.score(X_train, y_train_lb)}\")\n",
        "print(f\"The classification accuracy is: {DT_model_one.score(X_test, y_test_lb)}\")"
      ],
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The classification accuracy is: 1.0\n",
            "The classification accuracy is: 0.5985915492957746\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mhtpx1utVs5u"
      },
      "source": [
        "#Build model - Convolution Neural Network"
      ],
      "execution_count": 96,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0TOKzePOOYLl"
      },
      "source": [
        "### Change dimensions for CNN model"
      ],
      "execution_count": 97,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JmddLwAbOctP",
        "outputId": "5ce924f3-cfa0-4e02-84a6-dd708962aaf0"
      },
      "source": [
        "#Add dimension for CNN\n",
        "x_traincnn = np.expand_dims(X_train_scalled, axis=2)\n",
        "x_testcnn = np.expand_dims(X_test_scalled, axis=2)\n",
        "\n",
        "#Check shapes of dataframes\n",
        "print(x_traincnn.shape)\n",
        "print(x_testcnn.shape)"
      ],
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(2270, 40, 1)\n",
            "(568, 40, 1)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1QF-2QOvOewz"
      },
      "source": [
        "#Import packages for CNN\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Conv2D, Conv1D \n",
        "from tensorflow.keras.layers import Dense, Dropout, Embedding, LSTM, BatchNormalization, Flatten, MaxPooling2D"
      ],
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F4xNuIkBOh5p"
      },
      "source": [
        "#Build sequential CNN\n",
        "CNN_model = Sequential()\n",
        "\n",
        "#Build first layer\n",
        "CNN_model.add(Conv1D(16, 5,padding='same',\n",
        "                 input_shape=(40, 1), activation='relu'))\n",
        "\n",
        "#Build second layer\n",
        "CNN_model.add(Conv1D(32, 5,padding='same',activation='relu'))\n",
        "\n",
        "#Build third layer\n",
        "CNN_model.add(Conv1D(64, 5,padding='same',activation='relu'))\n",
        "\n",
        "#Build forth layer\n",
        "CNN_model.add(Conv1D(128, 5,padding='same',activation='relu'))\n",
        "\n",
        "#Add dropout\n",
        "CNN_model.add(Dropout(0.1))\n",
        "\n",
        "#Flatten \n",
        "CNN_model.add(Flatten())\n",
        "\n",
        "CNN_model.add(Dense(128, activation ='relu'))\n",
        "CNN_model.add(Dropout(0.1))\n",
        "CNN_model.add(Dense(64, activation ='relu'))\n",
        "CNN_model.add(Dense(8, activation='softmax'))"
      ],
      "execution_count": 100,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZHIst3rfOkBt",
        "outputId": "c25cc96e-7bff-450c-eac5-762992cc32b1"
      },
      "source": [
        "#Look at CNN model summary\n",
        "CNN_model.summary()"
      ],
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv1d (Conv1D)              (None, 40, 16)            96        \n",
            "_________________________________________________________________\n",
            "conv1d_1 (Conv1D)            (None, 40, 32)            2592      \n",
            "_________________________________________________________________\n",
            "conv1d_2 (Conv1D)            (None, 40, 64)            10304     \n",
            "_________________________________________________________________\n",
            "conv1d_3 (Conv1D)            (None, 40, 128)           41088     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 40, 128)           0         \n",
            "_________________________________________________________________\n",
            "flatten (Flatten)            (None, 5120)              0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 128)               655488    \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 64)                8256      \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 8)                 520       \n",
            "=================================================================\n",
            "Total params: 718,344\n",
            "Trainable params: 718,344\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ljO1kFEHOl_6",
        "outputId": "723120a5-6831-4b64-9959-1fa5637db01a"
      },
      "source": [
        "from keras.utils import plot_model\n",
        "\n",
        "# Save an image of the model's architecture to a file\n",
        "plot_model(CNN_model, to_file='Feed Forward NN.png', show_shapes=True, show_layer_names=True)"
      ],
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KDCd4BE3Opm5"
      },
      "source": [
        "# Compile the model with the desired loss function, optimizer, and metric to optimize\n",
        "CNN_model.compile(loss = 'categorical_crossentropy',\n",
        "                  optimizer = 'Adam',\n",
        "                  metrics = ['accuracy'])"
      ],
      "execution_count": 103,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bV-XXh-zO09K",
        "outputId": "e2a97bc0-70ed-441e-c225-1eb17f227c12"
      },
      "source": [
        "from keras.callbacks import ModelCheckpoint \n",
        "\n",
        "checkpointer = ModelCheckpoint(filepath='saved_models/weights.best.basic_cnn.hdf5', \n",
        "                               verbose=1, save_best_only=True)\n",
        "\n",
        "#Model fit\n",
        "cnn_results = CNN_model.fit(x_traincnn, y_train_lb,\n",
        "              batch_size = 64,\n",
        "              epochs = 25,\n",
        "              verbose = 1,\n",
        "              validation_data = (x_testcnn, y_test_lb))"
      ],
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/25\n",
            "36/36 [==============================] - 2s 44ms/step - loss: 1.3997 - accuracy: 0.4762 - val_loss: 1.0407 - val_accuracy: 0.6144\n",
            "Epoch 2/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.9229 - accuracy: 0.6568 - val_loss: 0.9062 - val_accuracy: 0.6514\n",
            "Epoch 3/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.7760 - accuracy: 0.7079 - val_loss: 0.8768 - val_accuracy: 0.6725\n",
            "Epoch 4/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.6622 - accuracy: 0.7489 - val_loss: 0.8474 - val_accuracy: 0.6796\n",
            "Epoch 5/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.5873 - accuracy: 0.7696 - val_loss: 0.7696 - val_accuracy: 0.7095\n",
            "Epoch 6/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.4807 - accuracy: 0.8207 - val_loss: 0.7278 - val_accuracy: 0.7359\n",
            "Epoch 7/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.3943 - accuracy: 0.8559 - val_loss: 0.7105 - val_accuracy: 0.7553\n",
            "Epoch 8/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.3162 - accuracy: 0.8907 - val_loss: 0.7086 - val_accuracy: 0.7817\n",
            "Epoch 9/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.2762 - accuracy: 0.9044 - val_loss: 0.8251 - val_accuracy: 0.7465\n",
            "Epoch 10/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.2248 - accuracy: 0.9194 - val_loss: 0.8302 - val_accuracy: 0.7835\n",
            "Epoch 11/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.1864 - accuracy: 0.9313 - val_loss: 0.8005 - val_accuracy: 0.7835\n",
            "Epoch 12/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.1287 - accuracy: 0.9520 - val_loss: 0.8992 - val_accuracy: 0.7835\n",
            "Epoch 13/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.1307 - accuracy: 0.9533 - val_loss: 0.8572 - val_accuracy: 0.7799\n",
            "Epoch 14/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.1096 - accuracy: 0.9639 - val_loss: 0.9234 - val_accuracy: 0.7729\n",
            "Epoch 15/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0804 - accuracy: 0.9740 - val_loss: 0.9042 - val_accuracy: 0.8011\n",
            "Epoch 16/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.1092 - accuracy: 0.9599 - val_loss: 0.9461 - val_accuracy: 0.8063\n",
            "Epoch 17/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0844 - accuracy: 0.9718 - val_loss: 0.9166 - val_accuracy: 0.7835\n",
            "Epoch 18/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0978 - accuracy: 0.9678 - val_loss: 0.9367 - val_accuracy: 0.7817\n",
            "Epoch 19/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0767 - accuracy: 0.9797 - val_loss: 1.0492 - val_accuracy: 0.7958\n",
            "Epoch 20/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0590 - accuracy: 0.9841 - val_loss: 1.0372 - val_accuracy: 0.7817\n",
            "Epoch 21/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0540 - accuracy: 0.9841 - val_loss: 1.0355 - val_accuracy: 0.7923\n",
            "Epoch 22/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.0468 - accuracy: 0.9850 - val_loss: 0.8761 - val_accuracy: 0.8081\n",
            "Epoch 23/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0489 - accuracy: 0.9855 - val_loss: 1.0371 - val_accuracy: 0.7905\n",
            "Epoch 24/25\n",
            "36/36 [==============================] - 1s 38ms/step - loss: 0.0271 - accuracy: 0.9921 - val_loss: 1.0307 - val_accuracy: 0.8081\n",
            "Epoch 25/25\n",
            "36/36 [==============================] - 1s 37ms/step - loss: 0.0343 - accuracy: 0.9885 - val_loss: 1.0381 - val_accuracy: 0.8134\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "GkMJDM0wO4lS",
        "outputId": "a2bc5119-bd1e-4964-ad88-9f1fdbad10f8"
      },
      "source": [
        "#Plot model accuracy over ephocs\n",
        "plt.plot(cnn_results.history['accuracy'])\n",
        "plt.plot(cnn_results.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()"
      ],
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-okUX8csPG_X",
        "outputId": "e5f39a3a-ce0c-4d7d-8f00-df7607cff72d"
      },
      "source": [
        "# Calculate pre-training accuracy \n",
        "score = CNN_model.evaluate(x_testcnn, y_test_lb, verbose=1)\n",
        "accuracy = 100*score[1]\n",
        "\n",
        "print(\"Pre-training accuracy: %.4f%%\" % accuracy) "
      ],
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "18/18 [==============================] - 0s 5ms/step - loss: 1.0381 - accuracy: 0.8134\n",
            "Pre-training accuracy: 81.3380%\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RL79XCi1TCak",
        "outputId": "698d6314-7dcf-4ca6-a37c-3e05368e90c0"
      },
      "source": [
        "# Evaluating the model on the training and testing set\n",
        "score = CNN_model.evaluate(x_traincnn, y_train_lb, verbose=0)\n",
        "print(\"Training Accuracy: \", score[1])\n",
        "\n",
        "score = CNN_model.evaluate(x_testcnn, y_test_lb, verbose=0)\n",
        "print(\"Testing Accuracy: \", score[1])"
      ],
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Training Accuracy:  0.9995594620704651\n",
            "Testing Accuracy:  0.8133803009986877\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xjKCEnXkTH9h"
      },
      "source": [
        "# Add Confusion Matrix"
      ],
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wgLILuslTcCf",
        "outputId": "670f79d0-d4d5-4bc7-851d-0e62f818e3ea"
      },
      "source": [
        "#Get predictions from model\n",
        "y_test_predictions = CNN_model.predict_classes(x_testcnn)\n",
        "y_test_predictions"
      ],
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From <ipython-input-111-e99e2e2eada1>:2: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.\n",
            "Instructions for updating:\n",
            "Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 6, 3, 1, 0, 7, 3, 6, 6, 6, 2, 0, 2, 4, 4, 3, 2, 2, 5, 4, 7, 0,\n",
              "       7, 5, 4, 5, 7, 5, 7, 7, 3, 7, 1, 5, 2, 1, 0, 5, 5, 0, 6, 5, 1, 0,\n",
              "       7, 1, 2, 0, 2, 7, 2, 3, 3, 7, 2, 5, 3, 3, 1, 3, 4, 2, 7, 2, 3, 2,\n",
              "       2, 7, 0, 2, 0, 2, 4, 2, 0, 1, 3, 2, 0, 4, 4, 3, 6, 6, 2, 6, 2, 1,\n",
              "       6, 0, 5, 6, 4, 7, 7, 4, 6, 3, 6, 3, 7, 6, 3, 2, 7, 2, 5, 4, 2, 5,\n",
              "       0, 2, 7, 3, 4, 4, 0, 4, 4, 4, 3, 5, 3, 4, 3, 3, 6, 7, 6, 7, 3, 2,\n",
              "       3, 5, 7, 6, 5, 3, 4, 6, 5, 7, 3, 5, 5, 6, 1, 0, 7, 3, 3, 1, 0, 2,\n",
              "       7, 0, 3, 6, 4, 5, 5, 3, 7, 5, 2, 4, 4, 5, 3, 3, 6, 7, 0, 5, 6, 2,\n",
              "       6, 4, 3, 3, 2, 7, 5, 7, 0, 5, 1, 6, 7, 7, 7, 0, 0, 1, 0, 7, 3, 2,\n",
              "       7, 2, 6, 1, 7, 7, 0, 1, 2, 3, 2, 2, 5, 4, 6, 1, 5, 6, 0, 0, 0, 6,\n",
              "       7, 7, 5, 0, 1, 7, 1, 2, 6, 7, 0, 3, 6, 0, 5, 2, 6, 3, 5, 0, 2, 7,\n",
              "       0, 5, 2, 4, 3, 2, 7, 2, 5, 4, 0, 1, 0, 5, 4, 5, 7, 6, 7, 4, 6, 1,\n",
              "       7, 4, 7, 4, 4, 7, 2, 4, 0, 6, 7, 6, 7, 4, 6, 3, 3, 3, 5, 5, 7, 2,\n",
              "       7, 5, 2, 1, 0, 6, 4, 4, 6, 7, 7, 1, 2, 4, 6, 3, 4, 4, 1, 4, 6, 6,\n",
              "       2, 5, 0, 5, 6, 4, 2, 2, 7, 6, 0, 7, 3, 6, 1, 6, 1, 0, 2, 4, 6, 7,\n",
              "       3, 7, 0, 1, 7, 3, 4, 3, 1, 7, 0, 0, 4, 2, 0, 4, 4, 0, 0, 4, 0, 3,\n",
              "       2, 7, 0, 0, 6, 6, 2, 7, 4, 5, 0, 4, 2, 5, 2, 2, 1, 6, 1, 3, 3, 4,\n",
              "       2, 1, 5, 0, 2, 0, 3, 7, 7, 3, 2, 7, 2, 6, 3, 0, 1, 4, 3, 2, 2, 0,\n",
              "       3, 4, 6, 3, 2, 2, 7, 7, 3, 4, 5, 6, 0, 1, 7, 6, 3, 4, 6, 6, 4, 5,\n",
              "       3, 2, 3, 7, 2, 4, 1, 6, 7, 1, 0, 3, 4, 4, 4, 4, 0, 1, 3, 2, 2, 7,\n",
              "       2, 6, 1, 5, 4, 2, 2, 1, 6, 0, 6, 6, 4, 3, 7, 6, 0, 6, 0, 1, 2, 0,\n",
              "       1, 4, 3, 0, 3, 3, 0, 3, 5, 5, 2, 6, 4, 2, 3, 4, 4, 7, 4, 3, 6, 5,\n",
              "       4, 7, 2, 4, 7, 7, 2, 1, 7, 7, 7, 1, 2, 0, 3, 6, 3, 0, 3, 2, 2, 1,\n",
              "       1, 6, 7, 1, 3, 0, 3, 6, 1, 0, 3, 6, 4, 2, 6, 6, 7, 1, 6, 4, 4, 6,\n",
              "       0, 4, 4, 4, 4, 7, 5, 0, 5, 3, 6, 1, 7, 0, 4, 4, 6, 2, 4, 2, 4, 6,\n",
              "       2, 0, 0, 2, 2, 7, 7, 1, 3, 3, 4, 2, 1, 6, 0, 2, 4, 6])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e3i2TkTNTf8M",
        "outputId": "e437512b-3d85-442c-85d9-3c8a5ee7c4e8"
      },
      "source": [
        "y_test"
      ],
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "955         happy\n",
              "1287          sad\n",
              "2532         fear\n",
              "428         angry\n",
              "2427        angry\n",
              "          ...    \n",
              "2238          sad\n",
              "56          angry\n",
              "208     surprised\n",
              "2602        happy\n",
              "1407         fear\n",
              "Name: emotion, Length: 568, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s7BsXym3TrAy",
        "outputId": "7d7b71ca-243c-43ad-c620-2ac845722869"
      },
      "source": [
        "#Get labels for emotions\n",
        "y_labels_encoded"
      ],
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{0: 'angry',\n",
              " 1: 'calm',\n",
              " 2: 'disgust',\n",
              " 3: 'fear',\n",
              " 4: 'happy',\n",
              " 5: 'neutral',\n",
              " 6: 'sad',\n",
              " 7: 'surprised'}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0gvGSfd3Tuvh",
        "outputId": "95013db6-001e-45ce-b27c-12d0ad4d06d1"
      },
      "source": [
        "# Change predictions to emotions in order to compare\n",
        "y_test_predictions_labels =[]\n",
        "\n",
        "#Go through each prediction and append to new list\n",
        "for e in range(len(y_test_predictions)):\n",
        "    y_test_predictions_labels.append(y_labels_encoded[y_test_predictions[e]])\n",
        "    \n",
        "#Build array of predictions\n",
        "y_test_predictions_labels = np.array(y_test_predictions_labels)\n",
        "y_test_predictions_labels"
      ],
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['angry', 'sad', 'fear', 'calm', 'angry', 'surprised', 'fear',\n",
              "       'sad', 'sad', 'sad', 'disgust', 'angry', 'disgust', 'happy',\n",
              "       'happy', 'fear', 'disgust', 'disgust', 'neutral', 'happy',\n",
              "       'surprised', 'angry', 'surprised', 'neutral', 'happy', 'neutral',\n",
              "       'surprised', 'neutral', 'surprised', 'surprised', 'fear',\n",
              "       'surprised', 'calm', 'neutral', 'disgust', 'calm', 'angry',\n",
              "       'neutral', 'neutral', 'angry', 'sad', 'neutral', 'calm', 'angry',\n",
              "       'surprised', 'calm', 'disgust', 'angry', 'disgust', 'surprised',\n",
              "       'disgust', 'fear', 'fear', 'surprised', 'disgust', 'neutral',\n",
              "       'fear', 'fear', 'calm', 'fear', 'happy', 'disgust', 'surprised',\n",
              "       'disgust', 'fear', 'disgust', 'disgust', 'surprised', 'angry',\n",
              "       'disgust', 'angry', 'disgust', 'happy', 'disgust', 'angry', 'calm',\n",
              "       'fear', 'disgust', 'angry', 'happy', 'happy', 'fear', 'sad', 'sad',\n",
              "       'disgust', 'sad', 'disgust', 'calm', 'sad', 'angry', 'neutral',\n",
              "       'sad', 'happy', 'surprised', 'surprised', 'happy', 'sad', 'fear',\n",
              "       'sad', 'fear', 'surprised', 'sad', 'fear', 'disgust', 'surprised',\n",
              "       'disgust', 'neutral', 'happy', 'disgust', 'neutral', 'angry',\n",
              "       'disgust', 'surprised', 'fear', 'happy', 'happy', 'angry', 'happy',\n",
              "       'happy', 'happy', 'fear', 'neutral', 'fear', 'happy', 'fear',\n",
              "       'fear', 'sad', 'surprised', 'sad', 'surprised', 'fear', 'disgust',\n",
              "       'fear', 'neutral', 'surprised', 'sad', 'neutral', 'fear', 'happy',\n",
              "       'sad', 'neutral', 'surprised', 'fear', 'neutral', 'neutral', 'sad',\n",
              "       'calm', 'angry', 'surprised', 'fear', 'fear', 'calm', 'angry',\n",
              "       'disgust', 'surprised', 'angry', 'fear', 'sad', 'happy', 'neutral',\n",
              "       'neutral', 'fear', 'surprised', 'neutral', 'disgust', 'happy',\n",
              "       'happy', 'neutral', 'fear', 'fear', 'sad', 'surprised', 'angry',\n",
              "       'neutral', 'sad', 'disgust', 'sad', 'happy', 'fear', 'fear',\n",
              "       'disgust', 'surprised', 'neutral', 'surprised', 'angry', 'neutral',\n",
              "       'calm', 'sad', 'surprised', 'surprised', 'surprised', 'angry',\n",
              "       'angry', 'calm', 'angry', 'surprised', 'fear', 'disgust',\n",
              "       'surprised', 'disgust', 'sad', 'calm', 'surprised', 'surprised',\n",
              "       'angry', 'calm', 'disgust', 'fear', 'disgust', 'disgust',\n",
              "       'neutral', 'happy', 'sad', 'calm', 'neutral', 'sad', 'angry',\n",
              "       'angry', 'angry', 'sad', 'surprised', 'surprised', 'neutral',\n",
              "       'angry', 'calm', 'surprised', 'calm', 'disgust', 'sad',\n",
              "       'surprised', 'angry', 'fear', 'sad', 'angry', 'neutral', 'disgust',\n",
              "       'sad', 'fear', 'neutral', 'angry', 'disgust', 'surprised', 'angry',\n",
              "       'neutral', 'disgust', 'happy', 'fear', 'disgust', 'surprised',\n",
              "       'disgust', 'neutral', 'happy', 'angry', 'calm', 'angry', 'neutral',\n",
              "       'happy', 'neutral', 'surprised', 'sad', 'surprised', 'happy',\n",
              "       'sad', 'calm', 'surprised', 'happy', 'surprised', 'happy', 'happy',\n",
              "       'surprised', 'disgust', 'happy', 'angry', 'sad', 'surprised',\n",
              "       'sad', 'surprised', 'happy', 'sad', 'fear', 'fear', 'fear',\n",
              "       'neutral', 'neutral', 'surprised', 'disgust', 'surprised',\n",
              "       'neutral', 'disgust', 'calm', 'angry', 'sad', 'happy', 'happy',\n",
              "       'sad', 'surprised', 'surprised', 'calm', 'disgust', 'happy', 'sad',\n",
              "       'fear', 'happy', 'happy', 'calm', 'happy', 'sad', 'sad', 'disgust',\n",
              "       'neutral', 'angry', 'neutral', 'sad', 'happy', 'disgust',\n",
              "       'disgust', 'surprised', 'sad', 'angry', 'surprised', 'fear', 'sad',\n",
              "       'calm', 'sad', 'calm', 'angry', 'disgust', 'happy', 'sad',\n",
              "       'surprised', 'fear', 'surprised', 'angry', 'calm', 'surprised',\n",
              "       'fear', 'happy', 'fear', 'calm', 'surprised', 'angry', 'angry',\n",
              "       'happy', 'disgust', 'angry', 'happy', 'happy', 'angry', 'angry',\n",
              "       'happy', 'angry', 'fear', 'disgust', 'surprised', 'angry', 'angry',\n",
              "       'sad', 'sad', 'disgust', 'surprised', 'happy', 'neutral', 'angry',\n",
              "       'happy', 'disgust', 'neutral', 'disgust', 'disgust', 'calm', 'sad',\n",
              "       'calm', 'fear', 'fear', 'happy', 'disgust', 'calm', 'neutral',\n",
              "       'angry', 'disgust', 'angry', 'fear', 'surprised', 'surprised',\n",
              "       'fear', 'disgust', 'surprised', 'disgust', 'sad', 'fear', 'angry',\n",
              "       'calm', 'happy', 'fear', 'disgust', 'disgust', 'angry', 'fear',\n",
              "       'happy', 'sad', 'fear', 'disgust', 'disgust', 'surprised',\n",
              "       'surprised', 'fear', 'happy', 'neutral', 'sad', 'angry', 'calm',\n",
              "       'surprised', 'sad', 'fear', 'happy', 'sad', 'sad', 'happy',\n",
              "       'neutral', 'fear', 'disgust', 'fear', 'surprised', 'disgust',\n",
              "       'happy', 'calm', 'sad', 'surprised', 'calm', 'angry', 'fear',\n",
              "       'happy', 'happy', 'happy', 'happy', 'angry', 'calm', 'fear',\n",
              "       'disgust', 'disgust', 'surprised', 'disgust', 'sad', 'calm',\n",
              "       'neutral', 'happy', 'disgust', 'disgust', 'calm', 'sad', 'angry',\n",
              "       'sad', 'sad', 'happy', 'fear', 'surprised', 'sad', 'angry', 'sad',\n",
              "       'angry', 'calm', 'disgust', 'angry', 'calm', 'happy', 'fear',\n",
              "       'angry', 'fear', 'fear', 'angry', 'fear', 'neutral', 'neutral',\n",
              "       'disgust', 'sad', 'happy', 'disgust', 'fear', 'happy', 'happy',\n",
              "       'surprised', 'happy', 'fear', 'sad', 'neutral', 'happy',\n",
              "       'surprised', 'disgust', 'happy', 'surprised', 'surprised',\n",
              "       'disgust', 'calm', 'surprised', 'surprised', 'surprised', 'calm',\n",
              "       'disgust', 'angry', 'fear', 'sad', 'fear', 'angry', 'fear',\n",
              "       'disgust', 'disgust', 'calm', 'calm', 'sad', 'surprised', 'calm',\n",
              "       'fear', 'angry', 'fear', 'sad', 'calm', 'angry', 'fear', 'sad',\n",
              "       'happy', 'disgust', 'sad', 'sad', 'surprised', 'calm', 'sad',\n",
              "       'happy', 'happy', 'sad', 'angry', 'happy', 'happy', 'happy',\n",
              "       'happy', 'surprised', 'neutral', 'angry', 'neutral', 'fear', 'sad',\n",
              "       'calm', 'surprised', 'angry', 'happy', 'happy', 'sad', 'disgust',\n",
              "       'happy', 'disgust', 'happy', 'sad', 'disgust', 'angry', 'angry',\n",
              "       'disgust', 'disgust', 'surprised', 'surprised', 'calm', 'fear',\n",
              "       'fear', 'happy', 'disgust', 'calm', 'sad', 'angry', 'disgust',\n",
              "       'happy', 'sad'], dtype='<U9')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_AJIoZ-yTxiX",
        "outputId": "88f8ef4b-e813-4f12-f2a9-8e8afaaab6ed"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "\n",
        "#Build confusion matrix and see results\n",
        "confusion_matrix = confusion_matrix(y_test, y_test_predictions_labels)\n",
        "confusion_matrix"
      ],
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[60,  2,  3,  0,  3,  0,  0,  0],\n",
              "       [ 0, 33,  2,  2,  1,  1,  4,  1],\n",
              "       [ 4,  2, 63,  0,  1,  0,  1,  1],\n",
              "       [ 2,  0,  4, 60,  3,  0,  2,  2],\n",
              "       [ 6,  1,  1,  4, 66,  0,  2,  4],\n",
              "       [ 0,  6,  2,  0,  1, 48,  3,  0],\n",
              "       [ 0,  4,  1, 10,  1,  0, 61,  3],\n",
              "       [ 0,  0,  8,  0,  4,  1,  3, 71]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4mIeIGgHT0Vb",
        "outputId": "48c82fbf-72ad-42c5-8637-d865dc6a6333"
      },
      "source": [
        "#See confusion matrix shape\n",
        "confusion_matrix.shape"
      ],
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(8, 8)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bw02xv9wT2EU",
        "outputId": "7e4adfd7-c2f3-49f3-c6d1-fa9443b0f436"
      },
      "source": [
        "#Turn al correct answers into 0 to visualize errors better\n",
        "for i in range(confusion_matrix.shape[0]):\n",
        "    for j in range(confusion_matrix.shape[1]):\n",
        "        if i == j:\n",
        "            confusion_matrix[i,j] = 0\n",
        "\n",
        "# See results\n",
        "confusion_matrix"
      ],
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0,  2,  3,  0,  3,  0,  0,  0],\n",
              "       [ 0,  0,  2,  2,  1,  1,  4,  1],\n",
              "       [ 4,  2,  0,  0,  1,  0,  1,  1],\n",
              "       [ 2,  0,  4,  0,  3,  0,  2,  2],\n",
              "       [ 6,  1,  1,  4,  0,  0,  2,  4],\n",
              "       [ 0,  6,  2,  0,  1,  0,  3,  0],\n",
              "       [ 0,  4,  1, 10,  1,  0,  0,  3],\n",
              "       [ 0,  0,  8,  0,  4,  1,  3,  0]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "dEi1IHPjT6Xn",
        "outputId": "20abda9f-0b4b-4b38-d21f-216de424c55f"
      },
      "source": [
        "#Add labels to confusion matrix\n",
        "confusion_matrix = pd.DataFrame(confusion_matrix, columns=list(y_labels_encoded.values()), index=list(y_labels_encoded.values()))\n",
        "\n",
        "print(\"The rows represents the true values or observations\")\n",
        "print(\"The columns respresent the model's predictions\")\n",
        "\n",
        "#Print confusion matrix results\n",
        "confusion_matrix"
      ],
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The rows represents the true values or observations\n",
            "The columns respresent the model's predictions\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>angry</th>\n",
              "      <th>calm</th>\n",
              "      <th>disgust</th>\n",
              "      <th>fear</th>\n",
              "      <th>happy</th>\n",
              "      <th>neutral</th>\n",
              "      <th>sad</th>\n",
              "      <th>surprised</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>angry</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>calm</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>disgust</th>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fear</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>happy</th>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>neutral</th>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sad</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>surprised</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           angry  calm  disgust  fear  happy  neutral  sad  surprised\n",
              "angry          0     2        3     0      3        0    0          0\n",
              "calm           0     0        2     2      1        1    4          1\n",
              "disgust        4     2        0     0      1        0    1          1\n",
              "fear           2     0        4     0      3        0    2          2\n",
              "happy          6     1        1     4      0        0    2          4\n",
              "neutral        0     6        2     0      1        0    3          0\n",
              "sad            0     4        1    10      1        0    0          3\n",
              "surprised      0     0        8     0      4        1    3          0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "SxIBfk5BT8O5",
        "outputId": "3b3d128e-48f7-4ed1-8ed7-54e837b50bcb"
      },
      "source": [
        "#Plot confusion matrix with results\n",
        "ax = sns.heatmap(confusion_matrix, annot=True)"
      ],
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BcQc1UP0UDWW"
      },
      "source": [
        "# Save CNN Model"
      ],
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vAanD8hMUMTS",
        "outputId": "d08a5703-0642-4bcf-b14f-ddbfd42e4d31"
      },
      "source": [
        "from keras.models import model_from_json\n",
        "# serialize model to json\n",
        "json_model = CNN_model.to_json()\n",
        "#save the model architecture to JSON file\n",
        "with open('capstone_project_emotion_detection_final_version.json', 'w') as json_file:\n",
        "    json_file.write(json_model)\n",
        "#saving the weights of the model\n",
        "CNN_model.save_weights('capstone_project_emotion_detection_final_version.h5')\n",
        "#Model loss and accuracy\n",
        "print(\"Saved model to disk\")"
      ],
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Saved model to disk\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2XoxckegUN3M",
        "outputId": "caf92023-11a1-4b01-97e6-a7037d8f96be"
      },
      "source": [
        "# load json and create model\n",
        "json_file = open('capstone_project_emotion_detection_final_version.json', 'r')\n",
        "loaded_model_json = json_file.read()\n",
        "json_file.close()\n",
        "loaded_model = model_from_json(loaded_model_json)\n",
        "# load weights into new model\n",
        "loaded_model.load_weights(\"capstone_project_emotion_detection_final_version.h5\")\n",
        "print(\"Loaded model from disk\")"
      ],
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Loaded model from disk\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "inWZ5BFYUW-o",
        "outputId": "5bc39cb7-aee6-4c16-f617-d7395b17156d"
      },
      "source": [
        "from keras.initializers import glorot_uniform\n",
        "#Reading the model from JSON file\n",
        "with open('capstone_project_emotion_detection_final_version.json', 'r') as json_file:\n",
        "    json_savedModel= json_file.read()\n",
        "#load the model architecture \n",
        "model_load = keras.models.model_from_json(json_savedModel)\n",
        "model_load.summary()"
      ],
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv1d (Conv1D)              (None, 40, 16)            96        \n",
            "_________________________________________________________________\n",
            "conv1d_1 (Conv1D)            (None, 40, 32)            2592      \n",
            "_________________________________________________________________\n",
            "conv1d_2 (Conv1D)            (None, 40, 64)            10304     \n",
            "_________________________________________________________________\n",
            "conv1d_3 (Conv1D)            (None, 40, 128)           41088     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 40, 128)           0         \n",
            "_________________________________________________________________\n",
            "flatten (Flatten)            (None, 5120)              0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 128)               655488    \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 64)                8256      \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 8)                 520       \n",
            "=================================================================\n",
            "Total params: 718,344\n",
            "Trainable params: 718,344\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3U_pCFfDUZ5i"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}